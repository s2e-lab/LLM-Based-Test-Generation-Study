// GetRowTest.java
package scenario1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link GetRow}.
* It contains ten unit test cases for the {@link GetRow#getRow(List, int)} method.
*/
class GetRowTest {

    @Test
    void testGetRow() {
        List<Object> lst = new ArrayList<Object>();
        List<Object> row1 = new ArrayList<Object>();
        row1.add(1);
        row1.add(2);
        row1.add(3);
        row1.add(4);
        row1.add(5);
        row1.add(6);
        row1.add(7);
        row1.add(8);
        row1.add(9);
        row1.add(10);
        lst.add(row1);
        List<Object> row2 = new ArrayList<Object>();
        row2.add(11);
        row2.add(12);
        row2.add(13);
        row2.add(14);
        row2.add(15);
        row2.add(16);
        row2.add(17);
        row2.add(18);
        row2.add(19);
        row2.add(20);
        lst.add(row2);
        List<Object> row3 = new ArrayList<Object>();
        row3.add(21);
        row3.add(22);
        row3.add(23);
        row3.add(24);
        row3.add(25);
        row3.add(26);
        row3.add(27);
        row3.add(28);
        row3.add(29);
        row3.add(30);
        lst.add(row3);
        List<Object> row4 = new ArrayList<Object>();
        row4.add(31);
        row4.add(32);
        row4.add(33);
        row4.add(34);
        row4.add(35);
        row4.add(36);
        row4.add(37);
        row4.add(38);
        row4.add(39);
        row4.add(40);
        lst.add(row4);
        List<Object> row5 = new ArrayList<Object>();
        row5.add(41);
        row5.add(42);
        row5.add(43);
        row5.add(44);
        row5.add(45);
        row5.add(46);
        row5.add(47);
        row5.add(48);
        row5.add(49);
        row5.add(50);
        lst.add(row5);
        List<Object> row6 = new ArrayList<Object>();
        row6.add(51);
        row6.add(52);
        row6.add(53);
        row6.add(54);
        row6.add(55);
        row6.add(56);
        row6.add(57);
        row6.add(58);
        row6.add(59);
        row6.add(60);
        lst.add(row6);
        List<Object> row7 = new ArrayList<Object>();
        row7.add(61);
        row7.add(62);
        row7.add(63);
        row7.add(64);
        row7.add(65);
        row7.add(66);
        row7.add(67);
        row7.add(68);
        row7.add(69);
        row7.add(70);
        lst.add(row7);
        List<Object> row8 = new ArrayList<Object>();
        row8.add(71);
        row8.add(72);
        row8.add(73);
        row8.add(74);
        row8.add(75);
        row8.add(76);
        row8.add(77);
        row8.add(78);
        row8.add(79);
        row8.add(80);
        lst.add(row8);
        List<Object> row9 = new ArrayList<Object>();
        row9.add(81);
        row9.add(82);
        row9.add(83);
        row9.add(84);
        row9.add(85);
        row9.add(86);
        row9.add(87);
        row9.add(88);
        row9.add(89);
        row9.add(90);
        lst.add(row9);
        List<Object> row10 = new ArrayList<Object>();
        row10.add(91);
        row10.add(92);
        row10.add(93);
        row10.add(94);
        row10.add(95);
        row10.add(96);
        row10.add(97);
        row10.add(98);
        row10.add(99);
        row10.add(100);
        lst.add(row10);
        List<Object> result = GetRow.getRow(lst, 5);
        List<Object> expected = new ArrayList<Object>();
        List<Object> coordinate = new ArrayList<Object>();
        coordinate.add(0);
        coordinate.add(4);
        expected.add(coordinate);
        coordinate = new ArrayList<Object>();
        coordinate.add(1);
        coordinate.add(3);
        expected.add(coordinate);
        coordinate = new ArrayList<Object>();
        coordinate.add(2);
        coordinate.add(2);
        expected.add(coordinate);
        coordinate = new ArrayList<Object>();
        coordinate.add(3);
        coordinate.add(1);
        expected.add(coordinate);
        coordinate = new ArrayList<Object>();
        coordinate.add(4);
        coordinate.add(0);
        expected.add(coordinate);
        assertEquals(expected, result);
    }

    @Test
    void testGetRow2() {
        List<Object> lst = new ArrayList<Object>();
        List<Object> row1 = new ArrayList<Object>();
        row1.add(1);
        row1.add(2);
        row1.add(3);
        row1.add(4);
        row1.add(5);
        row1.add(6);
        row1.add(7);
        row1.add(8);
        row1.add(9);
        row1.add(10);
        lst.add(row1);
        List<Object> row2 = new ArrayList<Object>();
        row2.add(11);
        row2.add(12);
        row2.add(13);
        row2.add(14);
        row2.add(15);
        row2.add(16);
        row2.add(17);
        row2.add(18);
        row2.add(19);
        row2.add(20);
        lst.add(row2);
        List<Object> row3 = new ArrayList<Object>();
        row3.add(21);
        row3.add(22);
        row3.add(23);
        row3.add(24);
        row3.add(25);
        row3.add(26);
        row3.add(27);
        row3.add(28);
        row3.add(29);
        row3.add(30);
        lst.add(row3);
        List<Object> row4 = new ArrayList<Object>();
        row4.add(31);
        row4.add(32);
        row4.add(33);
        row4.add(34);
        row4.add(35);
        row4.add(36);
        row4.add(37);
        row4.add(38);
        row4.add(39);
        row4.add(40);
        lst.add(row4);
        List<Object> row5 = new ArrayList<Object>();
        row5.add(41);
        row5.add(42);
        row5.add(43);
        row5.add(44);
        row5.add(45);
        row5.add(46);
        row5.add(47);
        row5.add(48);
        row5.add(49);
        row5.add(50);
        lst.add(row5);
        List<Object> row6 = new ArrayList<Object>();
        row6.add(51);
        row6.add(52);
        row6.add(53);
        row6.add(54);
        row6.add(55);
        row6.add(56);
        row6.add(57);
        row6.add(58);
        row6.add(59);
        row6.add(60);
        lst.add(row6