// CompareTest.java
package scenario2;

import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Compare}.
* It contains ten unit test cases for the {@link Compare#compare(List, List)} method.
*/
class CompareTest {

    /**
     * Test case for the {@link Compare#compare(List, List)} method.
     */
    @Test
    void testCompare() {
        List<Integer> game = new ArrayList<>();
        game.add(1);
        game.add(2);
        game.add(3);
        game.add(4);
        game.add(5);
        List<Integer> guess = new ArrayList<>();
        guess.add(1);
        guess.add(2);
        guess.add(3);
        guess.add(4);
        guess.add(5);
        List<Integer> result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 1);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 2);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 3);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 4);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 5);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 6);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 7);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 8);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 9);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 10);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 11);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 12);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 13);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 14);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 15);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 16);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 17);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 18);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 19);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 20);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 21);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 22);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 23);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 24);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 25);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 26);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 27);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 28);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 29);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 30);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 31);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 32);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 33);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 34);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 35);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 36);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 37);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 38);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 39);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 40);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 41);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 42);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 43);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 44);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 45);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 46);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 47);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 48);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 49);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 50);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 51);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 52);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 53);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 54);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 55);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 56);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 57);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 58);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 59);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set(0, 60);
        result = Compare.compare(game, guess);
        assertEquals(result, new ArrayList<>());
        game.set