// StringMatchesGuardConditionTest.java
package uk.me.jockmacmad.jstate.state;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link StringMatchesGuardCondition}.
* It contains ten unit test cases for the {@link StringMatchesGuardCondition#evaluate(Object)} method.
*/
class StringMatchesGuardConditionTest {

    /**
    * Test of evaluate method, of class StringMatchesGuardCondition.
    */
    @Test
    void testEvaluate() {
        System.out.println("evaluate");
        StringMatchesGuardCondition instance = new StringMatchesGuardCondition();
        assertTrue(instance.evaluate("Hello World"));
        assertTrue(instance.evaluate("Hello World!"));
        assertTrue(instance.evaluate("Hello World!!"));
        assertTrue(instance.evaluate("Hello World!!!"));
        assertTrue(instance.evaluate("Hello World!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello World!!!!!!!!!!!!!!!"));
        assertTrue(instance.evaluate("Hello