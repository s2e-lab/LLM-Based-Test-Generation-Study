// GameTest.java
package net.virtualinfinity.atrobots.game;

import net.virtualinfinity.atrobots.arena.FrameBuilder;
import net.virtualinfinity.atrobots.arena.RoundState;
import net.virtualinfinity.atrobots.arena.SimulationObserver;
import net.virtualinfinity.atrobots.compiler.RobotFactory;
import net.virtualinfinity.atrobots.robot.FinalRobotScore;
import net.virtualinfinity.atrobots.robot.Robot;
import net.virtualinfinity.atrobots.robot.RobotScore;
import net.virtualinfinity.atrobots.robot.RobotScoreKeeper;
import java.util.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Game}.
* It contains ten unit test cases for the {@link Game#stepRound()} method.
*/
class GameTest {

    /**
     * Test of {@link Game#stepRound()} method, of class Game.
     */
    @Test
    void testStepRound() {
        final Game game = new Game();
        final RobotFactory robotFactory = new RobotFactory();
        final Robot robot = robotFactory.createRobot("TestRobot");
        final RobotScoreKeeper scoreKeeper = new RobotScoreKeeper();
        final SimulationObserver simulationObserver = new SimulationObserver() {
            @Override
            public void onRoundStateChanged(RoundState roundState) {
                System.out.println(roundState);
            }
        };
        final FrameBuilder frameBuilder = new FrameBuilder();
        game.setRound(new Round(robot, scoreKeeper, simulationObserver, frameBuilder));
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game.stepRound();
        game