// PluckTest.java
package scenario2;

import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Pluck}.
* It contains ten unit test cases for the {@link Pluck#pluck(List)} method.
*/
class PluckTest {

	@Test
	void testPluck() {
		List<Object> arr = new ArrayList<Object>();
		arr.add(1);
		arr.add(2);
		arr.add(3);
		arr.add(4);
		arr.add(5);
		arr.add(6);
		arr.add(7);
		arr.add(8);
		arr.add(9);
		arr.add(10);
		List<Object> expected = new ArrayList<Object>();
		expected.add(2);
		expected.add(1);
		assertEquals(expected, Pluck.pluck(arr));
	}
	
	@Test
	void testPluck2() {
		List<Object> arr = new ArrayList<Object>();
		arr.add(1);
		arr.add(2);
		arr.add(3);
		arr.add(4);
		arr.add(5);
		arr.add(6);
		arr.add(7);
		arr.add(8);
		arr.add(9);
		arr.add(10);
		arr.add(11);
		arr.add(12);
		arr.add(13);
		arr.add(14);
		arr.add(15);
		arr.add(16);
		arr.add(17);
		arr.add(18);
		arr.add(19);
		arr.add(20);
		List<Object> expected = new ArrayList<Object>();
		expected.add(2);
		expected.add(1);
		assertEquals(expected, Pluck.pluck(arr));
	}
	
	@Test
	void testPluck3() {
		List<Object> arr = new ArrayList<Object>();
		arr.add(1);
		arr.add(2);
		arr.add(3);
		arr.add(4);
		arr.add(5);
		arr.add(6);
		arr.add(7);
		arr.add(8);
		arr.add(9);
		arr.add(10);
		arr.add(11);
		arr.add(12);
		arr.add(13);
		arr.add(14);
		arr.add(15);
		arr.add(16);
		arr.add(17);
		arr.add(18);
		arr.add(19);
		arr.add(20);
		arr.add(21);
		arr.add(22);
		arr.add(23);
		arr.add(24);
		arr.add(25);
		arr.add(26);
		arr.add(27);
		arr.add(28);
		arr.add(29);
		arr.add(30);
		arr.add(31);
		arr.add(32);
		arr.add(33);
		arr.add(34);
		arr.add(35);
		arr.add(36);
		arr.add(37);
		arr.add(38);
		arr.add(39);
		arr.add(40);
		arr.add(41);
		arr.add(42);
		arr.add(43);
		arr.add(44);
		arr.add(45);
		arr.add(46);
		arr.add(47);
		arr.add(48);
		arr.add(49);
		arr.add(50);
		arr.add(51);
		arr.add(52);
		arr.add(53);
		arr.add(54);
		arr.add(55);
		arr.add(56);
		arr.add(57);
		arr.add(58);
		arr.add(59);
		arr.add(60);
		arr.add(61);
		arr.add(62);
		arr.add(63);
		arr.add(64);
		arr.add(65);
		arr.add(66);
		arr.add(67);
		arr.add(68);
		arr.add(69);
		arr.add(70);
		arr.add(71);
		arr.add(72);
		arr.add(73);
		arr.add(74);
		arr.add(75);
		arr.add(76);
		arr.add(77);
		arr.add(78);
		arr.add(79);
		arr.add(80);
		arr.add(81);
		arr.add(82);
		arr.add(83);
		arr.add(84);
		arr.add(85);
		arr.add(86);
		arr.add(87);
		arr.add(88);
		arr.add(89);
		arr.add(90);
		arr.add(91);
		arr.add(92);
		arr.add(93);
		arr.add(94);
		arr.add(95);
		arr.add(96);
		arr.add(97);
		arr.add(98);
		arr.add(99);
		arr.add(100);
		List<Object> expected = new ArrayList<Object>();
		expected.add(2);
		expected.add(1);
		assertEquals(expected, Pluck.pluck(arr));
	}
	
	@Test
	void testPluck4() {
		List<Object> arr = new ArrayList<Object>();
		arr.add(1);
		arr.add(2);
		arr.add(3);
		arr.add(4);
		arr.add(5);
		arr.add(6);
		arr.add(7);
		arr.add(8);
		arr.add(9);
		arr.add(10);
		arr.add(11);
		arr.add(12);
		arr.add(13);
		arr.add(14);
		arr.add(15);
		arr.add(16);
		arr.add(17);
		arr.add(18);
		arr.add(19);
		arr.add(20);
		arr.add(21);
		arr.add(22);
		arr.add(23);
		arr.add(24);
		arr.add(25);
		arr.add(26);
		arr.add(27);
		arr.add(28);
		arr.add(29);
		arr.add(30);
		arr.add(31);
		arr.add(32);
		arr.add(33);
		arr.add(34);
		arr.add(35);
		arr.add(36);
		arr.add(37);
		arr.add(38);
		arr.add(39);
		arr.add(40);
		arr.add(41);
		arr.add(42);
		arr.add(43);
		arr.add(44);
		arr.add(45);
		arr.add(46);
		arr.add(47);
		arr.add(48);
		arr.add(49);
		arr.add(50);
		arr.add(51);
		arr.add(52);
		arr.add(53);
		arr.add(54);
		arr.add(55);
		arr.add(56);
		arr.add(57);
		arr.add(58);
		arr.add(59);
		arr.add(60);
		arr.add(61);
		arr.add(62);
		arr.add(63);
		arr.add(64);
		arr.add(65);
		arr.add(66);
		arr.add(67);
		arr.add(68);
		arr.add(69);
		arr.add(70);
		arr.add(71);
		arr.add(72);
		arr.add(73);
		arr.add(74);
		arr.add(75);
		arr.add(76);
		arr.add(77);
		arr.add(78);
		arr.add(79);
		arr.add(80);
		arr.add(81);
		arr.add(82);
		arr.add(83);
		arr.add(84);
		arr.add(85);
		arr.add(86);
		arr.add(87);
		arr.add(88);
		arr.add(89);
		arr.add(90);
		arr.add(91);
		arr.add(92);
		arr.add(93);
		arr.add(94);
		arr.add(95);
		arr.add(96);
		arr.add(97);
		arr.add(98);
		arr.add(99);
		arr.add(100);
		arr.add(101);
		arr.add(102);
		arr.add(103);
		arr.add(104);
		arr.add(105);
		arr.add(106);
		arr.add(107);
		arr.add(108);
		arr.add(109);
		arr.add(110);
		arr.add(111);
		arr.add(112);
		arr.add(113);
		arr.add(114);
		arr.add(115);
		arr.add(116);
		arr.add(117);
		arr.add(118);
		arr.add(119);
		arr.add(120);
		arr.add(121);
		arr.add(122);
		arr.add(123);
		arr.add(124);
		arr.add(125);
		arr.add(126);
		arr.add(127);
		arr.add(128);
		arr.add(129);
		arr.add(130);
		arr.add(131);
		arr.add(132);
		arr.add(133);
		arr.add(134);
		arr.add(135);
		arr.add(136);
		arr.add(137);
		arr.add(138);
		arr.add(139);
		arr.add(140);
		arr.add(141);
		arr.add(142);
		arr.add(143);
		arr.add(144);
		arr.add(145);
		arr.add(146);
		arr.add(147);
		arr.add(148);
		arr.add(149);
		arr.add(150);
		arr.add(151);
		arr.add(152);
		arr.add(153);
		arr.add(154);
		arr.add(155);
		arr.add(156);
		arr.add(157);
		arr.add(158);
		arr.add(159);
		arr.add(160);
		arr.add(161);
		arr.add(162);
		arr.add(163);
		arr.add(164);
		arr.add(165);
		arr.add(166);
		arr.add(167);
		arr.add(168);
		arr.add(169);
		arr.add(170);
		arr.add(171);
		arr.add(172);
		arr.add(173);
		arr.add(174);
		arr.add(175);
		arr.add(176);
		arr.add(177);
		arr.add(178);
		arr.add(179);
		arr.add(180);
		arr.add(181);
		arr.add(182);
		arr.add(183);
		arr.add(184);
		arr.add(185);
		arr.add(186);
		arr.add(187);
		arr.add(188);
		arr.add(189);
		arr.add(190);
		arr.add(191);
		arr.add(192);
		arr.add(193);
		arr.add(194);
		arr.add(195);
		arr.add(196);
		arr.add(197);
		arr.add(198);
		arr.add(199);
		arr.add(200);
		List<Object> expected = new ArrayList<Object>();
		expected.add(2);
		expected.add(1);
		assertEquals(expected, Pluck.pluck(arr));
	}
	
	@Test
	void testPluck5() {
		List<Object> arr = new ArrayList<Object>();
		arr.add(1);
		arr.add(2);
		arr.add(3);
		arr.add(4);
		arr.add(5);
		arr.add(6);
		arr.add(7);
		arr.add(8);
		arr.add(9);
		arr.add(10);
		arr.add(11);
		arr.add(12);
		arr.add(13);
		arr.add(14);
		arr.add(15);
		arr.add(16);
		arr.add(17);
		arr.add(18);
		arr.add(19);
		arr.add(20);
		arr.add(21);
		arr.add(22);
		arr.add(23);
		arr.add(24);
		arr.add(25);
		arr.add(26);
		arr.add(27);
		arr.add(28);
		arr.add(29);
		arr.add(30);
		arr.add(31);
		arr.add(32);
		arr.add(33);
		arr.add(34);
		arr.add(35);
		arr.add(36);
		arr.add(37);
		arr.add(38);
		arr.add(39);
		arr.add(40);
		arr.add(41);
		arr.add(42);
		arr.add(43);
		arr.add(44);
		arr.add(45);
		arr.add(46);
		arr.add(47);
		arr.add(48);
		arr.add(49);
		arr.add(50);
		arr.add(51);
		arr.add(52);
		arr.add(53);
		arr.add(54);
		arr.add(55);
		arr.add(56);
		arr.add(57);
		arr.add(58);
		arr.add(59);
		arr.add(60);
		arr.add(61);
		arr.add(62);
		arr.add(63);
		arr.add(64);
		arr.add(65);
		arr.add(66);
		arr.add(67);
		arr.add(68);
		arr.add(69);
		arr.add(70);
		arr.add(71);
		arr.add(72);
		arr.add(73);
		arr.