// VerticalBlock_3Test.java
package glengineer.blocks;

import glengineer.positions.*;
import java.util.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link VerticalBlock}.
* It contains ten unit test cases for the {@link VerticalBlock#extractParallelSubblocks()} method.
*/
class VerticalBlock_3Test {

    @Test
    void extractParallelSubblocks_1() {
        //given:
        Scheme scheme = new Scheme();
        scheme.addWord("a");
        scheme.addWord("b");
        scheme.addWord("c");
        scheme.addWord("d");
        scheme.addWord("e");
        scheme.addWord("f");
        scheme.addWord("g");
        scheme.addWord("h");
        scheme.addWord("i");
        scheme.addWord("j");
        scheme.addWord("k");
        scheme.addWord("l");
        scheme.addWord("m");
        scheme.addWord("n");
        scheme.addWord("o");
        scheme.addWord("p");
        scheme.addWord("q");
        scheme.addWord("r");
        scheme.addWord("s");
        scheme.addWord("t");
        scheme.addWord("u");
        scheme.addWord("v");
        scheme.addWord("w");
        scheme.addWord("x");
        scheme.addWord("y");
        scheme.addWord("z");
        scheme.addWord("A");
        scheme.addWord("B");
        scheme.addWord("C");
        scheme.addWord("D");
        scheme.addWord("E");
        scheme.addWord("F");
        scheme.addWord("G");
        scheme.addWord("H");
        scheme.addWord("I");
        scheme.addWord("J");
        scheme.addWord("K");
        scheme.addWord("L");
        scheme.addWord("M");
        scheme.addWord("N");
        scheme.addWord("O");
        scheme.addWord("P");
        scheme.addWord("Q");
        scheme.addWord("R");
        scheme.addWord("S");
        scheme.addWord("T");
        scheme.addWord("U");
        scheme.addWord("V");
        scheme.addWord("W");
        scheme.addWord("X");
        scheme.addWord("Y");
        scheme.addWord("Z");
        scheme.addWord("0");
        scheme.addWord("1");
        scheme.addWord("2");
        scheme.addWord("3");
        scheme.addWord("4");
        scheme.addWord("5");
        scheme.addWord("6");
        scheme.addWord("7");
        scheme.addWord("8");
        scheme.addWord("9");
        scheme.addWord("!");
        scheme.addWord("?");
        scheme.addWord(".");
        scheme.addWord(",");
        scheme.addWord(":");
        scheme.addWord(";");
        scheme.addWord("(");
        scheme.addWord(")");
        scheme.addWord("[");
        scheme.addWord("]");
        scheme.addWord("{");
        scheme.addWord("}");
        scheme.addWord("<");
        scheme.addWord(">");
        scheme.addWord("=");
        scheme.addWord("_");
        scheme.addWord("-");
        scheme.addWord("/");
        scheme.addWord("\\");
        scheme.addWord("~");
        scheme.addWord("`");
        scheme.addWord("@");
        scheme.addWord("#");
        scheme.addWord("$");
        scheme.addWord("%");
        scheme.addWord("^");
        scheme.addWord("&");
        scheme.addWord("*");
        scheme.addWord("+");
        scheme.addWord("'");
        scheme.addWord("\"");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme.addWord(" ");
        scheme