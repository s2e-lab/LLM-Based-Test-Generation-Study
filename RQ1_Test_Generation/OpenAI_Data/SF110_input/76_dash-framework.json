[
	{
		"original_code": "// DefaultProvider.java\n/*\r\n* Copyright (C) 2005  John D. Heintz\r\n* \r\n* This program is free software; you can redistribute it and/or\r\n* modify it under the terms of the GNU Library General Public License\r\n* as published by the Free Software Foundation; either version 2.1\r\n* of the License.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Library General Public License for more details.\r\n*\r\n* John D. Heintz can be reached at: jheintz@pobox.com \r\n*/\r\npackage dash.providerFactory;\r\n\r\nimport dash.ComponentProvider;\r\nimport dash.Provider;\r\n\r\n/**\r\n * @author jheintz\r\n */\r\npublic class DefaultProvider implements Provider {\r\n\r\n    /**\r\n     * Strategy:\r\n     * 1. Check ProviderFactory.threadLocalProvider\r\n     * 2. Check ComponentProvider.lookup\r\n     *  (TODO insert checks for classpath, jndi, ... lookups)\r\n     * 3. Return null\r\n     *\r\n     * @see binding.provider.Provider#lookup(java.lang.Class, java.lang.String, binding.provider.ComponentProvider)\r\n     */\r\n    public Object lookup(Class klazz, String key, ComponentProvider forTarget) {\r\n        Object result = null;\r\n        Provider threadLocalProvider = ProviderFactory.threadLocalProvider.get();\r\n        if (threadLocalProvider != null) {\r\n            result = threadLocalProvider.lookup(klazz, key, forTarget);\r\n        }\r\n        if (result == null) {\r\n            result = forTarget.lookup(klazz, key, forTarget);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/76_dash-framework/src/main/java/dash/providerFactory/DefaultProviderTest.java",
		"test_prompt": "// DefaultProviderTest.java\npackage dash.providerFactory;\n\nimport dash.ComponentProvider;\nimport dash.Provider;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DefaultProvider}.\n* It contains ten unit test cases for the {@link DefaultProvider#lookup(Class, String, ComponentProvider)} method.\n*/\nclass DefaultProviderTest {"
	},
	{
		"original_code": "// ProviderFactory.java\n/*\r\n* Copyright (C) 2005  John D. Heintz\r\n* \r\n* This program is free software; you can redistribute it and/or\r\n* modify it under the terms of the GNU Library General Public License\r\n* as published by the Free Software Foundation; either version 2.1\r\n* of the License.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Library General Public License for more details.\r\n*\r\n* John D. Heintz can be reached at: jheintz@pobox.com \r\n*/\r\npackage dash.providerFactory;\r\n\r\nimport dash.ComponentProvider;\r\nimport dash.Provider;\r\n\r\n/**\r\n * @author jheintz\r\n */\r\npublic class ProviderFactory {\r\n\r\n    private static Provider _globalProvider;\r\n\r\n    public static final ThreadLocal<Provider> threadLocalProvider = new ThreadLocal<Provider>();\r\n\r\n    private static class ProviderBuilder {\r\n\r\n        public static Provider _buildProvider = new DefaultProvider();\r\n    }\r\n\r\n    public static Provider getProvider() {\r\n        if (_globalProvider == null) {\r\n            return ProviderBuilder._buildProvider;\r\n        } else {\r\n            return _globalProvider;\r\n        }\r\n    }\r\n\r\n    public static synchronized void setProvider(Provider defaultProvider) {\r\n        if (_globalProvider != null)\r\n            throw new IllegalArgumentException(\"Provider is already set!\");\r\n        _globalProvider = defaultProvider;\r\n    }\r\n\r\n    public static Object lookup(Class ofType, String key, ComponentProvider forTarget) {\r\n        Provider provider = ProviderFactory.getProvider();\r\n        Object result = provider.lookup(ofType, key, forTarget);\r\n        return result;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/76_dash-framework/src/main/java/dash/providerFactory/ProviderFactoryTest0.java",
		"test_prompt": "// ProviderFactoryTest0.java\npackage dash.providerFactory;\n\nimport dash.ComponentProvider;\nimport dash.Provider;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ProviderFactory}.\n* It contains ten unit test cases for the {@link ProviderFactory#getProvider()} method.\n*/\nclass ProviderFactoryTest0 {"
	},
	{
		"original_code": "// ProviderFactory.java\n/*\r\n* Copyright (C) 2005  John D. Heintz\r\n* \r\n* This program is free software; you can redistribute it and/or\r\n* modify it under the terms of the GNU Library General Public License\r\n* as published by the Free Software Foundation; either version 2.1\r\n* of the License.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Library General Public License for more details.\r\n*\r\n* John D. Heintz can be reached at: jheintz@pobox.com \r\n*/\r\npackage dash.providerFactory;\r\n\r\nimport dash.ComponentProvider;\r\nimport dash.Provider;\r\n\r\n/**\r\n * @author jheintz\r\n */\r\npublic class ProviderFactory {\r\n\r\n    private static Provider _globalProvider;\r\n\r\n    public static final ThreadLocal<Provider> threadLocalProvider = new ThreadLocal<Provider>();\r\n\r\n    private static class ProviderBuilder {\r\n\r\n        public static Provider _buildProvider = new DefaultProvider();\r\n    }\r\n\r\n    public static Provider getProvider() {\r\n        if (_globalProvider == null) {\r\n            return ProviderBuilder._buildProvider;\r\n        } else {\r\n            return _globalProvider;\r\n        }\r\n    }\r\n\r\n    public static synchronized void setProvider(Provider defaultProvider) {\r\n        if (_globalProvider != null)\r\n            throw new IllegalArgumentException(\"Provider is already set!\");\r\n        _globalProvider = defaultProvider;\r\n    }\r\n\r\n    public static Object lookup(Class ofType, String key, ComponentProvider forTarget) {\r\n        Provider provider = ProviderFactory.getProvider();\r\n        Object result = provider.lookup(ofType, key, forTarget);\r\n        return result;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/76_dash-framework/src/main/java/dash/providerFactory/ProviderFactoryTest1.java",
		"test_prompt": "// ProviderFactoryTest1.java\npackage dash.providerFactory;\n\nimport dash.ComponentProvider;\nimport dash.Provider;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ProviderFactory}.\n* It contains ten unit test cases for the {@link ProviderFactory#lookup(Class, String, ComponentProvider)} method.\n*/\nclass ProviderFactoryTest1 {"
	},
	{
		"original_code": "// TestProvider.java\n/*\r\n* Copyright (C) 2005  John D. Heintz\r\n* \r\n* This program is free software; you can redistribute it and/or\r\n* modify it under the terms of the GNU Library General Public License\r\n* as published by the Free Software Foundation; either version 2.1\r\n* of the License.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Library General Public License for more details.\r\n*\r\n* John D. Heintz can be reached at: jheintz@pobox.com \r\n*/\r\npackage dash.examples.provider;\r\n\r\nimport dash.ComponentProvider;\r\nimport dash.Provider;\r\nimport dash.examples.component.TestComponent;\r\n\r\npublic class TestProvider implements Provider {\r\n\r\n    public Object lookup(Class klazz, String key, ComponentProvider forTarget) {\r\n        return new TestComponent();\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/76_dash-framework/src/main/java/dash/examples/provider/TestProviderTest.java",
		"test_prompt": "// TestProviderTest.java\npackage dash.examples.provider;\n\nimport dash.ComponentProvider;\nimport dash.Provider;\nimport dash.examples.component.TestComponent;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link TestProvider}.\n* It contains ten unit test cases for the {@link TestProvider#lookup(Class, String, ComponentProvider)} method.\n*/\nclass TestProviderTest {"
	}
]