[
	{
		"original_code": "// QuotaValue.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport java.math.BigDecimal;\n\n/**\n * POJO class for parsed quota values.\n *\n * @author Alois Belaska\n */\npublic class QuotaValue {\n\n    private Quota quota;\n\n    private boolean okay = false;\n\n    private BigDecimal percent = BigDecimal.ZERO;\n\n    private String unit = \"\";\n\n    private BigDecimal value = BigDecimal.ZERO;\n\n    private BigDecimal limit = BigDecimal.ZERO;\n\n    public Quota getQuota() {\n        return quota;\n    }\n\n    public void setQuota(Quota quota) {\n        this.quota = quota;\n    }\n\n    public boolean isOkay() {\n        return okay;\n    }\n\n    public void setOkay(boolean okay) {\n        this.okay = okay;\n    }\n\n    public BigDecimal getPercent() {\n        return percent;\n    }\n\n    public void setPercent(BigDecimal percent) {\n        this.percent = percent;\n    }\n\n    public String getUnit() {\n        return unit;\n    }\n\n    public void setUnit(String unit) {\n        this.unit = unit;\n    }\n\n    public BigDecimal getValue() {\n        return value;\n    }\n\n    public void setValue(BigDecimal value) {\n        this.value = value;\n    }\n\n    public BigDecimal getLimit() {\n        return limit;\n    }\n\n    public void setLimit(BigDecimal limit) {\n        this.limit = limit;\n    }\n}\n",
		"id": "/EvoSuiteBenchmark/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/appengine/QuotaValue.java",
		"test_prompt": "// QuotaValueTest.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport java.math.BigDecimal;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link QuotaValue}.\n* It contains ten unit test cases for the {@link QuotaValue#isOkay()} method.\n*/\nclass QuotaValueTest {"
	},
	{
		"original_code": "// Manager.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport net.sf.gaeappmanager.google.LogonHelper;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.impl.client.DefaultHttpClient;\n\n/**\n * Google App Engine application manager.\n *\n * @author Alois Belaska\n */\npublic class Manager {\n\n    /**\n     * Retrieve quota details of application deployed in Google App Engine.\n     *\n     * @param userid\n     *            full gmail address for user\n     * @param password\n     *            gmail account password\n     * @param source\n     *            name of application requesting quota details\n     * @param application\n     *            appspot application name\n     * @return quota details of application\n     * @throws Exception\n     *             in case of failure\n     */\n    public static QuotaDetails retrieveAppQuotaDetails(String userid, String password, String source, String application) throws Exception {\n        String authCookie = LogonHelper.loginToGoogleAppEngine(userid, password, source);\n        DefaultHttpClient client = new DefaultHttpClient();\n        try {\n            HttpGet get = new HttpGet(\"https://appengine.google.com/dashboard/quotadetails?&app_id=\" + application);\n            get.setHeader(\"Cookie\", \"ACSID=\" + authCookie);\n            HttpResponse response = client.execute(get);\n            return new QuotaDetailsParser().parse(response.getEntity().getContent());\n        } finally {\n            client.getConnectionManager().shutdown();\n        }\n    }\n}\n",
		"id": "/EvoSuiteBenchmark/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/appengine/Manager.java",
		"test_prompt": "// ManagerTest.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport net.sf.gaeappmanager.google.LogonHelper;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Manager}.\n* It contains ten unit test cases for the {@link Manager#retrieveAppQuotaDetails(String, String, String, String)} method.\n*/\nclass ManagerTest {"
	},
	{
		"original_code": "// QuotaDetailsParser.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport java.io.InputStream;\nimport java.math.BigDecimal;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport org.dom4j.Attribute;\nimport org.dom4j.Document;\nimport org.dom4j.Element;\nimport org.dom4j.io.DOMReader;\nimport org.w3c.tidy.Tidy;\n\n/**\n * Parser of quota details HTML page.\n *\n * @author Alois Belaska\n */\npublic class QuotaDetailsParser {\n\n    /**\n     * @param el\n     *            processed element\n     * @param tag\n     *            tag name (td, ...)\n     * @param index\n     *            index of requested tag, begins with 0\n     */\n    private Element getNthElementByTag(Element el, String tag, int index) {\n        int idx = 0;\n        for (Object obj : el.elements()) {\n            Element e = (Element) obj;\n            if (e.getName().equals(tag) && idx++ == index) {\n                return e;\n            }\n        }\n        return null;\n    }\n\n    private Element getElementByTagAndValue(Element el, String tag, String value) {\n        if (el.getName().equals(tag) && el.getStringValue().equals(value)) {\n            return el;\n        }\n        for (Object obj : el.elements()) {\n            Element result = getElementByTagAndValue((Element) obj, tag, value);\n            if (result != null) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    private Element getElementById(Element el, String id) {\n        if (el.attributeCount() > 0) {\n            Attribute attr = el.attribute(\"id\");\n            if (attr != null && attr.getValue().equals(id)) {\n                return el;\n            }\n        }\n        for (Object obj : el.elements()) {\n            Element result = getElementById((Element) obj, id);\n            if (result != null) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    private QuotaValue parseValue(Element parentEl, Quota quota) {\n        QuotaValue qVal = new QuotaValue();\n        qVal.setQuota(quota);\n        Element valEl = getElementByTagAndValue(parentEl, \"td\", quota.getQuotaName());\n        if (valEl == null) {\n            return null;\n        }\n        Element el = getNthElementByTag(valEl.getParent(), \"td\", 2);\n        if (el == null) {\n            return null;\n        }\n        qVal.setPercent(new BigDecimal(el.getStringValue().replaceAll(\"%\", \"\")));\n        el = getNthElementByTag(valEl.getParent(), \"td\", 3);\n        if (el == null) {\n            return null;\n        }\n        String[] parts = el.getStringValue().split(\" \");\n        if (parts.length < 3) {\n            return null;\n        }\n        qVal.setValue(new BigDecimal(parts[0]));\n        qVal.setLimit(new BigDecimal(parts[2]));\n        StringBuilder unitBuilder = new StringBuilder();\n        for (int i = 3; i < parts.length; i++) {\n            if (unitBuilder.length() > 0) {\n                unitBuilder.append(\" \");\n            }\n            unitBuilder.append(parts[i]);\n        }\n        qVal.setUnit(unitBuilder.toString());\n        el = getNthElementByTag(valEl.getParent(), \"td\", 4);\n        if (el == null) {\n            return null;\n        }\n        qVal.setOkay(el.getStringValue().equals(\"Okay\"));\n        return qVal;\n    }\n\n    private void parseRefreshNote(Element parentEl, QuotaDetails result) {\n        Element el = getElementById(parentEl, \"ae-quota-refresh-note\");\n        if (el == null) {\n            return;\n        }\n        Pattern pattern = Pattern.compile(\"Quotas are reset every ([0-9]*) hours. Next reset: ([0-9]*) hours\");\n        Matcher matcher = pattern.matcher(el.getStringValue());\n        if (matcher.matches()) {\n            result.setResetIntervalHours(Integer.valueOf(matcher.group(1)));\n            result.setNextResetWithinHours(Integer.valueOf(matcher.group(2)));\n        }\n    }\n\n    public QuotaDetails parse(InputStream inputStream) {\n        QuotaDetails result = new QuotaDetails();\n        Tidy tidy = new Tidy();\n        tidy.setXHTML(true);\n        tidy.setShowWarnings(false);\n        tidy.setQuiet(true);\n        tidy.setXmlOut(false);\n        org.w3c.dom.Document xhtml = tidy.parseDOM(inputStream, null);\n        DOMReader xmlReader = new DOMReader();\n        Document document = xmlReader.read(xhtml);\n        Element quotaDetailsElement = getElementById(document.getRootElement(), \"ae-quota-details\");\n        parseRefreshNote(quotaDetailsElement, result);\n        for (Quota quota : Quota.values()) {\n            QuotaValue qValue = parseValue(quotaDetailsElement, quota);\n            if (qValue != null) {\n                result.getValues().add(qValue);\n            }\n        }\n        return result;\n    }\n}\n",
		"id": "/EvoSuiteBenchmark/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/appengine/QuotaDetailsParser.java",
		"test_prompt": "// QuotaDetailsParserTest.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport java.io.InputStream;\nimport java.math.BigDecimal;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport org.dom4j.Attribute;\nimport org.dom4j.Document;\nimport org.dom4j.Element;\nimport org.dom4j.io.DOMReader;\nimport org.w3c.tidy.Tidy;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link QuotaDetailsParser}.\n* It contains ten unit test cases for the {@link QuotaDetailsParser#parse(InputStream)} method.\n*/\nclass QuotaDetailsParserTest {"
	},
	{
		"original_code": "// QuotaDetails.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Quota details of application.\n *\n * @author Alois Belaska\n */\npublic class QuotaDetails {\n\n    private int resetIntervalHours = -1;\n\n    private int nextResetWithinHours = -1;\n\n    private List<QuotaValue> values = new ArrayList<QuotaValue>();\n\n    public int getResetIntervalHours() {\n        return resetIntervalHours;\n    }\n\n    public void setResetIntervalHours(int resetIntervalHours) {\n        this.resetIntervalHours = resetIntervalHours;\n    }\n\n    public int getNextResetWithinHours() {\n        return nextResetWithinHours;\n    }\n\n    public void setNextResetWithinHours(int nextResetWithinHours) {\n        this.nextResetWithinHours = nextResetWithinHours;\n    }\n\n    public List<QuotaValue> getValues() {\n        return values;\n    }\n\n    public QuotaValue findQuota(Quota findQuota) {\n        for (QuotaValue qValue : values) {\n            if (qValue.getQuota().equals(findQuota)) {\n                return qValue;\n            }\n        }\n        return null;\n    }\n}\n",
		"id": "/EvoSuiteBenchmark/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/appengine/QuotaDetails.java",
		"test_prompt": "// QuotaDetailsTest.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link QuotaDetails}.\n* It contains ten unit test cases for the {@link QuotaDetails#findQuota(Quota)} method.\n*/\nclass QuotaDetailsTest {"
	},
	{
		"original_code": "// LogonHelper.java\npackage net.sf.gaeappmanager.google;\n\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.LineNumberReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.cookie.Cookie;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.protocol.HTTP;\n\n/**\n * Google login helper.\n *\n * Based on work of Cheers Geoff.\n *\n * http://groups.google.com/group/google-appengine\n * -java/browse_thread/thread/c96d4fff73117e1d?pli=1\n *\n * @author Alois Belaska\n */\npublic class LogonHelper {\n\n    /**\n     * Returns the ACSID string to be set as the Cookie field in the request\n     * header.\n     *\n     * @param userid\n     *            full gmail address for user\n     * @param password\n     *            password\n     * @param source\n     *            name of application requesting quota details\n     * @return the ACSID field value\n     * @throws Exception\n     *             if any error occurs getting the ACSID\n     */\n    public static String loginToGoogleAppEngine(String userid, String password, String source) throws Exception {\n        DefaultHttpClient client = new DefaultHttpClient();\n        try {\n            List<NameValuePair> nvps = new ArrayList<NameValuePair>();\n            nvps.add(new BasicNameValuePair(\"accountType\", \"HOSTED_OR_GOOGLE\"));\n            nvps.add(new BasicNameValuePair(\"Email\", userid));\n            nvps.add(new BasicNameValuePair(\"Passwd\", password));\n            nvps.add(new BasicNameValuePair(\"service\", \"ah\"));\n            nvps.add(new BasicNameValuePair(\"source\", source));\n            HttpPost post = new HttpPost(\"https://www.google.com/accounts/ClientLogin\");\n            post.setEntity(new UrlEncodedFormEntity(nvps, HTTP.UTF_8));\n            HttpResponse response = client.execute(post);\n            if (response.getStatusLine().getStatusCode() != 200) {\n                throw new Exception(\"Error obtaining ACSID\");\n            }\n            String authToken = getAuthToken(response.getEntity().getContent());\n            post.abort();\n            HttpGet get = new HttpGet(\"https://appengine.google.com/_ah/login?auth=\" + authToken);\n            response = client.execute(get);\n            for (Cookie cookie : client.getCookieStore().getCookies()) {\n                if (cookie.getName().startsWith(\"ACSID\")) {\n                    return cookie.getValue();\n                }\n            }\n            get.abort();\n            throw new Exception(\"Did not find ACSID cookie\");\n        } finally {\n            client.getConnectionManager().shutdown();\n        }\n    }\n\n    private static String getAuthToken(InputStream inputStream) throws Exception {\n        LineNumberReader reader = new LineNumberReader(new BufferedReader(new InputStreamReader(inputStream)));\n        String line = reader.readLine();\n        while (line != null) {\n            line = line.trim();\n            if (line.startsWith(\"Auth=\")) {\n                return line.substring(5);\n            }\n            line = reader.readLine();\n        }\n        throw new Exception(\"Could not find Auth token\");\n    }\n\n    private LogonHelper() {\n    }\n}\n",
		"id": "/EvoSuiteBenchmark/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/LogonHelper.java",
		"test_prompt": "// LogonHelperTest.java\npackage net.sf.gaeappmanager.google;\n\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.LineNumberReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.cookie.Cookie;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.protocol.HTTP;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link LogonHelper}.\n* It contains ten unit test cases for the {@link LogonHelper#loginToGoogleAppEngine(String, String, String)} method.\n*/\nclass LogonHelperTest {"
	}
]