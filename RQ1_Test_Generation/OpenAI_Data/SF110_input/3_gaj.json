[
	{
		"original_code": "// Genome.java\npackage brain.ga;\r\n\r\npublic class Genome implements Comparable {\r\n\r\n    protected Evaluator evaluator;\r\n\r\n    private boolean evaluated = false;\r\n\r\n    private double score;\r\n\r\n    public Genome() {\r\n        //\tSystem.out.println(\"Constructor Genome\");\r\n    }\r\n\r\n    public Evaluator getEvaluator() {\r\n        return this.evaluator;\r\n    }\r\n\r\n    public void initialize() {\r\n        //aici vor intra diverse chestiuni di intializare\r\n    }\r\n\r\n    public double getScore() {\r\n        if (!evaluated) {\r\n            score = evaluator.evaluate(this);\r\n            evaluated = true;\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public int compareTo(Object theGenome) {\r\n        int valRet;\r\n        Genome genome = (Genome) theGenome;\r\n        if (this.getScore() > genome.getScore())\r\n            valRet = 1;\r\n        else\r\n            valRet = (this.getScore() == genome.getScore() ? 0 : -1);\r\n        return valRet;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/GenomeTest.java",
		"test_prompt": "// GenomeTest.java\npackage brain.ga;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Genome}.\n* It contains ten unit test cases for the {@link Genome#compareTo(Object)} method.\n*/\nclass GenomeTest {"
	},
	{
		"original_code": "// GAEnumAllelesSet.java\npackage brain.ga;\r\n\r\n//The allele set class is a container for the different values that a gene may assume.\r\n//If you call the allele member function with no argument,\r\n//the allele set picks randomly from the alleles it contains\r\n//and returns one of them\r\nimport java.util.*;\r\n\r\npublic class GAEnumAllelesSet {\r\n\r\n    private Random rnd = new Random();\r\n\r\n    private Vector alleles;\r\n\r\n    public GAEnumAllelesSet() {\r\n    }\r\n\r\n    public Object allele() {\r\n        return alleles.get(rnd.nextInt(alleles.size()));\r\n    }\r\n\r\n    public Object allele(int i) {\r\n        return alleles.get(i);\r\n    }\r\n\r\n    public void setAlleles(Vector newAlleles) {\r\n        alleles = newAlleles;\r\n    }\r\n\r\n    public int size() {\r\n        return alleles.size();\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/GAEnumAllelesSetTest0.java",
		"test_prompt": "// GAEnumAllelesSetTest0.java\npackage brain.ga;\n\n//The allele set class is a container for the different values that a gene may assume.\n//If you call the allele member function with no argument,\n//the allele set picks randomly from the alleles it contains\n//and returns one of them\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GAEnumAllelesSet}.\n* It contains ten unit test cases for the {@link GAEnumAllelesSet#allele()} method.\n*/\nclass GAEnumAllelesSetTest0 {"
	},
	{
		"original_code": "// GAEnumAllelesSet.java\npackage brain.ga;\r\n\r\n//The allele set class is a container for the different values that a gene may assume.\r\n//If you call the allele member function with no argument,\r\n//the allele set picks randomly from the alleles it contains\r\n//and returns one of them\r\nimport java.util.*;\r\n\r\npublic class GAEnumAllelesSet {\r\n\r\n    private Random rnd = new Random();\r\n\r\n    private Vector alleles;\r\n\r\n    public GAEnumAllelesSet() {\r\n    }\r\n\r\n    public Object allele() {\r\n        return alleles.get(rnd.nextInt(alleles.size()));\r\n    }\r\n\r\n    public Object allele(int i) {\r\n        return alleles.get(i);\r\n    }\r\n\r\n    public void setAlleles(Vector newAlleles) {\r\n        alleles = newAlleles;\r\n    }\r\n\r\n    public int size() {\r\n        return alleles.size();\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/GAEnumAllelesSetTest1.java",
		"test_prompt": "// GAEnumAllelesSetTest1.java\npackage brain.ga;\n\n//The allele set class is a container for the different values that a gene may assume.\r\n//If you call the allele member function with no argument,\r\n//the allele set picks randomly from the alleles it contains\r\n//and returns one of them\r\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GAEnumAllelesSet}.\n* It contains ten unit test cases for the {@link GAEnumAllelesSet#allele(int)} method.\n*/\nclass GAEnumAllelesSetTest1 {"
	},
	{
		"original_code": "// GAEnumAllelesSet.java\npackage brain.ga;\r\n\r\n//The allele set class is a container for the different values that a gene may assume.\r\n//If you call the allele member function with no argument,\r\n//the allele set picks randomly from the alleles it contains\r\n//and returns one of them\r\nimport java.util.*;\r\n\r\npublic class GAEnumAllelesSet {\r\n\r\n    private Random rnd = new Random();\r\n\r\n    private Vector alleles;\r\n\r\n    public GAEnumAllelesSet() {\r\n    }\r\n\r\n    public Object allele() {\r\n        return alleles.get(rnd.nextInt(alleles.size()));\r\n    }\r\n\r\n    public Object allele(int i) {\r\n        return alleles.get(i);\r\n    }\r\n\r\n    public void setAlleles(Vector newAlleles) {\r\n        alleles = newAlleles;\r\n    }\r\n\r\n    public int size() {\r\n        return alleles.size();\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/GAEnumAllelesSetTest2.java",
		"test_prompt": "// GAEnumAllelesSetTest2.java\npackage brain.ga;\n\n//The allele set class is a container for the different values that a gene may assume.\r\n//If you call the allele member function with no argument,\r\n//the allele set picks randomly from the alleles it contains\r\n//and returns one of them\r\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GAEnumAllelesSet}.\n* It contains ten unit test cases for the {@link GAEnumAllelesSet#size()} method.\n*/\nclass GAEnumAllelesSetTest2 {"
	},
	{
		"original_code": "// GAUtilities.java\npackage brain.ga;\r\n\r\nimport java.util.*;\r\n\r\npublic class GAUtilities {\r\n\r\n    private static Random rnd = new Random();\r\n\r\n    //returns a boolean value with the prob probability\r\n    //NOT IMPLEMENTED YET correctly\r\n    public static boolean flipCoin(double prob) {\r\n        return rnd.nextBoolean();\r\n    }\r\n\r\n    //return an integer value in the range [1..n] with\r\n    //a sigmoid probability distribution.\r\n    //Thanx to Pintilie Radu, 02.04.2001\r\n    public static int nextPos(int n) {\r\n        int nn = rnd.nextInt(n * (n + 1) / 2) + 1;\r\n        //System.out.print(nn + \",\");\r\n        int i;\r\n        for (i = 1; (i <= n) && (i * (i - 1) / 2 < nn); i++) {\r\n        }\r\n        return i - 1;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/GAUtilitiesTest0.java",
		"test_prompt": "// GAUtilitiesTest0.java\npackage brain.ga;\n\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GAUtilities}.\n* It contains ten unit test cases for the {@link GAUtilities#flipCoin(double)} method.\n*/\nclass GAUtilitiesTest0 {"
	},
	{
		"original_code": "// GAUtilities.java\npackage brain.ga;\r\n\r\nimport java.util.*;\r\n\r\npublic class GAUtilities {\r\n\r\n    private static Random rnd = new Random();\r\n\r\n    //returns a boolean value with the prob probability\r\n    //NOT IMPLEMENTED YET correctly\r\n    public static boolean flipCoin(double prob) {\r\n        return rnd.nextBoolean();\r\n    }\r\n\r\n    //return an integer value in the range [1..n] with\r\n    //a sigmoid probability distribution.\r\n    //Thanx to Pintilie Radu, 02.04.2001\r\n    public static int nextPos(int n) {\r\n        int nn = rnd.nextInt(n * (n + 1) / 2) + 1;\r\n        //System.out.print(nn + \",\");\r\n        int i;\r\n        for (i = 1; (i <= n) && (i * (i - 1) / 2 < nn); i++) {\r\n        }\r\n        return i - 1;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/GAUtilitiesTest1.java",
		"test_prompt": "// GAUtilitiesTest1.java\npackage brain.ga;\n\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GAUtilities}.\n* It contains ten unit test cases for the {@link GAUtilities#nextPos(int)} method.\n*/\nclass GAUtilitiesTest1 {"
	},
	{
		"original_code": "// SectMutator.java\npackage brain.ga;\n\nimport java.util.*;\n\npublic class SectMutator implements Mutator {\n\n    private Random rnd = new Random();\n\n    private GAEnumAllelesSet allelesSet;\n\n    public void setAllelesSet(GAEnumAllelesSet newAllelesSet) {\n        allelesSet = newAllelesSet;\n    }\n\n    public int mutate(Genome genome, double pmut) {\n        /**\n         * @todo: Implement this ga.Mutator method\n         */\n        //throw new java.lang.UnsupportedOperationException(\"Method mutate() not yet implemented.\");\n        double p;\n        VectorGenome vGenome = (VectorGenome) genome;\n        for (int i = 0; i < vGenome.getGenesCount(); i++) {\n            p = rnd.nextDouble();\n            if (p <= pmut) {\n                vGenome.setGene(i, allelesSet.allele());\n            }\n        }\n        return 0;\n    }\n}\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/SectMutatorTest.java",
		"test_prompt": "// SectMutatorTest.java\npackage brain.ga;\n\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SectMutator}.\n* It contains ten unit test cases for the {@link SectMutator#mutate(Genome, double)} method.\n*/\nclass SectMutatorTest {"
	},
	{
		"original_code": "// UniformCrossover.java\npackage brain.ga;\n\nimport java.util.*;\n\npublic class UniformCrossover implements SexualCrossover {\n\n    private Random rnd;\n\n    public UniformCrossover() {\n        rnd = new Random();\n    }\n\n    public Genome cross(Genome mom, Genome dad) {\n        VectorGenome vSon;\n        Vector sonGenes = new Vector();\n        VectorGenome vMom = (VectorGenome) mom;\n        VectorGenome vDad = (VectorGenome) dad;\n        for (int i = 0; i < vMom.getGenesCount(); i++) {\n            sonGenes.addElement(rnd.nextBoolean() ? vMom.getGene(i) : vDad.getGene(i));\n        }\n        vSon = new VectorGenome(sonGenes, vMom.getEvaluator());\n        return (Genome) vSon;\n    }\n}\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/UniformCrossoverTest.java",
		"test_prompt": "// UniformCrossoverTest.java\npackage brain.ga;\n\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link UniformCrossover}.\n* It contains ten unit test cases for the {@link UniformCrossover#cross(Genome, Genome)} method.\n*/\nclass UniformCrossoverTest {"
	},
	{
		"original_code": "// Population.java\npackage brain.ga;\r\n\r\nimport java.util.*;\r\n\r\npublic class Population {\r\n\r\n    public List genoms = new ArrayList();\r\n\r\n    protected Selector selector;\r\n\r\n    protected Evaluator evaluator;\r\n\r\n    protected int genomeSize = 4;\r\n\r\n    public Population() {\r\n        System.out.println(\"Constructor Population 1\");\r\n    }\r\n\r\n    public void initialize(GAEnumAllelesSet allelesSet) {\r\n    }\r\n\r\n    public Genome selectNextGenome() {\r\n        return selector.select(this);\r\n    }\r\n\r\n    public void setSelector(Selector newSelector) {\r\n        selector = newSelector;\r\n    }\r\n\r\n    public Selector getSelector() {\r\n        return selector;\r\n    }\r\n\r\n    public void setEvaluator(Evaluator newEvaluator) {\r\n        evaluator = newEvaluator;\r\n    }\r\n\r\n    public Evaluator getEvaluator() {\r\n        return evaluator;\r\n    }\r\n\r\n    public Genome get(int i) {\r\n        return (Genome) genoms.get(i - 1);\r\n    }\r\n\r\n    public int getSize() {\r\n        return genoms.size();\r\n    }\r\n\r\n    public void sort() {\r\n        Collections.sort(genoms);\r\n        System.out.println(\"acilea ma sortez\");\r\n        for (int i = 0; i < this.genoms.size(); i++) {\r\n            System.out.print(\"Portofoliu \" + i + \" \");\r\n            Genome g = (Genome) this.genoms.get(i);\r\n            System.out.println(g + \" Score \" + g.getScore());\r\n        }\r\n    }\r\n\r\n    public void setGenomeSize(int newGenomeSize) {\r\n        genomeSize = newGenomeSize;\r\n    }\r\n\r\n    public int getGenomeSize() {\r\n        return genomeSize;\r\n    }\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/PopulationTest.java",
		"test_prompt": "// PopulationTest.java\npackage brain.ga;\n\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Population}.\n* It contains ten unit test cases for the {@link Population#selectNextGenome()} method.\n*/\nclass PopulationTest {"
	},
	{
		"original_code": "// RankSelector.java\npackage brain.ga;\r\n\r\nimport java.lang.*;\r\nimport java.util.*;\r\n\r\npublic class RankSelector implements Selector {\r\n\r\n    private int pos;\r\n\r\n    public Genome select(Population population) {\r\n        pos = GAUtilities.nextPos(population.getSize());\r\n        Genome genome = population.get(pos);\r\n        return genome;\r\n    }\r\n    /*\tpublic static void main(String[] args)\r\n\t{\r\n\t\tRankSelector rs = new RankSelector(new Population());\r\n\t\tint n=3;\r\n\t\tfor (int i=0;i<20;i++)\r\n\t\t\tSystem.out.println(rs.nextPos(n));\r\n\t}*/\r\n}\r\n",
		"id": "EvoSuiteBenchmark/3_gaj/src/main/java/brain/ga/RankSelectorTest.java",
		"test_prompt": "// RankSelectorTest.java\npackage brain.ga;\n\nimport java.lang.*;\nimport java.util.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link RankSelector}.\n* It contains ten unit test cases for the {@link RankSelector#select(Population)} method.\n*/\nclass RankSelectorTest {"
	}
]