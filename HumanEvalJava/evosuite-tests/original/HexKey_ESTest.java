/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 26 20:04:29 GMT 2023
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.HexKey;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HexKey_ESTest extends HexKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        HexKey.hexKey((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      int int0 = HexKey.hexKey(object0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HexKey hexKey0 = new HexKey();
      Object object0 = new Object();
      int int0 = HexKey.hexKey(object0);
      assertEquals(1, int0);
      
      Object object1 = new Object();
      int int1 = HexKey.hexKey(object1);
      Object object2 = new Object();
      HexKey.hexKey(object2);
      Object object3 = new Object();
      int int2 = HexKey.hexKey(object3);
      assertTrue(int2 == int1);
      
      Object object4 = new Object();
      HexKey.hexKey(object4);
      Object object5 = new Object();
      int int3 = HexKey.hexKey(object5);
      assertEquals(1, int3);
  }
}
