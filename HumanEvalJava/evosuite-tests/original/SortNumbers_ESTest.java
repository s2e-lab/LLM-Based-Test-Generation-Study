/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 26 18:52:37 GMT 2023
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.SortNumbers;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SortNumbers_ESTest extends SortNumbers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        SortNumbers.sortNumbers((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.SortNumbers", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("eight");
      assertEquals("eight", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("seven ");
      assertEquals("seven", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("six");
      assertEquals("six", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("five");
      assertEquals("five", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("four");
      assertEquals("four", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("three");
      assertEquals("three", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("two ");
      assertEquals("two", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("one ");
      assertEquals("one", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("zero ");
      assertEquals("zero", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = SortNumbers.sortNumbers("nine");
      assertEquals("nine", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SortNumbers sortNumbers0 = new SortNumbers();
  }
}
