/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 26 18:54:26 GMT 2023
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.SortArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SortArray_ESTest extends SortArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.add(integer0);
      linkedList0.add(integer0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      List<Object> list0 = SortArray.sortArray(linkedList1);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(22);
      linkedList0.add(integer0);
      Integer integer1 = new Integer(1541);
      linkedList0.add(integer1);
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      List<Object> list0 = SortArray.sortArray(linkedList1);
      assertTrue(list0.contains(22));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        SortArray.sortArray((List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = new Object();
      linkedList0.add(object0);
      // Undeclared exception!
      try { 
        SortArray.sortArray(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(22);
      linkedList0.add(integer0);
      linkedList0.add(integer0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      List<Object> list0 = SortArray.sortArray(linkedList1);
      assertEquals(2, list0.size());
      assertTrue(list0.contains(22));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(22);
      linkedList0.add(integer0);
      Integer integer1 = new Integer((-506));
      linkedList0.add(integer1);
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      List<Object> list0 = SortArray.sortArray(linkedList1);
      assertTrue(list0.contains((-506)));
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      List<Object> list0 = SortArray.sortArray(linkedList1);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SortArray sortArray0 = new SortArray();
  }
}
