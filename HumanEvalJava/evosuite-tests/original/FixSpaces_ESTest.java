/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 26 20:10:26 GMT 2023
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.FixSpaces;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FixSpaces_ESTest extends FixSpaces_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = FixSpaces.fixSpaces("MAw=|  swqgc:-");
      assertEquals("MAw=|__swqgc:-", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = FixSpaces.fixSpaces("slw\u0006RThY0S6QV/Zj");
      assertEquals("slw\u0006RThY0S6QV/Zj", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = FixSpaces.fixSpaces("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        FixSpaces.fixSpaces((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.FixSpaces", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = FixSpaces.fixSpaces("GXd'+)6&qQ3y   ");
      assertEquals("GXd'+)6&qQ3y-", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = FixSpaces.fixSpaces("ZAaw=qw   w0gc:-");
      assertEquals("ZAaw=qw-w0gc:-", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = FixSpaces.fixSpaces(" u((=[H ");
      assertEquals("_u((=[H_", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FixSpaces fixSpaces0 = new FixSpaces();
  }
}
