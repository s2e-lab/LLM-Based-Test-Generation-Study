/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 26 20:40:46 GMT 2023
 */

package original;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import original.WordsString;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WordsString_ESTest extends WordsString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordsString.wordsString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("original.WordsString", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<Object> list0 = WordsString.wordsString("");
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      List<Object> list0 = WordsString.wordsString("R6x");
      assertTrue(list0.contains("R6x"));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WordsString wordsString0 = new WordsString();
  }
}
