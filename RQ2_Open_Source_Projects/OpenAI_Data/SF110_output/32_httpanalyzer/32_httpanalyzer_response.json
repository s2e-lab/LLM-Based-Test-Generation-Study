[
{
    "id": "cmpl-6qbNp4Ts390LNTu1Fx5JDKo3xzMPL",
    "object": "text_completion",
    "created": 1677994777,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_1() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_2() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_3() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_4() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_5() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_6() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_7() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_8() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_9() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of loadPreference method, of class HttpPreference.\n\t */\n\t@Test\n\tvoid testLoadPreference_10() {\n\t\tSystem.out.println(\"loadPreference\");\n\t\tHttpAnalyzerView mainView = new HttpAnalyzerView();\n\t\tJFrame parentFrame = new JFrame();\n\t\tHttpPreference instance = new HttpPreference();\n\t\tString expResult = \"\";\n\t\tString result = instance.loadPreference(mainView, parentFrame);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n}\n\n// HttpFileUtils.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.Properties;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\n\n/**\n * @author vlad\n */\npublic class HttpFileUtils {\n\n    /**\n     * Save properties to file\n     * @param properties Properties\n     * @param parentFrame JFrame\n     */\n    public void savePreferenceToFile(Properties properties, JFrame parentFrame) {\n        JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);\n        fileChooser.setDialogTitle(\"Save preferences\");\n        fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);\n        fileChooser.setFileFilter(new HttpFileFilter(\"properties\", \"Properties files\"));\n        int result = fileChooser.showSaveDialog(parentFrame);\n        if (result == JFileChooser.APPROVE_OPTION) {\n            File file = fileChooser.getSelectedFile();\n            if (!file.getName().endsWith(\".properties\")) {",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 3309,
        "completion_tokens": 2048,
        "total_tokens": 5357
    },
    "time_taken": 35.06301403045654,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HttpPreferenceTest.java",
    "original_code": "// HttpPreference.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.util.Properties;\nimport javax.swing.JFrame;\n\n/**\n * @author vlad\n */\npublic class HttpPreference {\n\n    /**\n     * Get values from work form and set properties\n     * Then call method FileUtil.savePreferenceToFile\n     * @param mainView HttpAnalyzerView\n     * @param parentFrame JFrame\n     */\n    public void savePreference(HttpAnalyzerView analyseView, JFrame parentFrame, String notes) {\n        Properties properties = new Properties();\n        if (notes != null) {\n            properties.setProperty(\"httpanalyzer.notes\", notes);\n        }\n        properties.setProperty(\"httpanalyzer.tools.options.merge\", Boolean.toString(analyseView.mergeInfoCheckBox.isSelected()));\n        if (analyseView.proxyNoneRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.proxytype\", \"None\");\n        } else if (analyseView.proxyHttpRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.proxytype\", \"Http\");\n        } else {\n            properties.setProperty(\"httpanalyzer.options.proxytype\", \"Socks\");\n        }\n        properties.setProperty(\"httpanalyzer.options.proxy\", analyseView.proxyField.getText());\n        properties.setProperty(\"httpanalyzer.options.proxyauth\", Boolean.toString(analyseView.proxyAuthCheckBox.isSelected()));\n        properties.setProperty(\"httpanalyzer.options.proxyuser\", analyseView.proxyUserTextField.getText());\n        properties.setProperty(\"httpanalyzer.options.proxypassword\", new String(analyseView.proxyPassPasswordField.getPassword()));\n        // properties.setProperty(\"httpanalyzer.options.sockslevel\", );\n        properties.setProperty(\"httpanalyzer.options.httpversion\", analyseView.httpVersionComboBox.getSelectedItem().toString());\n        properties.setProperty(\"httpanalyzer.options.httpauth\", Boolean.toString(analyseView.httpAuthCheckBox.isSelected()));\n        properties.setProperty(\"httpanalyzer.options.httpauthuser\", analyseView.httpUserTextField.getText());\n        properties.setProperty(\"httpanalyzer.options.httpauthpassword\", new String(analyseView.httpPassPasswordField.getPassword()));\n        properties.setProperty(\"httpanalyzer.options.customrefer.enable\", Boolean.toString(analyseView.customRefererCheckBox.isSelected()));\n        properties.setProperty(\"httpanalyzer.options.customrefer\", analyseView.customRefererTextField.getText());\n        properties.setProperty(\"httpanalyzer.options.customcookie.enable\", Boolean.toString(analyseView.customCookieCheckBox.isSelected()));\n        properties.setProperty(\"httpanalyzer.options.customcookie\", analyseView.customCookieTextField.getText());\n        if (analyseView.firefoxRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"0\");\n        } else if (analyseView.ie6RadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"1\");\n        } else if (analyseView.ie7RadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"2\");\n        } else if (analyseView.ie8RadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"3\");\n        } else if (analyseView.googleBotRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"4\");\n        } else if (analyseView.msnRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"5\");\n        } else if (analyseView.yahooRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"6\");\n        } else if (analyseView.iPhoneRadioButton.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.agents\", \"7\");\n        }\n        if (analyseView.getRadio.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.method\", \"GET\");\n        } else if (analyseView.postRadio.isSelected()) {\n            properties.setProperty(\"httpanalyzer.options.method\", \"POST\");\n        } else {\n            properties.setProperty(\"httpanalyzer.options.method\", \"HEAD\");\n        }\n        properties.setProperty(\"httpanalyzer.options.tofile.enable\", Boolean.toString(analyseView.toFileCheckBox.isSelected()));\n        properties.setProperty(\"httpanalyzer.options.tofile\", analyseView.toFileTextField.getText());\n        properties.setProperty(\"httpanalyzer.options.urlcombo.elements\", Integer.toString(analyseView.urlCombo.getItemCount()));\n        for (int i = 0; i < analyseView.urlCombo.getItemCount(); i++) {\n            properties.setProperty(\"httpanalyzer.options.urlcombo.\" + Integer.toString(i), analyseView.urlCombo.getItemAt(i).toString());\n        }\n        properties.setProperty(\"httpanalyzer.options.params.elements\", Integer.toString(analyseView.paramsComboBox.getItemCount()));\n        for (int i = 0; i < analyseView.paramsComboBox.getItemCount(); i++) {\n            properties.setProperty(\"httpanalyzer.options.params.\" + Integer.toString(i), analyseView.paramsComboBox.getItemAt(i).toString());\n        }\n        properties.setProperty(\"httpanalyzer.options.usecustom.headers\", Boolean.toString(analyseView.useCustomHeadersCheckBox.isSelected()));\n        properties.setProperty(\"httpanalyzer.options.custom.headers\", analyseView.customHeaders.getText());\n        properties.setProperty(\"httpanalyzer.options.intelligencemode\", Boolean.toString(analyseView.intelSaveCheckBox.isSelected()));\n        HttpFileUtils fileUtil = new HttpFileUtils();\n        fileUtil.savePreferenceToFile(properties, parentFrame);\n    }\n\n    /**\n     * Get values from work form and set properties\n     * Then call method FileUtil.savePreferenceToFile\n     * @param mainView HttpAnalyzerView\n     * @param parentFrame JFrame\n     * @return String Notes\n     */\n    public String loadPreference(HttpAnalyzerView mainView, JFrame parentFrame) {\n        Properties properties = new Properties();\n        HttpFileUtils fileUtil = new HttpFileUtils();\n        properties = fileUtil.loadPreferenceFromFile(parentFrame);\n        // Set values\n        mainView.mergeInfoCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.tools.options.merge\")));\n        String workProps = properties.getProperty(\"httpanalyzer.options.proxytype\");\n        if (workProps.equals(\"None\")) {\n            mainView.proxyNoneRadioButton.setSelected(true);\n        } else if (workProps.equals(\"Http\")) {\n            mainView.proxyHttpRadioButton.setSelected(true);\n        } else {\n            mainView.proxySocksRadioButton.setSelected(true);\n        }\n        mainView.proxyField.setText(properties.getProperty(\"httpanalyzer.options.proxy\"));\n        mainView.proxyAuthCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.proxyauth\")));\n        mainView.proxyUserTextField.setText(properties.getProperty(\"httpanalyzer.options.proxyuser\"));\n        mainView.proxyPassPasswordField.setText(properties.getProperty(\"httpanalyzer.options.proxypassword\"));\n        if (properties.getProperty(\"httpanalyzer.options.httpversion\").equals(\"1.1\")) {\n            mainView.httpVersionComboBox.setSelectedIndex(0);\n        } else {\n            mainView.httpVersionComboBox.setSelectedIndex(1);\n        }\n        mainView.httpAuthCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.httpauth\")));\n        mainView.httpUserTextField.setText(properties.getProperty(\"httpanalyzer.options.httpauthuser\"));\n        mainView.httpPassPasswordField.setText(properties.getProperty(\"httpanalyzer.options.httpauthpassword\"));\n        mainView.customRefererCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.customrefer.enable\")));\n        mainView.customRefererTextField.setText(properties.getProperty(\"httpanalyzer.options.customrefer\"));\n        mainView.customCookieCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.customcookie.enable\")));\n        mainView.customCookieTextField.setText(properties.getProperty(\"httpanalyzer.options.customcookie\"));\n        workProps = properties.getProperty(\"httpanalyzer.options.agents\");\n        if (workProps.equals(\"0\")) {\n            mainView.firefoxRadioButton.setSelected(true);\n        } else if (workProps.equals(\"1\")) {\n            mainView.ie6RadioButton.setSelected(true);\n        } else if (workProps.equals(\"2\")) {\n            mainView.ie7RadioButton.setSelected(true);\n        } else if (workProps.equals(\"3\")) {\n            mainView.ie8RadioButton.setSelected(true);\n        } else if (workProps.equals(\"4\")) {\n            mainView.googleBotRadioButton.setSelected(true);\n        } else if (workProps.equals(\"5\")) {\n            mainView.msnRadioButton.setSelected(true);\n        } else if (workProps.equals(\"6\")) {\n            mainView.yahooRadioButton.setSelected(true);\n        } else {\n            mainView.iPhoneRadioButton.setSelected(true);\n        }\n        workProps = properties.getProperty(\"httpanalyzer.options.method\");\n        if (workProps.equals(\"GET\")) {\n            mainView.getRadio.setSelected(true);\n        } else if (workProps.equals(\"POST\")) {\n            mainView.postRadio.setSelected(true);\n        } else {\n            mainView.headRadio.setSelected(true);\n        }\n        mainView.toFileTextField.setText(properties.getProperty(\"httpanalyzer.options.tofile\"));\n        mainView.toFileCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.tofile.enable\")));\n        int ii = Integer.decode(properties.getProperty(\"httpanalyzer.options.urlcombo.elements\"));\n        mainView.urlCombo.removeAllItems();\n        for (int i = 0; i < ii; i++) {\n            String el = properties.getProperty(\"httpanalyzer.options.urlcombo.\" + Integer.toString(i));\n            mainView.urlCombo.addItem(el);\n        }\n        ii = Integer.decode(properties.getProperty(\"httpanalyzer.options.params.elements\"));\n        mainView.paramsComboBox.removeAllItems();\n        for (int i = 0; i < ii; i++) {\n            String el = properties.getProperty(\"httpanalyzer.options.params.\" + Integer.toString(i));\n            mainView.paramsComboBox.addItem(el);\n        }\n        mainView.customHeaders.setText(properties.getProperty(\"httpanalyzer.options.custom.headers\"));\n        mainView.useCustomHeadersCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.usecustom.headers\")));\n        mainView.intelSaveCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(\"httpanalyzer.options.intelligencemode\")));\n        return properties.getProperty(\"httpanalyzer.notes\");\n    }\n}\n",
    "test_prompt": "// HttpPreferenceTest.java\npackage httpanalyzer;\n\nimport java.util.Properties;\nimport javax.swing.JFrame;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpPreference}.\n* It contains ten unit test cases for the {@link HttpPreference#loadPreference(HttpAnalyzerView, JFrame)} method.\n*/\nclass HttpPreferenceTest {"
},
{
    "id": "cmpl-6qbOsgyE15lxgoggl5n6D5gmCec6S",
    "object": "text_completion",
    "created": 1677994842,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams0() {\n\t\t\t\tSystem.out.println(\"getRequestParams0\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams1() {\n\t\t\t\tSystem.out.println(\"getRequestParams1\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams2() {\n\t\t\t\tSystem.out.println(\"getRequestParams2\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams3() {\n\t\t\t\tSystem.out.println(\"getRequestParams3\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams4() {\n\t\t\t\tSystem.out.println(\"getRequestParams4\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams5() {\n\t\t\t\tSystem.out.println(\"getRequestParams5\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams6() {\n\t\t\t\tSystem.out.println(\"getRequestParams6\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams7() {\n\t\t\t\tSystem.out.println(\"getRequestParams7\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t\t\t\t\tSystem.exit(0);\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinstance.setVisible(true);\n\t\t\t\tString expResult = \"&\";\n\t\t\t\tString result = RequestParamsDialog.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t}\n\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams8() {\n\t\t\t\tSystem.out.println(\"getRequestParams8\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.addWindowListener(new java.awt.event.WindowAdapter() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\t",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 4487,
        "completion_tokens": 2048,
        "total_tokens": 6535
    },
    "time_taken": 78.5640161037445,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/RequestParamsDialogTest0.java",
    "original_code": "// RequestParamsDialog.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n/*\n * RequestParamsFrame.java\n *\n * Created on 22.03.2010, 12:53:49\n */\npackage httpanalyzer;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.protocol.HTTP;\n\n/**\n * @author vlad\n */\npublic class RequestParamsDialog extends javax.swing.JDialog {\n\n    private static boolean dataChanged;\n\n    private static String paramsString;\n\n    private static HashMap<String, String> letterMap;\n\n    /**\n     * Creates new form RequestParamsFrame\n     */\n    public RequestParamsDialog(java.awt.Frame parent, boolean modal) {\n        super(parent, modal);\n        initComponents();\n        initLetterMap();\n    }\n\n    private void initLetterMap() {\n        letterMap = new HashMap<String, String>();\n        letterMap.put(\"<\", \"%3C\");\n        letterMap.put(\">\", \"%3E\");\n        letterMap.put(\"~\", \"%7E\");\n        letterMap.put(\".\", \"%2E\");\n        letterMap.put(\"\\\"\", \"%22\");\n        letterMap.put(\"{\", \"%7B\");\n        letterMap.put(\"}\", \"%7D\");\n        letterMap.put(\"|\", \"%7C\");\n        letterMap.put(\"\\\\\", \"%5C\");\n        letterMap.put(\"-\", \"%2D\");\n        letterMap.put(\"`\", \"%60\");\n        letterMap.put(\"_\", \"%5F\");\n        letterMap.put(\"^\", \"%5E\");\n        letterMap.put(\"!\", \"%21\");\n        letterMap.put(\"*\", \"%2A\");\n        letterMap.put(\"'\", \"%27\");\n        letterMap.put(\"(\", \"%28\");\n        letterMap.put(\")\", \"%29\");\n        letterMap.put(\";\", \"%3B\");\n        letterMap.put(\":\", \"%3A\");\n        letterMap.put(\"@\", \"%40\");\n        letterMap.put(\"&\", \"%26\");\n        letterMap.put(\"=\", \"%3D\");\n        letterMap.put(\"+\", \"%2B\");\n        letterMap.put(\"$\", \"%24\");\n        letterMap.put(\",\", \"%2C\");\n        letterMap.put(\"/\", \"%2F\");\n        letterMap.put(\"?\", \"%3F\");\n        letterMap.put(\"%\", \"%25\");\n        letterMap.put(\"#\", \"%23\");\n        letterMap.put(\"[\", \"%5B\");\n        letterMap.put(\"]\", \"%5D\");\n        letterMap.put(\" \", \"%20\");\n    }\n\n    private String encodingString(String baseLine) {\n        StringBuffer resString = new StringBuffer();\n        for (int i = 0; i < baseLine.length(); i++) {\n            String aLetter = baseLine.substring(i, i + 1);\n            //System.out.println(\"roman letter =\"+letterMap.get(aLetter));\n            String str = letterMap.get(aLetter);\n            if (str == null) {\n                str = aLetter;\n            }\n            resString.append(str);\n        }\n        return resString.toString();\n    }\n\n    /**\n     * This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    void initComponents() {\n        paramsScrollPane = new javax.swing.JScrollPane();\n        paramsTextArea = new javax.swing.JTextArea();\n        encodeLabel = new javax.swing.JLabel();\n        decodeLabel = new javax.swing.JLabel();\n        applyButton = new javax.swing.JButton();\n        cancelButton = new javax.swing.JButton();\n        encodeTextField = new javax.swing.JTextField();\n        decodeTextField = new javax.swing.JTextField();\n        rawCheckBox = new javax.swing.JCheckBox();\n        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(RequestParamsDialog.class);\n        // NOI18N\n        setTitle(resourceMap.getString(\"Form.title\"));\n        setIconImage(null);\n        setLocationByPlatform(true);\n        // NOI18N\n        setName(\"Form\");\n        // NOI18N\n        paramsScrollPane.setName(\"paramsScrollPane\");\n        paramsTextArea.setColumns(20);\n        // NOI18N\n        paramsTextArea.setFont(resourceMap.getFont(\"paramsTextArea.font\"));\n        paramsTextArea.setRows(5);\n        paramsTextArea.setTabSize(0);\n        // NOI18N\n        paramsTextArea.setText(resourceMap.getString(\"paramsTextArea.text\"));\n        paramsTextArea.setFocusCycleRoot(true);\n        // NOI18N\n        paramsTextArea.setName(\"paramsTextArea\");\n        paramsScrollPane.setViewportView(paramsTextArea);\n        // NOI18N\n        encodeLabel.setFont(resourceMap.getFont(\"encodeLabel.font\"));\n        // NOI18N\n        encodeLabel.setText(resourceMap.getString(\"encodeLabel.text\"));\n        // NOI18N\n        encodeLabel.setName(\"encodeLabel\");\n        // NOI18N\n        decodeLabel.setFont(resourceMap.getFont(\"decodeLabel.font\"));\n        // NOI18N\n        decodeLabel.setText(resourceMap.getString(\"decodeLabel.text\"));\n        // NOI18N\n        decodeLabel.setName(\"decodeLabel\");\n        // NOI18N\n        applyButton.setFont(resourceMap.getFont(\"applyButton.font\"));\n        // NOI18N\n        applyButton.setIcon(resourceMap.getIcon(\"applyButton.icon\"));\n        applyButton.setMnemonic('A');\n        // NOI18N\n        applyButton.setText(resourceMap.getString(\"applyButton.text\"));\n        // NOI18N\n        applyButton.setToolTipText(resourceMap.getString(\"applyButton.toolTipText\"));\n        // NOI18N\n        applyButton.setName(\"applyButton\");\n        applyButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                applyButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        cancelButton.setFont(resourceMap.getFont(\"cancelButton.font\"));\n        // NOI18N\n        cancelButton.setIcon(resourceMap.getIcon(\"cancelButton.icon\"));\n        cancelButton.setMnemonic('n');\n        // NOI18N\n        cancelButton.setText(resourceMap.getString(\"cancelButton.text\"));\n        // NOI18N\n        cancelButton.setToolTipText(resourceMap.getString(\"cancelButton.toolTipText\"));\n        // NOI18N\n        cancelButton.setName(\"cancelButton\");\n        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cancelButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        encodeTextField.setText(resourceMap.getString(\"encodeTextField.text\"));\n        // NOI18N\n        encodeTextField.setName(\"encodeTextField\");\n        encodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {\n\n            public void keyReleased(java.awt.event.KeyEvent evt) {\n                encodeTextFieldKeyReleased(evt);\n            }\n        });\n        // NOI18N\n        decodeTextField.setText(resourceMap.getString(\"decodeTextField.text\"));\n        // NOI18N\n        decodeTextField.setName(\"decodeTextField\");\n        // NOI18N\n        rawCheckBox.setFont(resourceMap.getFont(\"rawCheckBox.font\"));\n        // NOI18N\n        rawCheckBox.setText(resourceMap.getString(\"rawCheckBox.text\"));\n        // NOI18N\n        rawCheckBox.setToolTipText(resourceMap.getString(\"rawCheckBox.toolTipText\"));\n        rawCheckBox.setFocusable(false);\n        // NOI18N\n        rawCheckBox.setName(\"rawCheckBox\");\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(rawCheckBox).addComponent(paramsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGap(64, 64, 64).addComponent(applyButton).addGap(18, 18, 18).addComponent(cancelButton)).addGroup(layout.createSequentialGroup().addComponent(encodeLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(encodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addComponent(decodeLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(decodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))).addContainerGap()));\n        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(rawCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(paramsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(encodeLabel).addComponent(encodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(decodeLabel).addComponent(decodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(11, 11, 11).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(applyButton).addComponent(cancelButton)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();\n        setBounds((screenSize.width - 361) / 2, (screenSize.height - 360) / 2, 361, 360);\n    }\n\n    // </editor-fold>//GEN-END:initComponents\n    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_applyButtonActionPerformed\n        // TODO Set Settings();\n        //\n        dataChanged = true;\n        String preString = paramsTextArea.getText().replace(\"\\n\", \"&\");\n        if (rawCheckBox.isSelected()) {\n            paramsString = preString;\n        } else {\n            InputStream inStream = null;\n            try {\n                List<NameValuePair> qparams = null;\n                qparams = new ParamsUrlTools().getPairParams(preString);\n                UrlEncodedFormEntity postEntityParams = null;\n                try {\n                    postEntityParams = new UrlEncodedFormEntity(qparams, HTTP.UTF_8);\n                } catch (UnsupportedEncodingException ex) {\n                    Logger.getLogger(RequestParamsDialog.class.getName()).log(Level.SEVERE, null, ex);\n                }\n                inStream = postEntityParams.getContent();\n                // Read and display response.\n                int c = 0;\n                StringBuffer strBuf = new StringBuffer();\n                while ((c = inStream.read()) != -1) {\n                    strBuf.append((char) c);\n                }\n                //qparams = RequestParamsDialog.getRequestParams();\n                paramsString = strBuf.toString();\n            } catch (IOException ex) {\n                Logger.getLogger(RequestParamsDialog.class.getName()).log(Level.SEVERE, null, ex);\n            } finally {\n                try {\n                    inStream.close();\n                } catch (IOException ex) {\n                    Logger.getLogger(RequestParamsDialog.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n        }\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_applyButtonActionPerformed\n    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_cancelButtonActionPerformed\n        dataChanged = false;\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_cancelButtonActionPerformed\n    private void encodeTextFieldKeyReleased(java.awt.event.KeyEvent evt) {\n        //GEN-FIRST:event_encodeTextFieldKeyReleased\n        decodeTextField.setText(encodingString(encodeTextField.getText()));\n    }\n\n    //GEN-LAST:event_encodeTextFieldKeyReleased\n    public static String getRequestParams() {\n        return \"&\" + paramsString;\n    }\n\n    public static boolean isDataChanged() {\n        return dataChanged;\n    }\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        java.awt.EventQueue.invokeLater(new Runnable() {\n\n            @Override\n            public void run() {\n                RequestParamsDialog dialog = new RequestParamsDialog(new javax.swing.JFrame(), true);\n                dialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\n                    @Override\n                    public void windowClosing(java.awt.event.WindowEvent e) {\n                        System.exit(0);\n                    }\n                });\n                dialog.setVisible(true);\n            }\n        });\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton applyButton;\n\n    private javax.swing.JButton cancelButton;\n\n    private javax.swing.JLabel decodeLabel;\n\n    private javax.swing.JTextField decodeTextField;\n\n    private javax.swing.JLabel encodeLabel;\n\n    private javax.swing.JTextField encodeTextField;\n\n    private javax.swing.JScrollPane paramsScrollPane;\n\n    private javax.swing.JTextArea paramsTextArea;\n\n    private javax.swing.JCheckBox rawCheckBox;\n    // End of variables declaration//GEN-END:variables\n}\n",
    "test_prompt": "// RequestParamsDialogTest0.java\n/*\n * RequestParamsFrame.java\n *\n * Created on 22.03.2010, 12:53:49\n */\npackage httpanalyzer;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.protocol.HTTP;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link RequestParamsDialog}.\n* It contains ten unit test cases for the {@link RequestParamsDialog#getRequestParams()} method.\n*/\nclass RequestParamsDialogTest0 {"
},
{
    "id": "cmpl-6qbQ9GXH7x7SQ6ffKTBWMAD0IeDEm",
    "object": "text_completion",
    "created": 1677994921,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t * Test of isDataChanged method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testIsDataChanged() {\n\t\t\t\tSystem.out.println(\"isDataChanged\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tboolean expResult = false;\n\t\t\t\tboolean result = instance.isDataChanged();\n\t\t\t\tassertEquals(expResult, result);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of getRequestParams method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testGetRequestParams() {\n\t\t\t\tSystem.out.println(\"getRequestParams\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tString expResult = \"\";\n\t\t\t\tString result = instance.getRequestParams();\n\t\t\t\tassertEquals(expResult, result);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of initLetterMap method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testInitLetterMap() {\n\t\t\t\tSystem.out.println(\"initLetterMap\");\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.initLetterMap();\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of encodingString method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testEncodingString() {\n\t\t\t\tSystem.out.println(\"encodingString\");\n\t\t\t\tString baseLine = \"\";\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tString expResult = \"\";\n\t\t\t\tString result = instance.encodingString(baseLine);\n\t\t\t\tassertEquals(expResult, result);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of applyButtonActionPerformed method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testApplyButtonActionPerformed() {\n\t\t\t\tSystem.out.println(\"applyButtonActionPerformed\");\n\t\t\t\tjava.awt.event.ActionEvent evt = null;\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.applyButtonActionPerformed(evt);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of cancelButtonActionPerformed method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testCancelButtonActionPerformed() {\n\t\t\t\tSystem.out.println(\"cancelButtonActionPerformed\");\n\t\t\t\tjava.awt.event.ActionEvent evt = null;\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.cancelButtonActionPerformed(evt);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of encodeTextFieldKeyReleased method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testEncodeTextFieldKeyReleased() {\n\t\t\t\tSystem.out.println(\"encodeTextFieldKeyReleased\");\n\t\t\t\tjava.awt.event.KeyEvent evt = null;\n\t\t\t\tRequestParamsDialog instance = new RequestParamsDialog(new javax.swing.JFrame(), true);\n\t\t\t\tinstance.encodeTextFieldKeyReleased(evt);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test of main method, of class RequestParamsDialog.\n\t\t */\n\t\t@Test\n\t\tvoid testMain() {\n\t\t\t\tSystem.out.println(\"main\");\n\t\t\t\tString[] args = null;\n\t\t\t\tRequestParamsDialog.main(args);\n\t\t\t\t// TODO review the generated test code and remove the default call to fail.\n\t\t\t\tfail(\"The test case is a prototype.\");\n\t\t}\n\t\t\n}",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 4486,
        "completion_tokens": 1292,
        "total_tokens": 5778
    },
    "time_taken": 50.59928607940674,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/RequestParamsDialogTest1.java",
    "original_code": "// RequestParamsDialog.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n/*\n * RequestParamsFrame.java\n *\n * Created on 22.03.2010, 12:53:49\n */\npackage httpanalyzer;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.protocol.HTTP;\n\n/**\n * @author vlad\n */\npublic class RequestParamsDialog extends javax.swing.JDialog {\n\n    private static boolean dataChanged;\n\n    private static String paramsString;\n\n    private static HashMap<String, String> letterMap;\n\n    /**\n     * Creates new form RequestParamsFrame\n     */\n    public RequestParamsDialog(java.awt.Frame parent, boolean modal) {\n        super(parent, modal);\n        initComponents();\n        initLetterMap();\n    }\n\n    private void initLetterMap() {\n        letterMap = new HashMap<String, String>();\n        letterMap.put(\"<\", \"%3C\");\n        letterMap.put(\">\", \"%3E\");\n        letterMap.put(\"~\", \"%7E\");\n        letterMap.put(\".\", \"%2E\");\n        letterMap.put(\"\\\"\", \"%22\");\n        letterMap.put(\"{\", \"%7B\");\n        letterMap.put(\"}\", \"%7D\");\n        letterMap.put(\"|\", \"%7C\");\n        letterMap.put(\"\\\\\", \"%5C\");\n        letterMap.put(\"-\", \"%2D\");\n        letterMap.put(\"`\", \"%60\");\n        letterMap.put(\"_\", \"%5F\");\n        letterMap.put(\"^\", \"%5E\");\n        letterMap.put(\"!\", \"%21\");\n        letterMap.put(\"*\", \"%2A\");\n        letterMap.put(\"'\", \"%27\");\n        letterMap.put(\"(\", \"%28\");\n        letterMap.put(\")\", \"%29\");\n        letterMap.put(\";\", \"%3B\");\n        letterMap.put(\":\", \"%3A\");\n        letterMap.put(\"@\", \"%40\");\n        letterMap.put(\"&\", \"%26\");\n        letterMap.put(\"=\", \"%3D\");\n        letterMap.put(\"+\", \"%2B\");\n        letterMap.put(\"$\", \"%24\");\n        letterMap.put(\",\", \"%2C\");\n        letterMap.put(\"/\", \"%2F\");\n        letterMap.put(\"?\", \"%3F\");\n        letterMap.put(\"%\", \"%25\");\n        letterMap.put(\"#\", \"%23\");\n        letterMap.put(\"[\", \"%5B\");\n        letterMap.put(\"]\", \"%5D\");\n        letterMap.put(\" \", \"%20\");\n    }\n\n    private String encodingString(String baseLine) {\n        StringBuffer resString = new StringBuffer();\n        for (int i = 0; i < baseLine.length(); i++) {\n            String aLetter = baseLine.substring(i, i + 1);\n            //System.out.println(\"roman letter =\"+letterMap.get(aLetter));\n            String str = letterMap.get(aLetter);\n            if (str == null) {\n                str = aLetter;\n            }\n            resString.append(str);\n        }\n        return resString.toString();\n    }\n\n    /**\n     * This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    void initComponents() {\n        paramsScrollPane = new javax.swing.JScrollPane();\n        paramsTextArea = new javax.swing.JTextArea();\n        encodeLabel = new javax.swing.JLabel();\n        decodeLabel = new javax.swing.JLabel();\n        applyButton = new javax.swing.JButton();\n        cancelButton = new javax.swing.JButton();\n        encodeTextField = new javax.swing.JTextField();\n        decodeTextField = new javax.swing.JTextField();\n        rawCheckBox = new javax.swing.JCheckBox();\n        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(RequestParamsDialog.class);\n        // NOI18N\n        setTitle(resourceMap.getString(\"Form.title\"));\n        setIconImage(null);\n        setLocationByPlatform(true);\n        // NOI18N\n        setName(\"Form\");\n        // NOI18N\n        paramsScrollPane.setName(\"paramsScrollPane\");\n        paramsTextArea.setColumns(20);\n        // NOI18N\n        paramsTextArea.setFont(resourceMap.getFont(\"paramsTextArea.font\"));\n        paramsTextArea.setRows(5);\n        paramsTextArea.setTabSize(0);\n        // NOI18N\n        paramsTextArea.setText(resourceMap.getString(\"paramsTextArea.text\"));\n        paramsTextArea.setFocusCycleRoot(true);\n        // NOI18N\n        paramsTextArea.setName(\"paramsTextArea\");\n        paramsScrollPane.setViewportView(paramsTextArea);\n        // NOI18N\n        encodeLabel.setFont(resourceMap.getFont(\"encodeLabel.font\"));\n        // NOI18N\n        encodeLabel.setText(resourceMap.getString(\"encodeLabel.text\"));\n        // NOI18N\n        encodeLabel.setName(\"encodeLabel\");\n        // NOI18N\n        decodeLabel.setFont(resourceMap.getFont(\"decodeLabel.font\"));\n        // NOI18N\n        decodeLabel.setText(resourceMap.getString(\"decodeLabel.text\"));\n        // NOI18N\n        decodeLabel.setName(\"decodeLabel\");\n        // NOI18N\n        applyButton.setFont(resourceMap.getFont(\"applyButton.font\"));\n        // NOI18N\n        applyButton.setIcon(resourceMap.getIcon(\"applyButton.icon\"));\n        applyButton.setMnemonic('A');\n        // NOI18N\n        applyButton.setText(resourceMap.getString(\"applyButton.text\"));\n        // NOI18N\n        applyButton.setToolTipText(resourceMap.getString(\"applyButton.toolTipText\"));\n        // NOI18N\n        applyButton.setName(\"applyButton\");\n        applyButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                applyButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        cancelButton.setFont(resourceMap.getFont(\"cancelButton.font\"));\n        // NOI18N\n        cancelButton.setIcon(resourceMap.getIcon(\"cancelButton.icon\"));\n        cancelButton.setMnemonic('n');\n        // NOI18N\n        cancelButton.setText(resourceMap.getString(\"cancelButton.text\"));\n        // NOI18N\n        cancelButton.setToolTipText(resourceMap.getString(\"cancelButton.toolTipText\"));\n        // NOI18N\n        cancelButton.setName(\"cancelButton\");\n        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cancelButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        encodeTextField.setText(resourceMap.getString(\"encodeTextField.text\"));\n        // NOI18N\n        encodeTextField.setName(\"encodeTextField\");\n        encodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {\n\n            public void keyReleased(java.awt.event.KeyEvent evt) {\n                encodeTextFieldKeyReleased(evt);\n            }\n        });\n        // NOI18N\n        decodeTextField.setText(resourceMap.getString(\"decodeTextField.text\"));\n        // NOI18N\n        decodeTextField.setName(\"decodeTextField\");\n        // NOI18N\n        rawCheckBox.setFont(resourceMap.getFont(\"rawCheckBox.font\"));\n        // NOI18N\n        rawCheckBox.setText(resourceMap.getString(\"rawCheckBox.text\"));\n        // NOI18N\n        rawCheckBox.setToolTipText(resourceMap.getString(\"rawCheckBox.toolTipText\"));\n        rawCheckBox.setFocusable(false);\n        // NOI18N\n        rawCheckBox.setName(\"rawCheckBox\");\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(rawCheckBox).addComponent(paramsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGap(64, 64, 64).addComponent(applyButton).addGap(18, 18, 18).addComponent(cancelButton)).addGroup(layout.createSequentialGroup().addComponent(encodeLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(encodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addComponent(decodeLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(decodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))).addContainerGap()));\n        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(rawCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(paramsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(encodeLabel).addComponent(encodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(decodeLabel).addComponent(decodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(11, 11, 11).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(applyButton).addComponent(cancelButton)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();\n        setBounds((screenSize.width - 361) / 2, (screenSize.height - 360) / 2, 361, 360);\n    }\n\n    // </editor-fold>//GEN-END:initComponents\n    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_applyButtonActionPerformed\n        // TODO Set Settings();\n        //\n        dataChanged = true;\n        String preString = paramsTextArea.getText().replace(\"\\n\", \"&\");\n        if (rawCheckBox.isSelected()) {\n            paramsString = preString;\n        } else {\n            InputStream inStream = null;\n            try {\n                List<NameValuePair> qparams = null;\n                qparams = new ParamsUrlTools().getPairParams(preString);\n                UrlEncodedFormEntity postEntityParams = null;\n                try {\n                    postEntityParams = new UrlEncodedFormEntity(qparams, HTTP.UTF_8);\n                } catch (UnsupportedEncodingException ex) {\n                    Logger.getLogger(RequestParamsDialog.class.getName()).log(Level.SEVERE, null, ex);\n                }\n                inStream = postEntityParams.getContent();\n                // Read and display response.\n                int c = 0;\n                StringBuffer strBuf = new StringBuffer();\n                while ((c = inStream.read()) != -1) {\n                    strBuf.append((char) c);\n                }\n                //qparams = RequestParamsDialog.getRequestParams();\n                paramsString = strBuf.toString();\n            } catch (IOException ex) {\n                Logger.getLogger(RequestParamsDialog.class.getName()).log(Level.SEVERE, null, ex);\n            } finally {\n                try {\n                    inStream.close();\n                } catch (IOException ex) {\n                    Logger.getLogger(RequestParamsDialog.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n        }\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_applyButtonActionPerformed\n    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_cancelButtonActionPerformed\n        dataChanged = false;\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_cancelButtonActionPerformed\n    private void encodeTextFieldKeyReleased(java.awt.event.KeyEvent evt) {\n        //GEN-FIRST:event_encodeTextFieldKeyReleased\n        decodeTextField.setText(encodingString(encodeTextField.getText()));\n    }\n\n    //GEN-LAST:event_encodeTextFieldKeyReleased\n    public static String getRequestParams() {\n        return \"&\" + paramsString;\n    }\n\n    public static boolean isDataChanged() {\n        return dataChanged;\n    }\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        java.awt.EventQueue.invokeLater(new Runnable() {\n\n            @Override\n            public void run() {\n                RequestParamsDialog dialog = new RequestParamsDialog(new javax.swing.JFrame(), true);\n                dialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\n                    @Override\n                    public void windowClosing(java.awt.event.WindowEvent e) {\n                        System.exit(0);\n                    }\n                });\n                dialog.setVisible(true);\n            }\n        });\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton applyButton;\n\n    private javax.swing.JButton cancelButton;\n\n    private javax.swing.JLabel decodeLabel;\n\n    private javax.swing.JTextField decodeTextField;\n\n    private javax.swing.JLabel encodeLabel;\n\n    private javax.swing.JTextField encodeTextField;\n\n    private javax.swing.JScrollPane paramsScrollPane;\n\n    private javax.swing.JTextArea paramsTextArea;\n\n    private javax.swing.JCheckBox rawCheckBox;\n    // End of variables declaration//GEN-END:variables\n}\n",
    "test_prompt": "// RequestParamsDialogTest1.java\n/*\n * RequestParamsFrame.java\n *\n * Created on 22.03.2010, 12:53:49\n */\npackage httpanalyzer;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.protocol.HTTP;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link RequestParamsDialog}.\n* It contains ten unit test cases for the {@link RequestParamsDialog#isDataChanged()} method.\n*/\nclass RequestParamsDialogTest1 {"
},
{
    "id": "cmpl-6qbRCn5shej7rM1RT472LGT1mezyF",
    "object": "text_completion",
    "created": 1677994986,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl2() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl3() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl4() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl5() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl6() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl7() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl8() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl9() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n\t\n\t/**\n\t * Test of splitUrl method, of class ParamsUrlTools.\n\t */\n\t@Test\n\tvoid testSplitUrl10() {\n\t\tSystem.out.println(\"splitUrl\");\n\t\tString startUrl = \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\";\n\t\tJFrame parentFrame = new JFrame();\n\t\tParamsUrlTools instance = new ParamsUrlTools();\n\t\tString[] expResult = {\"www.google.com\", \"80\", \"/search\", \"http://www.google.com/search?q=httpclient&btnG=Google+Search&aq=f&oq=\"};\n\t\tString[] result = instance.splitUrl(startUrl, parentFrame);\n\t\tassertArrayEquals(expResult, result);\n\t}\n}",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 1214,
        "completion_tokens": 1999,
        "total_tokens": 3213
    },
    "time_taken": 62.65060305595398,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/ParamsUrlToolsTest.java",
    "original_code": "// ParamsUrlTools.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.swing.JFrame;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.message.BasicNameValuePair;\n\n/**\n * @author vlad\n */\npublic class ParamsUrlTools {\n\n    /**\n     * Transform long String line with parameters\n     * to List (key, value)\n     * @param params String\n     * @return List<NameValuePair>\n     */\n    public List<NameValuePair> getPairParams(String params) {\n        String[] requestParams = params.split(\"&\");\n        List<NameValuePair> nvps = new ArrayList<NameValuePair>();\n        for (int i = 0; i < requestParams.length; i++) {\n            String workVal = requestParams[i];\n            System.out.println(\"Val =\" + workVal + \"=\");\n            if (!workVal.isEmpty()) {\n                int f_index = requestParams[i].indexOf(\"=\");\n                String key = requestParams[i].substring(0, f_index);\n                String val = requestParams[i].substring(f_index + 1);\n                //System.out.println(\"i=\"+i+\", string=\"+requestParams[i]);\n                System.out.println(\"key = \" + key + \", val=\" + val);\n                nvps.add(new BasicNameValuePair(key, val));\n            }\n        }\n        System.out.println(\"\");\n        return nvps;\n    }\n\n    /**\n     * Get URL and check it. Apply HTTP scheme only.\n     * Cut URL on some parts and send them.\n     * Return String array = {host, port, path, checkedUrl}\n     * @return String[]\n     */\n    public String[] splitUrl(String startUrl, JFrame parentFrame) {\n        String[] returnParams = new String[4];\n        // Verify format of URL.\n        URI verifiedUrl = null;\n        try {\n            verifiedUrl = new URI(startUrl);\n            returnParams[0] = verifiedUrl.getHost();\n            returnParams[1] = Integer.toString(verifiedUrl.getPort());\n            returnParams[2] = verifiedUrl.getPath();\n            String urlSchema = verifiedUrl.getScheme();\n            returnParams[3] = verifiedUrl.toASCIIString();\n            /*String urlPath = verifiedUrl.getPath();\n            System.out.println(\"Host =\"+targetHost);\n            System.out.println(\"Path =\"+urlPath);\n            System.out.println(\"Checked =\"+checkedUrl);\n            System.out.println(\"Query =\"+verifiedUrl.getQuery());\n            System.out.println(\"Checked =\"+verifiedUrl.getScheme());*/\n            if (!urlSchema.startsWith(\"http\")) {\n                String message = \"Sorry,\\n but HTTP(S) protocols are permited only\";\n                new SwingTools(parentFrame).showErrorDialog(\"URL Error\", message);\n            }\n        } catch (URISyntaxException ex) {\n            String message = startUrl + \"\\n is not valid.\";\n            new SwingTools(parentFrame).showErrorDialog(\"URL Error\", message);\n        }\n        return returnParams;\n    }\n}\n",
    "test_prompt": "// ParamsUrlToolsTest.java\npackage httpanalyzer;\n\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.swing.JFrame;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ParamsUrlTools}.\n* It contains ten unit test cases for the {@link ParamsUrlTools#splitUrl(String, JFrame)} method.\n*/\nclass ParamsUrlToolsTest {"
},
{
    "id": "cmpl-6qbSDphq1BpwVQ4J8wtbf2SD8tVTn",
    "object": "text_completion",
    "created": 1677995049,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link HttpAnalyzerApp}.\n\t*/\n\t@Test\n\tpublic void testGetApplication() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof HttpAnalyzerApp);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication2() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link SingleFrameApplication}.\n\t*/\n\t@Test\n\tpublic void testGetApplication3() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof SingleFrameApplication);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication4() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication5() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication6() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication7() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication8() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication9() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n\t\n\t/**\n\t* Test case for {@link HttpAnalyzerApp#getApplication()} method.\n\t* It checks if the method returns an instance of {@link Application}.\n\t*/\n\t@Test\n\tpublic void testGetApplication10() {\n\t\tassertTrue(HttpAnalyzerApp.getApplication() instanceof Application);\n\t}\n}\n\n// HttpAnalyzerView.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n *\n * Copyright (C) 2010, vlad\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * HttpAnalyzerView.java\n */\npackage httpanalyzer;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.Font;\nimport java.awt.GridBagConstraints;\nimport java.awt.GridBagLayout;\nimport java.awt.Insets;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.KeyEvent;\nimport java.awt.event.KeyListener;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseListener;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.BorderFactory;\nimport javax.swing.Box;\nimport javax.swing.BoxLayout;\nimport javax.swing.JButton;\nimport javax.swing.JCheckBox;\nimport javax.swing.JComboBox;\nimport javax.swing.JComponent;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTabbedPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.JTree;\nimport javax.swing.SwingUtilities;\nimport javax.swing.UIManager;\nimport javax.swing.border.Border;\nimport javax.swing.border.TitledBorder;\nimport javax.swing.event.TreeSelectionEvent;\nimport javax.swing.event.TreeSelectionListener;\nimport javax.swing.tree.DefaultMutableTreeNode;\nimport javax.swing.tree.DefaultTreeCellRenderer;\nimport javax.swing.tree.DefaultTreeModel;\nimport javax.swing.tree.TreePath;\nimport javax.swing.tree.TreeSelectionModel;\n\n/**\n * The application's main frame.\n */\npublic class HttpAnalyzerView extends JFrame {\n\n    private JPanel mainPanel;\n    private JPanel requestPanel;\n    private JPanel responsePanel;\n    private JPanel requestHeaderPanel;\n    private JPanel requestBodyPanel;\n    private JPanel responseHeaderPanel;\n    private JPanel responseBodyPanel;\n    private JPanel requestHeaderFieldsPanel;\n    private JPanel requestBodyFieldsPanel;\n    private JPanel responseHeaderFieldsPanel;\n    private JPanel responseBodyFieldsPanel;\n    private JPanel requestHeaderFieldsPanel2;\n    private JPanel requestBodyFieldsPanel2;\n    private JPanel responseHeaderFieldsPanel2;\n    private JPanel responseBodyFieldsPanel2;\n    private JPanel requestHeaderFieldsPanel3;\n    private JPanel requestBodyFieldsPanel3;\n    private JPanel responseHeaderFieldsPanel3;\n    private JPanel responseBodyFieldsPanel3;\n    private JPanel requestHeaderFieldsPanel4;\n    private JPanel requestBodyFieldsPanel4;\n    private JPanel responseHeaderFieldsPanel4;\n    private JPanel responseBodyFieldsPanel4;\n    private JPanel requestHeaderFieldsPanel5;\n    private JPanel requestBodyFieldsPanel5;\n    private JPanel responseHeaderFieldsPanel5;\n    private JPanel responseBodyFieldsPanel5;\n    private JPanel requestHeaderFieldsPanel6;\n    private JPanel requestBodyFieldsPanel6;\n    private JPanel responseHeaderFieldsPanel6;\n    private JPanel responseBodyFieldsPanel6;\n    private JPanel requestHeaderFieldsPanel7;\n    private JPanel requestBodyFieldsPanel7;\n    private JPanel responseHeaderFieldsPanel7;\n   ",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 630,
        "completion_tokens": 2048,
        "total_tokens": 2678
    },
    "time_taken": 30.661205053329468,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HttpAnalyzerAppTest.java",
    "original_code": "// HttpAnalyzerApp.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n *\n * Copyright (C) 2010, vlad\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * HttpAnalyzerApp.java\n */\npackage httpanalyzer;\n\nimport org.jdesktop.application.Application;\nimport org.jdesktop.application.SingleFrameApplication;\n\n/**\n * The main class of the application.\n */\npublic class HttpAnalyzerApp extends SingleFrameApplication {\n\n    /**\n     * At startup create and show the main frame of the application.\n     */\n    @Override\n    protected void startup() {\n        show(new HttpAnalyzerView(this));\n    }\n\n    /**\n     * This method is to initialize the specified window by injecting resources.\n     * Windows shown in our application come fully initialized from the GUI\n     * builder, so this additional configuration is not needed.\n     */\n    @Override\n    protected void configureWindow(java.awt.Window root) {\n    }\n\n    /**\n     * A convenient static getter for the application instance.\n     * @return the instance of HttpAnalyzerApp\n     */\n    public static HttpAnalyzerApp getApplication() {\n        return Application.getInstance(HttpAnalyzerApp.class);\n    }\n\n    /**\n     * Main method launching the application.\n     */\n    public static void main(String[] args) {\n        launch(HttpAnalyzerApp.class, args);\n    }\n}\n",
    "test_prompt": "// HttpAnalyzerAppTest.java\npackage httpanalyzer;\n\nimport org.jdesktop.application.Application;\nimport org.jdesktop.application.SingleFrameApplication;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpAnalyzerApp}.\n* It contains ten unit test cases for the {@link HttpAnalyzerApp#getApplication()} method.\n*/\nclass HttpAnalyzerAppTest {"
},
{
    "id": "cmpl-6qbTG72Jl0YmQ3DSLGMF3JzeZxKD6",
    "object": "text_completion",
    "created": 1677995114,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders0() {\n\t\tHeaderSettings.initHeaders(0, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\", headers[0].getValue());\n\t\tassertEquals(\"Accept\", headers[1].getName());\n\t\tassertEquals(\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", headers[1].getValue());\n\t\tassertEquals(\"Referer\", headers[2].getName());\n\t\tassertEquals(\"http://www.google.com\", headers[2].getValue());\n\t\tassertEquals(\"Connection\", headers[3].getName());\n\t\tassertEquals(\"Keep-Alive\", headers[3].getValue());\n\t\tassertEquals(\"Keep-Alive\", headers[4].getName());\n\t\tassertEquals(\"300\", headers[4].getValue());\n\t}\n\t\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders1() {\n\t\tHeaderSettings.initHeaders(1, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\", headers[0].getValue());\n\t\tassertEquals(\"Accept\", headers[1].getName());\n\t\tassertEquals(\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", headers[1].getValue());\n\t\tassertEquals(\"Referer\", headers[2].getName());\n\t\tassertEquals(\"http://www.google.com\", headers[2].getValue());\n\t\tassertEquals(\"Connection\", headers[3].getName());\n\t\tassertEquals(\"Keep-Alive\", headers[3].getValue());\n\t\tassertEquals(\"Keep-Alive\", headers[4].getName());\n\t\tassertEquals(\"300\", headers[4].getValue());\n\t}\n\t\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders2() {\n\t\tHeaderSettings.initHeaders(2, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\", headers[0].getValue());\n\t\tassertEquals(\"Accept\", headers[1].getName());\n\t\tassertEquals(\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", headers[1].getValue());\n\t\tassertEquals(\"Referer\", headers[2].getName());\n\t\tassertEquals(\"http://www.google.com\", headers[2].getValue());\n\t\tassertEquals(\"Connection\", headers[3].getName());\n\t\tassertEquals(\"Keep-Alive\", headers[3].getValue());\n\t\tassertEquals(\"Keep-Alive\", headers[4].getName());\n\t\tassertEquals(\"300\", headers[4].getValue());\n\t}\n\t\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders3() {\n\t\tHeaderSettings.initHeaders(3, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\", headers[0].getValue());\n\t\tassertEquals(\"Accept\", headers[1].getName());\n\t\tassertEquals(\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", headers[1].getValue());\n\t\tassertEquals(\"Referer\", headers[2].getName());\n\t\tassertEquals(\"http://www.google.com\", headers[2].getValue());\n\t\tassertEquals(\"Connection\", headers[3].getName());\n\t\tassertEquals(\"Keep-Alive\", headers[3].getValue());\n\t\tassertEquals(\"Keep-Alive\", headers[4].getName());\n\t\tassertEquals(\"300\", headers[4].getValue());\n\t}\n\t\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders4() {\n\t\tHeaderSettings.initHeaders(4, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\", headers[0].getValue());\n\t\tassertEquals(\"Accept\", headers[1].getName());\n\t\tassertEquals(\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", headers[1].getValue());\n\t\tassertEquals(\"Referer\", headers[2].getName());\n\t\tassertEquals(\"http://www.google.com\", headers[2].getValue());\n\t\tassertEquals(\"Connection\", headers[3].getName());\n\t\tassertEquals(\"Keep-Alive\", headers[3].getValue());\n\t\tassertEquals(\"Keep-Alive\", headers[4].getName());\n\t\tassertEquals(\"300\", headers[4].getValue());\n\t}\n\t\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders5() {\n\t\tHeaderSettings.initHeaders(5, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"msnbot/1.1 (+http://search.msn.com/msnbot.htm)\", headers[0].getValue());\n\t\tassertEquals(\"Accept\", headers[1].getName());\n\t\tassertEquals(\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", headers[1].getValue());\n\t\tassertEquals(\"Referer\", headers[2].getName());\n\t\tassertEquals(\"http://www.google.com\", headers[2].getValue());\n\t\tassertEquals(\"Connection\", headers[3].getName());\n\t\tassertEquals(\"Keep-Alive\", headers[3].getValue());\n\t\tassertEquals(\"Keep-Alive\", headers[4].getName());\n\t\tassertEquals(\"300\", headers[4].getValue());\n\t}\n\t\n\t/**\n\t* Test case for {@link HeaderSettings#setHeaders()} method.\n\t*/\n\t@Test\n\tvoid testSetHeaders6() {\n\t\tHeaderSettings.initHeaders(6, \"http://www.google.com\");\n\t\tHeader[] headers = HeaderSettings.setHeaders();\n\t\tassertEquals(5, headers.length);\n\t\tassertEquals(\"User-Agent\", headers[0].getName());\n\t\tassertEquals(\"Mozilla/5.0 (compatible; Yahoo! Slur",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 1648,
        "completion_tokens": 2048,
        "total_tokens": 3696
    },
    "time_taken": 31.88356876373291,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HeaderSettingsTest0.java",
    "original_code": "// HeaderSettings.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\n\n/**\n * @author vlad\n */\npublic class HeaderSettings {\n\n    public static String[] userAgents = { \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\", \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\", \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\", \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\", \"msnbot/1.1 (+http://search.msn.com/msnbot.htm)\", \"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\", \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16\" };\n\n    public static final int FIREFOX = 0;\n\n    public static final int IE6 = 1;\n\n    public static final int IE7 = 2;\n\n    public static final int IE8 = 3;\n\n    public static final int GOOGLEBOT = 4;\n\n    public static final int MSNBOT = 5;\n\n    public static final int YAHOOBOT = 6;\n\n    public static final int IPHONE = 7;\n\n    public static final int CUSTOM = 255;\n\n    final String contentCharset = \"utf-8\";\n\n    String setUserAgent;\n\n    private static String presetCookie;\n\n    private static Header[] headersSet;\n\n    /**\n     * Get User-Agent&Referer and set\n     * internal headers\n     */\n    public static void initHeaders(int idAgent, String referer) {\n        HttpGet baseRequest = new HttpGet();\n        baseRequest.addHeader(\"User-Agent\", userAgents[idAgent]);\n        baseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,\" + \"application/xml;q=0.9,*/*;q=0.8\");\n        baseRequest.addHeader(\"Referer\", referer);\n        baseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n        baseRequest.addHeader(\"Keep-Alive\", \"300\");\n        if (presetCookie != null) {\n            baseRequest.addHeader(\"Cookie\", presetCookie);\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Get all headers from user from\n     * and set internal headers\n     */\n    public static void initHeaders(String myHeaders) {\n        HttpGet baseRequest = new HttpGet();\n        String[] headersArray = myHeaders.split(\"\\n\");\n        for (int i = 0; i < headersArray.length; i++) {\n            if (!headersArray[i].isEmpty()) {\n                int indexStr = headersArray[i].indexOf(\":\");\n                String key = headersArray[i].substring(0, indexStr);\n                String val = headersArray[i].substring(indexStr + 1).trim();\n                baseRequest.addHeader(key, val);\n                System.out.println(\"Key =\" + key + \", val=\" + val);\n            }\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Send all internal headers\n     */\n    public static Header[] setHeaders() {\n        return headersSet;\n    }\n\n    /**\n     * Set internal header Cookie:\n     */\n    public static void setCookie(String cookie) {\n        presetCookie = cookie;\n    }\n\n    /**\n     * Disable headers Cookie\n     */\n    public static void clearCookie() {\n        presetCookie = null;\n    }\n\n    public static String getHeaders() {\n        Header[] headers = headersSet;\n        String headersString = null;\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(HttpRequestBase baseRequest) {\n        Header[] headers = baseRequest.getAllHeaders();\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(Header[] headers) {\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n}\n",
    "test_prompt": "// HeaderSettingsTest0.java\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HeaderSettings}.\n* It contains ten unit test cases for the {@link HeaderSettings#setHeaders()} method.\n*/\nclass HeaderSettingsTest0 {"
},
{
    "id": "cmpl-6qbUJ5PACebIz9c9ObwiSpoZojGl8",
    "object": "text_completion",
    "created": 1677995179,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.FIREFOX, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders1() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.IE6, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders2() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.IE7, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders3() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.IE8, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders4() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.GOOGLEBOT, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders5() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.MSNBOT, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: msnbot/1.1 (+http://search.msn.com/msnbot.htm)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders6() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.YAHOOBOT, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders7() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.IPHONE, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders8() {\n\t\t\t\tHeaderSettings.initHeaders(HeaderSettings.CUSTOM, \"http://www.google.com\");\n\t\t\t\tString headers = HeaderSettings.getHeaders();\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headers);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#getHeaders()} method.\n\t\t* It checks if the method returns the correct value.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetHeaders9() {\n\t\t\t\tHeaderSettings.initHeaders(\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 1648,
        "completion_tokens": 2048,
        "total_tokens": 3696
    },
    "time_taken": 31.209535837173462,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HeaderSettingsTest1.java",
    "original_code": "// HeaderSettings.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\n\n/**\n * @author vlad\n */\npublic class HeaderSettings {\n\n    public static String[] userAgents = { \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\", \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\", \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\", \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\", \"msnbot/1.1 (+http://search.msn.com/msnbot.htm)\", \"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\", \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16\" };\n\n    public static final int FIREFOX = 0;\n\n    public static final int IE6 = 1;\n\n    public static final int IE7 = 2;\n\n    public static final int IE8 = 3;\n\n    public static final int GOOGLEBOT = 4;\n\n    public static final int MSNBOT = 5;\n\n    public static final int YAHOOBOT = 6;\n\n    public static final int IPHONE = 7;\n\n    public static final int CUSTOM = 255;\n\n    final String contentCharset = \"utf-8\";\n\n    String setUserAgent;\n\n    private static String presetCookie;\n\n    private static Header[] headersSet;\n\n    /**\n     * Get User-Agent&Referer and set\n     * internal headers\n     */\n    public static void initHeaders(int idAgent, String referer) {\n        HttpGet baseRequest = new HttpGet();\n        baseRequest.addHeader(\"User-Agent\", userAgents[idAgent]);\n        baseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,\" + \"application/xml;q=0.9,*/*;q=0.8\");\n        baseRequest.addHeader(\"Referer\", referer);\n        baseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n        baseRequest.addHeader(\"Keep-Alive\", \"300\");\n        if (presetCookie != null) {\n            baseRequest.addHeader(\"Cookie\", presetCookie);\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Get all headers from user from\n     * and set internal headers\n     */\n    public static void initHeaders(String myHeaders) {\n        HttpGet baseRequest = new HttpGet();\n        String[] headersArray = myHeaders.split(\"\\n\");\n        for (int i = 0; i < headersArray.length; i++) {\n            if (!headersArray[i].isEmpty()) {\n                int indexStr = headersArray[i].indexOf(\":\");\n                String key = headersArray[i].substring(0, indexStr);\n                String val = headersArray[i].substring(indexStr + 1).trim();\n                baseRequest.addHeader(key, val);\n                System.out.println(\"Key =\" + key + \", val=\" + val);\n            }\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Send all internal headers\n     */\n    public static Header[] setHeaders() {\n        return headersSet;\n    }\n\n    /**\n     * Set internal header Cookie:\n     */\n    public static void setCookie(String cookie) {\n        presetCookie = cookie;\n    }\n\n    /**\n     * Disable headers Cookie\n     */\n    public static void clearCookie() {\n        presetCookie = null;\n    }\n\n    public static String getHeaders() {\n        Header[] headers = headersSet;\n        String headersString = null;\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(HttpRequestBase baseRequest) {\n        Header[] headers = baseRequest.getAllHeaders();\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(Header[] headers) {\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n}\n",
    "test_prompt": "// HeaderSettingsTest1.java\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HeaderSettings}.\n* It contains ten unit test cases for the {@link HeaderSettings#getHeaders()} method.\n*/\nclass HeaderSettingsTest1 {"
},
{
    "id": "cmpl-6qbVMNUd9RSpF5hd0kD5O232L2Ve1",
    "object": "text_completion",
    "created": 1677995244,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(HttpRequestBase)} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tString expected = \"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Referer: http://www.google.com\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Connection: Keep-Alive\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Keep-Alive: 300\\n\";\n\t\t\t\tString actual = HeaderSettings.showHeaders(baseRequest);\n\t\t\t\tassertEquals(expected, actual);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(HttpRequestBase)} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders2() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tString expected = \"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Referer: http://www.google.com\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Connection: Keep-Alive\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Keep-Alive: 300\\n\";\n\t\t\t\tString actual = HeaderSettings.showHeaders(baseRequest);\n\t\t\t\tassertEquals(expected, actual);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(HttpRequestBase)} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders3() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tString expected = \"User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Referer: http://www.google.com\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Connection: Keep-Alive\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Keep-Alive: 300\\n\";\n\t\t\t\tString actual = HeaderSettings.showHeaders(baseRequest);\n\t\t\t\tassertEquals(expected, actual);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(HttpRequestBase)} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders4() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tString expected = \"User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Referer: http://www.google.com\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Connection: Keep-Alive\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Keep-Alive: 300\\n\";\n\t\t\t\tString actual = HeaderSettings.showHeaders(baseRequest);\n\t\t\t\tassertEquals(expected, actual);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(HttpRequestBase)} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders5() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tString expected = \"User-Agent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Accept: text/html,application/",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 1651,
        "completion_tokens": 2048,
        "total_tokens": 3699
    },
    "time_taken": 32.08514618873596,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HeaderSettingsTest2.java",
    "original_code": "// HeaderSettings.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\n\n/**\n * @author vlad\n */\npublic class HeaderSettings {\n\n    public static String[] userAgents = { \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\", \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\", \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\", \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\", \"msnbot/1.1 (+http://search.msn.com/msnbot.htm)\", \"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\", \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16\" };\n\n    public static final int FIREFOX = 0;\n\n    public static final int IE6 = 1;\n\n    public static final int IE7 = 2;\n\n    public static final int IE8 = 3;\n\n    public static final int GOOGLEBOT = 4;\n\n    public static final int MSNBOT = 5;\n\n    public static final int YAHOOBOT = 6;\n\n    public static final int IPHONE = 7;\n\n    public static final int CUSTOM = 255;\n\n    final String contentCharset = \"utf-8\";\n\n    String setUserAgent;\n\n    private static String presetCookie;\n\n    private static Header[] headersSet;\n\n    /**\n     * Get User-Agent&Referer and set\n     * internal headers\n     */\n    public static void initHeaders(int idAgent, String referer) {\n        HttpGet baseRequest = new HttpGet();\n        baseRequest.addHeader(\"User-Agent\", userAgents[idAgent]);\n        baseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,\" + \"application/xml;q=0.9,*/*;q=0.8\");\n        baseRequest.addHeader(\"Referer\", referer);\n        baseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n        baseRequest.addHeader(\"Keep-Alive\", \"300\");\n        if (presetCookie != null) {\n            baseRequest.addHeader(\"Cookie\", presetCookie);\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Get all headers from user from\n     * and set internal headers\n     */\n    public static void initHeaders(String myHeaders) {\n        HttpGet baseRequest = new HttpGet();\n        String[] headersArray = myHeaders.split(\"\\n\");\n        for (int i = 0; i < headersArray.length; i++) {\n            if (!headersArray[i].isEmpty()) {\n                int indexStr = headersArray[i].indexOf(\":\");\n                String key = headersArray[i].substring(0, indexStr);\n                String val = headersArray[i].substring(indexStr + 1).trim();\n                baseRequest.addHeader(key, val);\n                System.out.println(\"Key =\" + key + \", val=\" + val);\n            }\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Send all internal headers\n     */\n    public static Header[] setHeaders() {\n        return headersSet;\n    }\n\n    /**\n     * Set internal header Cookie:\n     */\n    public static void setCookie(String cookie) {\n        presetCookie = cookie;\n    }\n\n    /**\n     * Disable headers Cookie\n     */\n    public static void clearCookie() {\n        presetCookie = null;\n    }\n\n    public static String getHeaders() {\n        Header[] headers = headersSet;\n        String headersString = null;\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(HttpRequestBase baseRequest) {\n        Header[] headers = baseRequest.getAllHeaders();\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(Header[] headers) {\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n}\n",
    "test_prompt": "// HeaderSettingsTest2.java\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HeaderSettings}.\n* It contains ten unit test cases for the {@link HeaderSettings#showHeaders(HttpRequestBase)} method.\n*/\nclass HeaderSettingsTest2 {"
},
{
    "id": "cmpl-6qbWPtO7W8EX6qihDPAFYfb4xyuWG",
    "object": "text_completion",
    "created": 1677995309,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(Header[])} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tHeader[] headers = baseRequest.getAllHeaders();\n\t\t\t\tString headersString = HeaderSettings.showHeaders(headers);\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headersString);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(Header[])} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders2() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tHeader[] headers = baseRequest.getAllHeaders();\n\t\t\t\tString headersString = HeaderSettings.showHeaders(headers);\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headersString);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(Header[])} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders3() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tHeader[] headers = baseRequest.getAllHeaders();\n\t\t\t\tString headersString = HeaderSettings.showHeaders(headers);\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headersString);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(Header[])} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders4() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tHeader[] headers = baseRequest.getAllHeaders();\n\t\t\t\tString headersString = HeaderSettings.showHeaders(headers);\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headersString);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(Header[])} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders5() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n\t\t\t\tbaseRequest.addHeader(\"Referer\", \"http://www.google.com\");\n\t\t\t\tbaseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n\t\t\t\tbaseRequest.addHeader(\"Keep-Alive\", \"300\");\n\t\t\t\tHeader[] headers = baseRequest.getAllHeaders();\n\t\t\t\tString headersString = HeaderSettings.showHeaders(headers);\n\t\t\t\tassertEquals(\"User-Agent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\nReferer: http://www.google.com\\nConnection: Keep-Alive\\nKeep-Alive: 300\\n\", headersString);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HeaderSettings#showHeaders(Header[])} method.\n\t\t* It checks if the method returns the correct string representation of the headers.\n\t\t*/\n\t\t@Test\n\t\tvoid testShowHeaders6() {\n\t\t\t\tHttpGet baseRequest = new HttpGet();\n\t\t\t\tbaseRequest.addHeader(\"User-Agent\", \"msnbot/1.1 (+http://search.msn.com/msnbot.htm)\");\n\t\t\t\tbaseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 1651,
        "completion_tokens": 2048,
        "total_tokens": 3699
    },
    "time_taken": 34.32328486442566,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HeaderSettingsTest3.java",
    "original_code": "// HeaderSettings.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\n\n/**\n * @author vlad\n */\npublic class HeaderSettings {\n\n    public static String[] userAgents = { \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\", \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\", \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\", \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\", \"msnbot/1.1 (+http://search.msn.com/msnbot.htm)\", \"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\", \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16\" };\n\n    public static final int FIREFOX = 0;\n\n    public static final int IE6 = 1;\n\n    public static final int IE7 = 2;\n\n    public static final int IE8 = 3;\n\n    public static final int GOOGLEBOT = 4;\n\n    public static final int MSNBOT = 5;\n\n    public static final int YAHOOBOT = 6;\n\n    public static final int IPHONE = 7;\n\n    public static final int CUSTOM = 255;\n\n    final String contentCharset = \"utf-8\";\n\n    String setUserAgent;\n\n    private static String presetCookie;\n\n    private static Header[] headersSet;\n\n    /**\n     * Get User-Agent&Referer and set\n     * internal headers\n     */\n    public static void initHeaders(int idAgent, String referer) {\n        HttpGet baseRequest = new HttpGet();\n        baseRequest.addHeader(\"User-Agent\", userAgents[idAgent]);\n        baseRequest.addHeader(\"Accept\", \"text/html,application/xhtml+xml,\" + \"application/xml;q=0.9,*/*;q=0.8\");\n        baseRequest.addHeader(\"Referer\", referer);\n        baseRequest.addHeader(\"Connection\", \"Keep-Alive\");\n        baseRequest.addHeader(\"Keep-Alive\", \"300\");\n        if (presetCookie != null) {\n            baseRequest.addHeader(\"Cookie\", presetCookie);\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Get all headers from user from\n     * and set internal headers\n     */\n    public static void initHeaders(String myHeaders) {\n        HttpGet baseRequest = new HttpGet();\n        String[] headersArray = myHeaders.split(\"\\n\");\n        for (int i = 0; i < headersArray.length; i++) {\n            if (!headersArray[i].isEmpty()) {\n                int indexStr = headersArray[i].indexOf(\":\");\n                String key = headersArray[i].substring(0, indexStr);\n                String val = headersArray[i].substring(indexStr + 1).trim();\n                baseRequest.addHeader(key, val);\n                System.out.println(\"Key =\" + key + \", val=\" + val);\n            }\n        }\n        headersSet = baseRequest.getAllHeaders();\n    }\n\n    /**\n     * Send all internal headers\n     */\n    public static Header[] setHeaders() {\n        return headersSet;\n    }\n\n    /**\n     * Set internal header Cookie:\n     */\n    public static void setCookie(String cookie) {\n        presetCookie = cookie;\n    }\n\n    /**\n     * Disable headers Cookie\n     */\n    public static void clearCookie() {\n        presetCookie = null;\n    }\n\n    public static String getHeaders() {\n        Header[] headers = headersSet;\n        String headersString = null;\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(HttpRequestBase baseRequest) {\n        Header[] headers = baseRequest.getAllHeaders();\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n\n    public static String showHeaders(Header[] headers) {\n        StringBuffer strBuf = new StringBuffer();\n        for (int i = 0; i < headers.length; i++) {\n            strBuf.append(headers[i].toString() + \"\\n\");\n        }\n        String headersString = strBuf.toString();\n        return headersString;\n    }\n}\n",
    "test_prompt": "// HeaderSettingsTest3.java\npackage httpanalyzer;\n\nimport org.apache.http.Header;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpRequestBase;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HeaderSettings}.\n* It contains ten unit test cases for the {@link HeaderSettings#showHeaders(Header[])} method.\n*/\nclass HeaderSettingsTest3 {"
},
{
    "id": "cmpl-6qbXSf4Yst3pV9z9KHA7JaIX4UpuQ",
    "object": "text_completion",
    "created": 1677995374,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t * Test of read method, of class ScreenInputFilter.\n\t */\n\t@Test\n\tvoid testRead() {\n\t\tSystem.out.println(\"read\");\n\t\tScreenInputFilter instance = new ScreenInputFilter(new InputStream() {\n\t\t\tint[] data = {0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 575,
        "completion_tokens": 2048,
        "total_tokens": 2623
    },
    "time_taken": 40.781749963760376,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/ScreenInputFilterTest.java",
    "original_code": "// ScreenInputFilter.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.io.FilterInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * @author vlad\n */\npublic class ScreenInputFilter extends FilterInputStream {\n\n    public ScreenInputFilter(InputStream in) {\n        super(in);\n    }\n\n    @Override\n    public int read() {\n        int character = 0;\n        try {\n            character = super.read();\n            if (character == 0x0A)\n                return character;\n            else if (character < 0x20) {\n                return 0x58;\n            }\n        } catch (IOException ex) {\n            Logger.getLogger(ScreenInputFilter.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        return character;\n    }\n}\n",
    "test_prompt": "// ScreenInputFilterTest.java\npackage httpanalyzer;\n\nimport java.io.FilterInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ScreenInputFilter}.\n* It contains ten unit test cases for the {@link ScreenInputFilter#read()} method.\n*/\nclass ScreenInputFilterTest {"
},
{
    "id": "cmpl-6qbYV2X10AbZOcISwgmBu0iNIGaCw",
    "object": "text_completion",
    "created": 1677995439,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"\".\n\t* Expected result: empty list.\n\t*/\n\t@Test\n\tvoid testGetPairParams_1() {\n\t\tString params = \"\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b\".\n\t* Expected result: list with one element.\n\t*/\n\t@Test\n\tvoid testGetPairParams_2() {\n\t\tString params = \"a=b\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d\".\n\t* Expected result: list with two elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_3() {\n\t\tString params = \"a=b&c=d\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\texpResult.add(new BasicNameValuePair(\"c\", \"d\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d&e=f\".\n\t* Expected result: list with three elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_4() {\n\t\tString params = \"a=b&c=d&e=f\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\texpResult.add(new BasicNameValuePair(\"c\", \"d\"));\n\t\texpResult.add(new BasicNameValuePair(\"e\", \"f\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d&e=f&g=h\".\n\t* Expected result: list with four elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_5() {\n\t\tString params = \"a=b&c=d&e=f&g=h\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\texpResult.add(new BasicNameValuePair(\"c\", \"d\"));\n\t\texpResult.add(new BasicNameValuePair(\"e\", \"f\"));\n\t\texpResult.add(new BasicNameValuePair(\"g\", \"h\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d&e=f&g=h&i=j\".\n\t* Expected result: list with five elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_6() {\n\t\tString params = \"a=b&c=d&e=f&g=h&i=j\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\texpResult.add(new BasicNameValuePair(\"c\", \"d\"));\n\t\texpResult.add(new BasicNameValuePair(\"e\", \"f\"));\n\t\texpResult.add(new BasicNameValuePair(\"g\", \"h\"));\n\t\texpResult.add(new BasicNameValuePair(\"i\", \"j\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d&e=f&g=h&i=j&k=l\".\n\t* Expected result: list with six elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_7() {\n\t\tString params = \"a=b&c=d&e=f&g=h&i=j&k=l\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\texpResult.add(new BasicNameValuePair(\"c\", \"d\"));\n\t\texpResult.add(new BasicNameValuePair(\"e\", \"f\"));\n\t\texpResult.add(new BasicNameValuePair(\"g\", \"h\"));\n\t\texpResult.add(new BasicNameValuePair(\"i\", \"j\"));\n\t\texpResult.add(new BasicNameValuePair(\"k\", \"l\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d&e=f&g=h&i=j&k=l&m=n\".\n\t* Expected result: list with seven elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_8() {\n\t\tString params = \"a=b&c=d&e=f&g=h&i=j&k=l&m=n\";\n\t\tList<NameValuePair> expResult = new ArrayList<NameValuePair>();\n\t\texpResult.add(new BasicNameValuePair(\"a\", \"b\"));\n\t\texpResult.add(new BasicNameValuePair(\"c\", \"d\"));\n\t\texpResult.add(new BasicNameValuePair(\"e\", \"f\"));\n\t\texpResult.add(new BasicNameValuePair(\"g\", \"h\"));\n\t\texpResult.add(new BasicNameValuePair(\"i\", \"j\"));\n\t\texpResult.add(new BasicNameValuePair(\"k\", \"l\"));\n\t\texpResult.add(new BasicNameValuePair(\"m\", \"n\"));\n\t\tList<NameValuePair> result = ParamsTools.getPairParams(params);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link ParamsTools#getPairParams(String)} method.\n\t* Test data: \"a=b&c=d&e=f&g=h&i=j&k=l&m=n&o=p\".\n\t* Expected result: list with eight elements.\n\t*/\n\t@Test\n\tvoid testGetPairParams_9() {\n\t\tString params = \"a=b&c=d&e=f&g=h&i=j&k=l&m=n&o=p\";\n\t\tList<NameValuePair> expResult",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 690,
        "completion_tokens": 2048,
        "total_tokens": 2738
    },
    "time_taken": 72.47285008430481,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/ParamsToolsTest.java",
    "original_code": "// ParamsTools.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.message.BasicNameValuePair;\n\n/**\n * @author vlad\n */\npublic class ParamsTools {\n\n    public static List<NameValuePair> getPairParams(String params) {\n        String[] requestParams = params.split(\"&\");\n        List<NameValuePair> nvps = new ArrayList<NameValuePair>();\n        for (int i = 0; i < requestParams.length; i++) {\n            String workVal = requestParams[i];\n            System.out.println(\"Val =\" + workVal + \"=\");\n            if (!workVal.isEmpty()) {\n                int f_index = requestParams[i].indexOf(\"=\");\n                String key = requestParams[i].substring(0, f_index);\n                String val = requestParams[i].substring(f_index + 1);\n                //System.out.println(\"i=\"+i+\", string=\"+requestParams[i]);\n                System.out.println(\"key = \" + key + \", val=\" + val);\n                nvps.add(new BasicNameValuePair(key, val));\n            }\n        }\n        System.out.println(\"\");\n        return nvps;\n    }\n}\n",
    "test_prompt": "// ParamsToolsTest.java\npackage httpanalyzer;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ParamsTools}.\n* It contains ten unit test cases for the {@link ParamsTools#getPairParams(String)} method.\n*/\nclass ParamsToolsTest {"
},
{
    "id": "cmpl-6qbZfIAUabp07KKuEyUCiUMbfRJBE",
    "object": "text_completion",
    "created": 1677995511,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is already in the combo box.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_ItemAlreadyInComboBox() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.addItem(\"Item 2\");\n\t\t\t\tcomboBox.addItem(\"Item 3\");\n\t\t\t\tcomboBox.setSelectedItem(\"Item 2\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns false when the selected item is not in the combo box.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_ItemNotInComboBox() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.addItem(\"Item 2\");\n\t\t\t\tcomboBox.addItem(\"Item 3\");\n\t\t\t\tcomboBox.setSelectedItem(\"Item 4\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertFalse(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is empty.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_EmptyItem() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.addItem(\"Item 2\");\n\t\t\t\tcomboBox.addItem(\"Item 3\");\n\t\t\t\tcomboBox.setSelectedItem(\"\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is null.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_NullItem() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.addItem(\"Item 2\");\n\t\t\t\tcomboBox.addItem(\"Item 3\");\n\t\t\t\tcomboBox.setSelectedItem(null);\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is the first item in the combo box.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_FirstItem() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.addItem(\"Item 2\");\n\t\t\t\tcomboBox.addItem(\"Item 3\");\n\t\t\t\tcomboBox.setSelectedItem(\"Item 1\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is the last item in the combo box.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_LastItem() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.addItem(\"Item 2\");\n\t\t\t\tcomboBox.addItem(\"Item 3\");\n\t\t\t\tcomboBox.setSelectedItem(\"Item 3\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is the only item in the combo box.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_OnlyItem() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.addItem(\"Item 1\");\n\t\t\t\tcomboBox.setSelectedItem(\"Item 1\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the combo box is empty.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_EmptyComboBox() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.setSelectedItem(\"Item 1\");\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the combo box is null.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_NullComboBox() {\n\t\t\t\tJComboBox<String> comboBox = null;\n\t\t\t\t\n\t\t\t\tSwingTools swingTools = new SwingTools(new JFrame());\n\t\t\t\tboolean result = swingTools.checkAddComboItem(comboBox);\n\t\t\t\t\n\t\t\t\tassertTrue(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link SwingTools#checkAddComboItem(JComboBox)} method.\n\t\t* It checks if the method returns true when the selected item is null and the combo box is empty.\n\t\t*/\n\t\t@Test\n\t\tvoid testCheckAddComboItem_NullItemAndEmptyComboBox() {\n\t\t\t\tJComboBox<String> comboBox = new JComboBox<>();\n\t\t\t\tcomboBox.setSelectedItem(null);\n\t\t\t\t\n\t\t\t",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 1787,
        "completion_tokens": 2048,
        "total_tokens": 3835
    },
    "time_taken": 53.223400831222534,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/SwingToolsTest.java",
    "original_code": "// SwingTools.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.awt.Color;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JComboBox;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport javax.swing.text.SimpleAttributeSet;\nimport javax.swing.text.StyleConstants;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.util.EntityUtils;\n\n/**\n * @author vlad\n */\npublic class SwingTools {\n\n    public final Color COOKIE_COLOR = Color.cyan;\n\n    public final Color DATE_COLOR = Color.white;\n\n    public final Color POST_DATA_COLOR = Color.magenta;\n\n    public final Color SPLITER_COLOR = Color.lightGray;\n\n    public final Color REQUEST_COLOR = Color.lightGray;\n\n    public final Color RESPONSE_COLOR = Color.green;\n\n    public final Color ENTITY_COLOR = Color.yellow;\n\n    private HttpAnalyzerView httpView;\n\n    private JFrame parentFrame;\n\n    public SwingTools(JFrame mainFrame) {\n        parentFrame = mainFrame;\n    }\n\n    public SwingTools(HttpAnalyzerView mainView, JFrame mainFrame) {\n        httpView = mainView;\n        parentFrame = mainFrame;\n    }\n\n    /**\n     * Search selected items in Combo\n     * Replay TRUE if it is found\n     * @param targetCombo\n     * @return\n     */\n    public boolean checkAddComboItem(JComboBox targetCombo) {\n        int lenCombo = targetCombo.getItemCount();\n        String currentItem = (String) targetCombo.getSelectedItem();\n        boolean result = false;\n        //System.out.println(\"Curr\"+currentItem);\n        for (int i = 0; i < lenCombo; i++) {\n            //System.out.println(\"Check \"+targetCombo.getItemAt(i));\n            if (targetCombo.getItemAt(i).equals(currentItem)) {\n                result = true;\n            } else if (currentItem.isEmpty()) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Show error frame with additional information\n     * @param header Windows header\n     * @param error Text of error\n     */\n    public void showErrorDialog(String header, String error) {\n        String message = \"\\\"Information:\\n\" + error + \"\\\"\";\n        JOptionPane.showMessageDialog(parentFrame, message, header, JOptionPane.ERROR_MESSAGE);\n    }\n\n    /*\n     * Change text color\n     */\n    public void spliterOut() {\n        Document doc = httpView.replayDataPane.getStyledDocument();\n        SimpleAttributeSet set = new SimpleAttributeSet();\n        StyleConstants.setForeground(set, SPLITER_COLOR);\n        //StyleConstants.setBackground(set, Color.blue);\n        doc = httpView.replayDataPane.getStyledDocument();\n        try {\n            doc.insertString(doc.getLength(), \"----------------------------------------\\n\", set);\n        } catch (BadLocationException ex) {\n            Logger.getLogger(SwingTools.class.getName()).log(Level.SEVERE, null, ex);\n            new SwingTools(parentFrame).showErrorDialog(\"Bad location\", ex.getLocalizedMessage());\n        }\n    }\n\n    /**\n     * Output text to another Panes.\n     * replayTick points destination of output.\n     * True = replayPane, False = debugPane.\n     *\n     * @param text String message\n     * @param col Color Text color\n     * @param replayTick boolean\n     */\n    public void setColorTextDoc(String text, Color col, boolean replayTick) {\n        SimpleAttributeSet set = new SimpleAttributeSet();\n        set = new SimpleAttributeSet();\n        StyleConstants.setForeground(set, col);\n        Document doc = httpView.replayDataPane.getStyledDocument();\n        if ((replayTick) || (httpView.mergeInfoCheckBox.isSelected())) {\n            doc = httpView.replayDataPane.getStyledDocument();\n        } else {\n            doc = httpView.debugDataPane.getStyledDocument();\n        }\n        try {\n            doc.insertString(doc.getLength(), text, set);\n        } catch (BadLocationException ex) {\n            Logger.getLogger(SwingTools.class.getName()).log(Level.SEVERE, null, ex);\n            new SwingTools(parentFrame).showErrorDialog(\"Bad location\", ex.getLocalizedMessage());\n        }\n    }\n\n    public void showEntity(HttpEntity entity) {\n        // Show content\n        String entityString = null;\n        try {\n            entityString = EntityUtils.toString(entity);\n        } catch (IOException ex) {\n            Logger.getLogger(SwingTools.class.getName()).log(Level.SEVERE, null, ex);\n            new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n        }\n        //System.out.println(entityString);\n        setColorTextDoc(entityString + \"\\n\", ENTITY_COLOR, true);\n    }\n}\n",
    "test_prompt": "// SwingToolsTest.java\npackage httpanalyzer;\n\nimport java.awt.Color;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JComboBox;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport javax.swing.text.SimpleAttributeSet;\nimport javax.swing.text.StyleConstants;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.util.EntityUtils;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SwingTools}.\n* It contains ten unit test cases for the {@link SwingTools#checkAddComboItem(JComboBox)} method.\n*/\nclass SwingToolsTest {"
},
{
    "id": "cmpl-6qbaieSs9peKyKzhbnBWxV03seZX0",
    "object": "text_completion",
    "created": 1677995576,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#saveEntity(HttpEntity, String)} method.\n\t\t* <p>\n\t\t* Test case for the following conditions:\n\t\t* <ul>\n\t\t* <li>entity is null</li>\n\t\t* <li>fileName is null</li>\n\t\t* </ul>\n\t\t* <p>\n\t\t* Expected result:\n\t\t* <ul>\n\t\t* <li>IllegalArgumentException</li>\n\t\t* </ul>\n\t\t*/\n\t\t@Test\n\t\tvoid testSaveEntity_1() {\n\t\t\t\tHttpEntity entity = null;\n\t\t\t\tString fileName = null;\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tassertThrows(IllegalArgumentException.class, () -> {\n\t\t\t\t\t\thttpFileUtils.saveEntity(entity, fileName);\n\t\t\t\t});\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#saveEntity(HttpEntity, String)} method.\n\t\t* <p>\n\t\t* Test case for the following conditions:\n\t\t* <ul>\n\t\t* <li>entity is null</li>\n\t\t* <li>fileName is not null</li>\n\t\t* </ul>\n\t\t* <p>\n\t\t* Expected result:\n\t\t* <ul>\n\t\t* <li>IllegalArgumentException</li>\n\t\t* </ul>\n\t\t*/\n\t\t@Test\n\t\tvoid testSaveEntity_2() {\n\t\t\t\tHttpEntity entity = null;\n\t\t\t\tString fileName = \"\";\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tassertThrows(IllegalArgumentException.class, () -> {\n\t\t\t\t\t\thttpFileUtils.saveEntity(entity, fileName);\n\t\t\t\t});\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#saveEntity(HttpEntity, String)} method.\n\t\t* <p>\n\t\t* Test case for the following conditions:\n\t\t* <ul>\n\t\t* <li>entity is not null</li>\n\t\t* <li>fileName is null</li>\n\t\t* </ul>\n\t\t* <p>\n\t\t* Expected result:\n\t\t* <ul>\n\t\t* <li>IllegalArgumentException</li>\n\t\t* </ul>\n\t\t*/\n\t\t@Test\n\t\tvoid testSaveEntity_3() {\n\t\t\t\tHttpEntity entity = new HttpEntity() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean isRepeatable() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean isChunked() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic long getContentLength() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic org.apache.http.Header getContentType() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic org.apache.http.Header getContentEncoding() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic InputStream getContent() throws IOException, IllegalStateException {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void writeTo(OutputStream outstream) throws IOException {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean isStreaming() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void consumeContent() throws IOException {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tString fileName = null;\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tassertThrows(IllegalArgumentException.class, () -> {\n\t\t\t\t\t\thttpFileUtils.saveEntity(entity, fileName);\n\t\t\t\t});\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#saveEntity(HttpEntity, String)} method.\n\t\t* <p>\n\t\t* Test case for the following conditions:\n\t\t* <ul>\n\t\t* <li>entity is not null</li>\n\t\t* <li>fileName is not null</li>\n\t\t* <li>entity.getContent() throws IOException</li>\n\t\t* </ul>\n\t\t* <p>\n\t\t* Expected result:\n\t\t* <ul>\n\t\t* <li>IOException</li>\n\t\t* </ul>\n\t\t*/\n\t\t@Test\n\t\tvoid testSaveEntity_4() {\n\t\t\t\tHttpEntity entity = new HttpEntity() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean isRepeatable() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean isChunked() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic long getContentLength() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic org.apache.http.Header getContentType() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic org.apache.http.Header getContentEncoding() {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic InputStream getContent() throws IOException, IllegalStateException {\n\t\t\t\t\t\t\t\tthrow new IOException();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void writeTo(OutputStream outstream) throws IOException {\n\t\t\t\t\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 2960,
        "completion_tokens": 2048,
        "total_tokens": 5008
    },
    "time_taken": 35.53774619102478,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HttpFileUtilsTest0.java",
    "original_code": "// HttpFileUtils.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.RandomAccessFile;\nimport java.util.Calendar;\nimport java.util.Properties;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport org.apache.http.HttpEntity;\n\n/**\n * @author vlad\n */\npublic class HttpFileUtils {\n\n    static final int MAX_BUFFER_SIZE = 8192;\n\n    /**\n     * Save Http entity to file\n     * @param entity HttpEntity\n     * @param fileName String\n     */\n    public long saveEntity(HttpEntity entity, String fileName) {\n        long size = 0L;\n        File file = new File(fileName);\n        byte[] buffer = new byte[MAX_BUFFER_SIZE];\n        // Read from server into buffer.\n        InputStream streamEntity;\n        RandomAccessFile outFile;\n        try {\n            streamEntity = entity.getContent();\n            outFile = new RandomAccessFile(file, \"rw\");\n            int read = 0;\n            // Rewrite file\n            outFile.setLength(0);\n            System.out.println(\"Buffer size =\" + buffer.length);\n            while ((read = streamEntity.read(buffer)) != -1) {\n                size = size + read;\n                // Write buffer to file\n                outFile.write(buffer, 0, read);\n            }\n            outFile.close();\n            streamEntity.close();\n        } catch (IOException ex) {\n            Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n        } catch (IllegalStateException ex) {\n            Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        return size;\n    }\n\n    /**\n     * Filter for FileChooser *.XML\n     */\n    private class MyXmlFilter extends javax.swing.filechooser.FileFilter {\n\n        @Override\n        public boolean accept(File file) {\n            // Allow only directories, or files with \".txt\" extension\n            return file.isDirectory() || file.getAbsolutePath().endsWith(\".xml\");\n        }\n\n        @Override\n        public String getDescription() {\n            // This description will be displayed in the dialog,\n            // hard-coded = ugly, should be done via I18N\n            return \"XML files (*.xml)\";\n        }\n    }\n\n    /**\n     * Filter for FileChooser *.TXT\n     */\n    private class MyTxtFilter extends javax.swing.filechooser.FileFilter {\n\n        @Override\n        public boolean accept(File file) {\n            // Allow only directories, or files with \".txt\" extension\n            return file.isDirectory() || file.getAbsolutePath().endsWith(\".txt\");\n        }\n\n        @Override\n        public String getDescription() {\n            // This description will be displayed in the dialog,\n            // hard-coded = ugly, should be done via I18N\n            return \"Text documents (*.txt)\";\n        }\n    }\n\n    /**\n     * Method saves your template to file\n     * Creates JFileChooser and save into XML file\n     * @param properties\n     * @param parentFrame\n     */\n    public void savePreferenceToFile(Properties properties, JFrame parentFrame) {\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save template\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        fileChooser.addChoosableFileFilter(new MyTxtFilter());\n        fileChooser.addChoosableFileFilter(new MyXmlFilter());\n        int returnVal = fileChooser.showSaveDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            try {\n                String fileSetUser = fileChooser.getSelectedFile().toString();\n                File file;\n                if (fileSetUser.contains(\".\")) {\n                    file = new File(fileSetUser);\n                } else {\n                    file = new File(fileSetUser + \".xml\");\n                }\n                FileOutputStream fos = new FileOutputStream(file);\n                properties.storeToXML(fos, \"HttpAnalyzer Template\", \"UTF-8\");\n                fos.close();\n            } catch (IOException ex) {\n                Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n            }\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n        }\n    }\n\n    /**\n     * Method load your template from file\n     * Creates JFileChooser and  load from XML file\n     * @param parentFrame\n     */\n    public Properties loadPreferenceFromFile(JFrame parentFrame) {\n        Properties properties = new Properties();\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Load template\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);\n        fileChooser.addChoosableFileFilter(new MyTxtFilter());\n        fileChooser.addChoosableFileFilter(new MyXmlFilter());\n        int returnVal = fileChooser.showOpenDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            try {\n                String fileSetUser = fileChooser.getSelectedFile().toString();\n                File file;\n                if (fileSetUser.contains(\".\")) {\n                    file = new File(fileSetUser);\n                } else {\n                    file = new File(fileSetUser + \".xml\");\n                }\n                FileInputStream fis = new FileInputStream(file);\n                properties.loadFromXML(fis);\n                fis.close();\n            } catch (IOException ex) {\n                Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n            }\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n        }\n        return properties;\n    }\n\n    /**\n     * Save information from ReplayTab in file\n     * @param mainView\n     * @param parentFrame\n     */\n    public void saveSessionInfo(HttpAnalyzerView mainView, JFrame parentFrame) {\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        // NOI18N\n        fileChooser.setDialogTitle(\"Save your session\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        Calendar calendar = Calendar.getInstance();\n        System.out.print(\"Date: \");\n        System.out.print(calendar.get(Calendar.MONTH));\n        System.out.print(\" \" + calendar.get(Calendar.DATE) + \" \");\n        System.out.println(calendar.get(Calendar.YEAR));\n        String preFileName = \"session-\" + Integer.toString(calendar.get(Calendar.DATE)) + \"-\" + Integer.toString(calendar.get(Calendar.MONTH)) + \".txt\";\n        fileChooser.setSelectedFile(new File(preFileName));\n        int returnVal = fileChooser.showSaveDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            String fileName = fileChooser.getSelectedFile().toString();\n            File file = null;\n            System.out.println(\"File choose =\" + fileName);\n            if (!fileName.toString().endsWith(\".txt\")) {\n                file = new File(fileName + \".txt\");\n            } else {\n                file = new File(fileName);\n            }\n            PrintWriter outWriter = null;\n            try {\n                outWriter = new PrintWriter(file);\n                String[] str = mainView.replayDataPane.getText().split(\"\\n\");\n                for (int i = 0; i < str.length; i++) {\n                    outWriter.print(str[i] + \"\\r\\n\");\n                }\n            } catch (Exception ex) {\n                new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n            } finally {\n                if (outWriter != null) {\n                    outWriter.close();\n                }\n            }\n            //This is where a real application would open the file.\n            //log.append(\"Opening: \" + file.getName() + \".\" + newline);\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n            //log.append(\"Open command cancelled by user.\" + newline);\n        }\n    }\n\n    /**\n     * Show JChooseFile dialog and\n     * put your choice in toFileTextField\n     * @param mainView\n     * @param parentFrame\n     */\n    public void fillToFileField(HttpAnalyzerView mainView, JFrame parentFrame) {\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save your content\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        int returnVal = fileChooser.showSaveDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            mainView.toFileTextField.setText(fileChooser.getSelectedFile().toString());\n            mainView.toFileCheckBox.setSelected(true);\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n        }\n    }\n}\n",
    "test_prompt": "// HttpFileUtilsTest0.java\npackage httpanalyzer;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.RandomAccessFile;\nimport java.util.Calendar;\nimport java.util.Properties;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport org.apache.http.HttpEntity;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpFileUtils}.\n* It contains ten unit test cases for the {@link HttpFileUtils#saveEntity(HttpEntity, String)} method.\n*/\nclass HttpFileUtilsTest0 {"
},
{
    "id": "cmpl-6qbblxic8jNseVPMo5r0PCR38SQFb",
    "object": "text_completion",
    "created": 1677995641,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is not found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile1() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile2() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile3() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile4() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile5() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile6() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile7() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile8() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile9() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testLoadPreferenceFromFile10() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = httpFileUtils.loadPreferenceFromFile(new JFrame());\n\t\t\t\tassertEquals(0, properties.size());\n\t\t}\n}\n\n// HttpFileUtilsTest2.java\npackage httpanalyzer;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.RandomAccessFile;\nimport java.util.Calendar;\nimport java.util.Properties;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport org.apache.http.HttpEntity;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpFileUtils}.\n* It contains ten unit test cases for the {@link HttpFileUtils#savePreferenceToFile(Properties, JFrame)} method.\n*/\nclass HttpFileUtilsTest2 {\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#savePreferenceToFile(Properties, JFrame)} method.\n\t\t* It tests the case when the file is not found.\n\t\t*/\n\t\t@Test\n\t\tvoid testSavePreferenceToFile1() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = new Properties();\n\t\t\t\thttpFileUtils.savePreferenceToFile(properties, new JFrame());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#savePreferenceToFile(Properties, JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testSavePreferenceToFile2() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = new Properties();\n\t\t\t\thttpFileUtils.savePreferenceToFile(properties, new JFrame());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#savePreferenceToFile(Properties, JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t\t@Test\n\t\tvoid testSavePreferenceToFile3() {\n\t\t\t\tHttpFileUtils httpFileUtils = new HttpFileUtils();\n\t\t\t\tProperties properties = new Properties();\n\t\t\t\thttpFileUtils.savePreferenceToFile(properties, new JFrame());\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link HttpFileUtils#savePreferenceToFile(Properties, JFrame)} method.\n\t\t* It tests the case when the file is found.\n\t\t*/\n\t",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 2961,
        "completion_tokens": 2048,
        "total_tokens": 5009
    },
    "time_taken": 36.81508731842041,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HttpFileUtilsTest1.java",
    "original_code": "// HttpFileUtils.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage httpanalyzer;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.RandomAccessFile;\nimport java.util.Calendar;\nimport java.util.Properties;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport org.apache.http.HttpEntity;\n\n/**\n * @author vlad\n */\npublic class HttpFileUtils {\n\n    static final int MAX_BUFFER_SIZE = 8192;\n\n    /**\n     * Save Http entity to file\n     * @param entity HttpEntity\n     * @param fileName String\n     */\n    public long saveEntity(HttpEntity entity, String fileName) {\n        long size = 0L;\n        File file = new File(fileName);\n        byte[] buffer = new byte[MAX_BUFFER_SIZE];\n        // Read from server into buffer.\n        InputStream streamEntity;\n        RandomAccessFile outFile;\n        try {\n            streamEntity = entity.getContent();\n            outFile = new RandomAccessFile(file, \"rw\");\n            int read = 0;\n            // Rewrite file\n            outFile.setLength(0);\n            System.out.println(\"Buffer size =\" + buffer.length);\n            while ((read = streamEntity.read(buffer)) != -1) {\n                size = size + read;\n                // Write buffer to file\n                outFile.write(buffer, 0, read);\n            }\n            outFile.close();\n            streamEntity.close();\n        } catch (IOException ex) {\n            Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n        } catch (IllegalStateException ex) {\n            Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        return size;\n    }\n\n    /**\n     * Filter for FileChooser *.XML\n     */\n    private class MyXmlFilter extends javax.swing.filechooser.FileFilter {\n\n        @Override\n        public boolean accept(File file) {\n            // Allow only directories, or files with \".txt\" extension\n            return file.isDirectory() || file.getAbsolutePath().endsWith(\".xml\");\n        }\n\n        @Override\n        public String getDescription() {\n            // This description will be displayed in the dialog,\n            // hard-coded = ugly, should be done via I18N\n            return \"XML files (*.xml)\";\n        }\n    }\n\n    /**\n     * Filter for FileChooser *.TXT\n     */\n    private class MyTxtFilter extends javax.swing.filechooser.FileFilter {\n\n        @Override\n        public boolean accept(File file) {\n            // Allow only directories, or files with \".txt\" extension\n            return file.isDirectory() || file.getAbsolutePath().endsWith(\".txt\");\n        }\n\n        @Override\n        public String getDescription() {\n            // This description will be displayed in the dialog,\n            // hard-coded = ugly, should be done via I18N\n            return \"Text documents (*.txt)\";\n        }\n    }\n\n    /**\n     * Method saves your template to file\n     * Creates JFileChooser and save into XML file\n     * @param properties\n     * @param parentFrame\n     */\n    public void savePreferenceToFile(Properties properties, JFrame parentFrame) {\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save template\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        fileChooser.addChoosableFileFilter(new MyTxtFilter());\n        fileChooser.addChoosableFileFilter(new MyXmlFilter());\n        int returnVal = fileChooser.showSaveDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            try {\n                String fileSetUser = fileChooser.getSelectedFile().toString();\n                File file;\n                if (fileSetUser.contains(\".\")) {\n                    file = new File(fileSetUser);\n                } else {\n                    file = new File(fileSetUser + \".xml\");\n                }\n                FileOutputStream fos = new FileOutputStream(file);\n                properties.storeToXML(fos, \"HttpAnalyzer Template\", \"UTF-8\");\n                fos.close();\n            } catch (IOException ex) {\n                Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n            }\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n        }\n    }\n\n    /**\n     * Method load your template from file\n     * Creates JFileChooser and  load from XML file\n     * @param parentFrame\n     */\n    public Properties loadPreferenceFromFile(JFrame parentFrame) {\n        Properties properties = new Properties();\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Load template\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);\n        fileChooser.addChoosableFileFilter(new MyTxtFilter());\n        fileChooser.addChoosableFileFilter(new MyXmlFilter());\n        int returnVal = fileChooser.showOpenDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            try {\n                String fileSetUser = fileChooser.getSelectedFile().toString();\n                File file;\n                if (fileSetUser.contains(\".\")) {\n                    file = new File(fileSetUser);\n                } else {\n                    file = new File(fileSetUser + \".xml\");\n                }\n                FileInputStream fis = new FileInputStream(file);\n                properties.loadFromXML(fis);\n                fis.close();\n            } catch (IOException ex) {\n                Logger.getLogger(HttpFileUtils.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n            }\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n        }\n        return properties;\n    }\n\n    /**\n     * Save information from ReplayTab in file\n     * @param mainView\n     * @param parentFrame\n     */\n    public void saveSessionInfo(HttpAnalyzerView mainView, JFrame parentFrame) {\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        // NOI18N\n        fileChooser.setDialogTitle(\"Save your session\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        Calendar calendar = Calendar.getInstance();\n        System.out.print(\"Date: \");\n        System.out.print(calendar.get(Calendar.MONTH));\n        System.out.print(\" \" + calendar.get(Calendar.DATE) + \" \");\n        System.out.println(calendar.get(Calendar.YEAR));\n        String preFileName = \"session-\" + Integer.toString(calendar.get(Calendar.DATE)) + \"-\" + Integer.toString(calendar.get(Calendar.MONTH)) + \".txt\";\n        fileChooser.setSelectedFile(new File(preFileName));\n        int returnVal = fileChooser.showSaveDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            String fileName = fileChooser.getSelectedFile().toString();\n            File file = null;\n            System.out.println(\"File choose =\" + fileName);\n            if (!fileName.toString().endsWith(\".txt\")) {\n                file = new File(fileName + \".txt\");\n            } else {\n                file = new File(fileName);\n            }\n            PrintWriter outWriter = null;\n            try {\n                outWriter = new PrintWriter(file);\n                String[] str = mainView.replayDataPane.getText().split(\"\\n\");\n                for (int i = 0; i < str.length; i++) {\n                    outWriter.print(str[i] + \"\\r\\n\");\n                }\n            } catch (Exception ex) {\n                new SwingTools(parentFrame).showErrorDialog(\"IO error\", ex.getLocalizedMessage());\n            } finally {\n                if (outWriter != null) {\n                    outWriter.close();\n                }\n            }\n            //This is where a real application would open the file.\n            //log.append(\"Opening: \" + file.getName() + \".\" + newline);\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n            //log.append(\"Open command cancelled by user.\" + newline);\n        }\n    }\n\n    /**\n     * Show JChooseFile dialog and\n     * put your choice in toFileTextField\n     * @param mainView\n     * @param parentFrame\n     */\n    public void fillToFileField(HttpAnalyzerView mainView, JFrame parentFrame) {\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save your content\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        int returnVal = fileChooser.showSaveDialog(parentFrame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            mainView.toFileTextField.setText(fileChooser.getSelectedFile().toString());\n            mainView.toFileCheckBox.setSelected(true);\n        } else {\n            System.out.println(\"File wasn't choosen!\");\n        }\n    }\n}\n",
    "test_prompt": "// HttpFileUtilsTest1.java\npackage httpanalyzer;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.RandomAccessFile;\nimport java.util.Calendar;\nimport java.util.Properties;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport org.apache.http.HttpEntity;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpFileUtils}.\n* It contains ten unit test cases for the {@link HttpFileUtils#loadPreferenceFromFile(JFrame)} method.\n*/\nclass HttpFileUtilsTest1 {"
},
{
    "choices": [
        {
            "finish_reason": "ERROR - This model's maximum context length is 8001 tokens, however you requested 33920 tokens (31872 in your prompt; 2048 for the completion). Please reduce your prompt; or completion length."
        }
    ],
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HttpAnalyzerViewTest0.java",
    "original_code": "// HttpAnalyzerView.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n *\n * Copyright (C) 2010, vlad\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * HttpAnalyzerView.java\n */\npackage httpanalyzer;\n\nimport java.awt.Toolkit;\nimport java.awt.datatransfer.Clipboard;\nimport java.awt.datatransfer.StringSelection;\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.jdesktop.application.Action;\nimport org.jdesktop.application.ResourceMap;\nimport org.jdesktop.application.SingleFrameApplication;\nimport org.jdesktop.application.FrameView;\nimport org.jdesktop.application.TaskMonitor;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.net.Authenticator;\nimport java.net.PasswordAuthentication;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Date;\nimport java.util.List;\nimport javax.swing.Timer;\nimport javax.swing.Icon;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.SwingUtilities;\nimport org.apache.http.*;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.auth.AuthScope;\nimport org.apache.http.auth.UsernamePasswordCredentials;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.methods.HttpHead;\nimport org.apache.http.client.utils.URIUtils;\nimport org.apache.http.client.utils.URLEncodedUtils;\nimport org.apache.http.conn.params.ConnRoutePNames;\nimport org.apache.http.entity.ByteArrayEntity;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.params.BasicHttpParams;\nimport org.apache.http.params.HttpParams;\nimport org.jdesktop.application.Task;\n\n/**\n * The application's main frame.\n */\npublic class HttpAnalyzerView extends FrameView {\n\n    HttpResponse httpResponse;\n\n    // Hostname\n    String targetHost;\n\n    int targetPort;\n\n    String targetPath;\n\n    String referer;\n\n    String proxyHost;\n\n    int proxyPort;\n\n    public HttpAnalyzerView(SingleFrameApplication app) {\n        super(app);\n        initComponents();\n        // status bar initialization - message timeout, idle icon and busy animation, etc\n        ResourceMap resourceMap = getResourceMap();\n        int messageTimeout = resourceMap.getInteger(\"StatusBar.messageTimeout\");\n        messageTimer = new Timer(messageTimeout, new ActionListener() {\n\n            public void actionPerformed(ActionEvent e) {\n                statusMessageLabel.setText(\"\");\n            }\n        });\n        messageTimer.setRepeats(false);\n        int busyAnimationRate = resourceMap.getInteger(\"StatusBar.busyAnimationRate\");\n        for (int i = 0; i < busyIcons.length; i++) {\n            busyIcons[i] = resourceMap.getIcon(\"StatusBar.busyIcons[\" + i + \"]\");\n        }\n        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {\n\n            public void actionPerformed(ActionEvent e) {\n                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;\n                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);\n            }\n        });\n        idleIcon = resourceMap.getIcon(\"StatusBar.idleIcon\");\n        statusAnimationLabel.setIcon(idleIcon);\n        progressBar.setVisible(false);\n        // connecting action tasks to status bar via TaskMonitor\n        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());\n        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {\n\n            public void propertyChange(java.beans.PropertyChangeEvent evt) {\n                String propertyName = evt.getPropertyName();\n                if (\"started\".equals(propertyName)) {\n                    if (!busyIconTimer.isRunning()) {\n                        statusAnimationLabel.setIcon(busyIcons[0]);\n                        busyIconIndex = 0;\n                        busyIconTimer.start();\n                    }\n                    progressBar.setVisible(true);\n                    progressBar.setIndeterminate(true);\n                } else if (\"done\".equals(propertyName)) {\n                    busyIconTimer.stop();\n                    statusAnimationLabel.setIcon(idleIcon);\n                    progressBar.setVisible(false);\n                    progressBar.setValue(0);\n                } else if (\"message\".equals(propertyName)) {\n                    String text = (String) (evt.getNewValue());\n                    statusMessageLabel.setText((text == null) ? \"\" : text);\n                    messageTimer.restart();\n                } else if (\"progress\".equals(propertyName)) {\n                    int value = (Integer) (evt.getNewValue());\n                    progressBar.setVisible(true);\n                    progressBar.setIndeterminate(false);\n                    progressBar.setValue(value);\n                }\n            }\n        });\n        // My pre-init\n        String proxyEnv = new InitBasicParams().getProxyEnv();\n        if (proxyEnv != null) {\n            proxyField.setText(proxyEnv);\n        }\n        initRequestHeaders();\n    }\n\n    @Action\n    public void showAboutBox() {\n        if (aboutBox == null) {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            aboutBox = new HttpAnalyzerAboutBox(mainFrame);\n            aboutBox.setLocationRelativeTo(mainFrame);\n        }\n        HttpAnalyzerApp.getApplication().show(aboutBox);\n    }\n\n    /**\n     * This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    void initComponents() {\n        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();\n        mainPanel = new javax.swing.JPanel();\n        urlLabel = new javax.swing.JLabel();\n        urlCombo = new javax.swing.JComboBox();\n        goButton = new javax.swing.JButton();\n        clearButton = new javax.swing.JButton();\n        saveButton = new javax.swing.JButton();\n        methodPanel = new javax.swing.JPanel();\n        getRadio = new javax.swing.JRadioButton();\n        postRadio = new javax.swing.JRadioButton();\n        headRadio = new javax.swing.JRadioButton();\n        paramsButton = new javax.swing.JButton();\n        clearURL = new javax.swing.JButton();\n        mainTabbedPane = new javax.swing.JTabbedPane();\n        replayDataScrollPane = new javax.swing.JScrollPane();\n        replayDataPane = new javax.swing.JTextPane();\n        optionsPanel = new javax.swing.JPanel();\n        proxyTypesPanel = new javax.swing.JPanel();\n        proxyNoneRadioButton = new javax.swing.JRadioButton();\n        proxyHttpRadioButton = new javax.swing.JRadioButton();\n        proxySocksRadioButton = new javax.swing.JRadioButton();\n        proxySetsPanel = new javax.swing.JPanel();\n        proxyField = new javax.swing.JTextField();\n        proxyHostLabel = new javax.swing.JLabel();\n        proxyUserLabel = new javax.swing.JLabel();\n        proxyAuthCheckBox = new javax.swing.JCheckBox();\n        proxyPassLabel = new javax.swing.JLabel();\n        proxyUserTextField = new javax.swing.JTextField();\n        proxyPassPasswordField = new javax.swing.JPasswordField();\n        httpOptionsPanel = new javax.swing.JPanel();\n        httpVerLabel = new javax.swing.JLabel();\n        httpVersionComboBox = new javax.swing.JComboBox();\n        httpUserLabel = new javax.swing.JLabel();\n        httpPassLabel = new javax.swing.JLabel();\n        httpPassPasswordField = new javax.swing.JPasswordField();\n        httpUserTextField = new javax.swing.JTextField();\n        httpAuthCheckBox = new javax.swing.JCheckBox();\n        basicHeadersPanel = new javax.swing.JPanel();\n        customRefererCheckBox = new javax.swing.JCheckBox();\n        customRefererTextField = new javax.swing.JTextField();\n        customCookieCheckBox = new javax.swing.JCheckBox();\n        customCookieTextField = new javax.swing.JTextField();\n        agentsSeparator = new javax.swing.JSeparator();\n        agentsLabel = new javax.swing.JLabel();\n        firefoxRadioButton = new javax.swing.JRadioButton();\n        ie6RadioButton = new javax.swing.JRadioButton();\n        ie7RadioButton = new javax.swing.JRadioButton();\n        ie8RadioButton = new javax.swing.JRadioButton();\n        iPhoneRadioButton = new javax.swing.JRadioButton();\n        googleBotRadioButton = new javax.swing.JRadioButton();\n        msnRadioButton = new javax.swing.JRadioButton();\n        yahooRadioButton = new javax.swing.JRadioButton();\n        customHeaderPanel = new javax.swing.JPanel();\n        customHeadersScrollPane = new javax.swing.JScrollPane();\n        customHeaders = new javax.swing.JTextArea();\n        useCustomHeadersCheckBox = new javax.swing.JCheckBox();\n        debugPanel = new javax.swing.JPanel();\n        debugDataScrollPane = new javax.swing.JScrollPane();\n        debugDataPane = new javax.swing.JTextPane();\n        upButton = new javax.swing.JButton();\n        downButton = new javax.swing.JButton();\n        clearParams = new javax.swing.JButton();\n        clipboardButton = new javax.swing.JButton();\n        paramsComboBox = new javax.swing.JComboBox();\n        paramsLabel = new javax.swing.JLabel();\n        mainSeparator = new javax.swing.JSeparator();\n        intelSaveCheckBox = new javax.swing.JCheckBox();\n        toFileTextField = new javax.swing.JTextField();\n        toFileButton = new javax.swing.JButton();\n        toFileCheckBox = new javax.swing.JCheckBox();\n        mainMenuBar = new javax.swing.JMenuBar();\n        javax.swing.JMenu fileMenu = new javax.swing.JMenu();\n        saveMenuItem = new javax.swing.JMenuItem();\n        clearMenuItem1 = new javax.swing.JMenuItem();\n        filesSeparator1 = new javax.swing.JPopupMenu.Separator();\n        saveTemplateItem = new javax.swing.JMenuItem();\n        loadTemplateItem = new javax.swing.JMenuItem();\n        filesSeparator2 = new javax.swing.JPopupMenu.Separator();\n        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();\n        toolsMenu = new javax.swing.JMenu();\n        notesMenuItem = new javax.swing.JMenuItem();\n        toolsSeparator = new javax.swing.JPopupMenu.Separator();\n        cryptMenuItem = new javax.swing.JMenuItem();\n        md5MenuItem = new javax.swing.JMenuItem();\n        base64MenuItem = new javax.swing.JMenuItem();\n        toolsSeparator2 = new javax.swing.JPopupMenu.Separator();\n        optionsMenu = new javax.swing.JMenu();\n        mergeInfoCheckBox = new javax.swing.JCheckBoxMenuItem();\n        javax.swing.JMenu helpMenu = new javax.swing.JMenu();\n        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();\n        statusPanel = new javax.swing.JPanel();\n        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();\n        statusMessageLabel = new javax.swing.JLabel();\n        statusAnimationLabel = new javax.swing.JLabel();\n        progressBar = new javax.swing.JProgressBar();\n        methodGroups = new javax.swing.ButtonGroup();\n        proxyTypesGroup = new javax.swing.ButtonGroup();\n        userAgentsGroup = new javax.swing.ButtonGroup();\n        // NOI18N\n        mainPanel.setName(\"mainPanel\");\n        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(HttpAnalyzerView.class);\n        // NOI18N\n        urlLabel.setFont(resourceMap.getFont(\"urlLabel.font\"));\n        // NOI18N\n        urlLabel.setText(resourceMap.getString(\"urlLabel.text\"));\n        urlLabel.setFocusable(false);\n        // NOI18N\n        urlLabel.setName(\"urlLabel\");\n        urlCombo.setEditable(true);\n        // NOI18N\n        urlCombo.setFont(resourceMap.getFont(\"urlCombo.font\"));\n        // NOI18N\n        urlCombo.setToolTipText(resourceMap.getString(\"urlCombo.toolTipText\"));\n        urlCombo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));\n        urlCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));\n        // NOI18N\n        urlCombo.setName(\"urlCombo\");\n        urlCombo.setNextFocusableComponent(paramsComboBox);\n        urlCombo.addItemListener(new java.awt.event.ItemListener() {\n\n            public void itemStateChanged(java.awt.event.ItemEvent evt) {\n                urlComboItemStateChanged(evt);\n            }\n        });\n        urlCombo.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                urlComboActionPerformed(evt);\n            }\n        });\n        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getActionMap(HttpAnalyzerView.class, this);\n        // NOI18N\n        goButton.setAction(actionMap.get(\"RequestRun\"));\n        // NOI18N\n        goButton.setFont(resourceMap.getFont(\"goButton.font\"));\n        // NOI18N\n        goButton.setIcon(resourceMap.getIcon(\"goButton.icon\"));\n        // NOI18N\n        goButton.setText(resourceMap.getString(\"goButton.text\"));\n        // NOI18N\n        goButton.setName(\"goButton\");\n        // NOI18N\n        clearButton.setAction(actionMap.get(\"ClearDataPanel\"));\n        // NOI18N\n        clearButton.setFont(resourceMap.getFont(\"clearButton.font\"));\n        // NOI18N\n        clearButton.setIcon(resourceMap.getIcon(\"clearButton.icon\"));\n        // NOI18N\n        clearButton.setText(resourceMap.getString(\"clearButton.text\"));\n        // NOI18N\n        clearButton.setToolTipText(resourceMap.getString(\"clearButton.toolTipText\"));\n        // NOI18N\n        clearButton.setName(\"clearButton\");\n        // NOI18N\n        saveButton.setAction(actionMap.get(\"fileChoose\"));\n        // NOI18N\n        saveButton.setFont(resourceMap.getFont(\"saveButton.font\"));\n        // NOI18N\n        saveButton.setIcon(resourceMap.getIcon(\"saveButton.icon\"));\n        // NOI18N\n        saveButton.setText(resourceMap.getString(\"saveButton.text\"));\n        // NOI18N\n        saveButton.setToolTipText(resourceMap.getString(\"saveButton.toolTipText\"));\n        // NOI18N\n        saveButton.setName(\"saveButton\");\n        // NOI18N\n        methodPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString(\"methodPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, resourceMap.getFont(\"methodPanel.border.titleFont\")));\n        // NOI18N\n        methodPanel.setName(\"methodPanel\");\n        methodGroups.add(getRadio);\n        // NOI18N\n        getRadio.setFont(resourceMap.getFont(\"headRadio.font\"));\n        getRadio.setSelected(true);\n        // NOI18N\n        getRadio.setText(resourceMap.getString(\"getRadio.text\"));\n        getRadio.setBorder(null);\n        // NOI18N\n        getRadio.setName(\"getRadio\");\n        methodGroups.add(postRadio);\n        // NOI18N\n        postRadio.setFont(resourceMap.getFont(\"headRadio.font\"));\n        // NOI18N\n        postRadio.setText(resourceMap.getString(\"postRadio.text\"));\n        postRadio.setBorder(null);\n        // NOI18N\n        postRadio.setName(\"postRadio\");\n        methodGroups.add(headRadio);\n        // NOI18N\n        headRadio.setFont(resourceMap.getFont(\"headRadio.font\"));\n        // NOI18N\n        headRadio.setText(resourceMap.getString(\"headRadio.text\"));\n        headRadio.setBorder(null);\n        // NOI18N\n        headRadio.setName(\"headRadio\");\n        javax.swing.GroupLayout methodPanelLayout = new javax.swing.GroupLayout(methodPanel);\n        methodPanel.setLayout(methodPanelLayout);\n        methodPanelLayout.setHorizontalGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(methodPanelLayout.createSequentialGroup().addGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(getRadio).addComponent(postRadio).addComponent(headRadio)).addContainerGap(4, Short.MAX_VALUE)));\n        methodPanelLayout.setVerticalGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(methodPanelLayout.createSequentialGroup().addComponent(getRadio).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(postRadio).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(headRadio)));\n        // NOI18N\n        paramsButton.setFont(resourceMap.getFont(\"paramsButton.font\"));\n        // NOI18N\n        paramsButton.setText(resourceMap.getString(\"paramsButton.text\"));\n        // NOI18N\n        paramsButton.setToolTipText(resourceMap.getString(\"paramsButton.toolTipText\"));\n        // NOI18N\n        paramsButton.setName(\"paramsButton\");\n        paramsButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                paramsButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        clearURL.setFont(resourceMap.getFont(\"clearURL.font\"));\n        // NOI18N\n        clearURL.setText(resourceMap.getString(\"clearURL.text\"));\n        // NOI18N\n        clearURL.setToolTipText(resourceMap.getString(\"clearURL.toolTipText\"));\n        clearURL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n        // NOI18N\n        clearURL.setName(\"clearURL\");\n        clearURL.setNextFocusableComponent(urlCombo);\n        clearURL.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                clearURLActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        mainTabbedPane.setFont(resourceMap.getFont(\"mainTabbedPane.font\"));\n        // NOI18N\n        mainTabbedPane.setName(\"mainTabbedPane\");\n        // NOI18N\n        replayDataScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString(\"replayDataScrollPane.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, resourceMap.getFont(\"replayDataScrollPane.border.titleFont\")));\n        // NOI18N\n        replayDataScrollPane.setName(\"replayDataScrollPane\");\n        // NOI18N\n        replayDataPane.setBackground(resourceMap.getColor(\"replayDataPane.background\"));\n        // NOI18N\n        replayDataPane.setName(\"replayDataPane\");\n        replayDataScrollPane.setViewportView(replayDataPane);\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"replayDataScrollPane.TabConstraints.tabTitle\"), replayDataScrollPane);\n        // NOI18N\n        optionsPanel.setName(\"optionsPanel\");\n        // NOI18N\n        proxyTypesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString(\"proxyTypesPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, resourceMap.getFont(\"proxyTypesPanel.border.titleFont\")));\n        // NOI18N\n        proxyTypesPanel.setName(\"proxyTypesPanel\");\n        proxyTypesGroup.add(proxyNoneRadioButton);\n        // NOI18N\n        proxyNoneRadioButton.setFont(resourceMap.getFont(\"proxySocksRadioButton.font\"));\n        proxyNoneRadioButton.setSelected(true);\n        // NOI18N\n        proxyNoneRadioButton.setText(resourceMap.getString(\"proxyNoneRadioButton.text\"));\n        // NOI18N\n        proxyNoneRadioButton.setName(\"proxyNoneRadioButton\");\n        proxyTypesGroup.add(proxyHttpRadioButton);\n        // NOI18N\n        proxyHttpRadioButton.setFont(resourceMap.getFont(\"proxySocksRadioButton.font\"));\n        // NOI18N\n        proxyHttpRadioButton.setText(resourceMap.getString(\"proxyHttpRadioButton.text\"));\n        // NOI18N\n        proxyHttpRadioButton.setName(\"proxyHttpRadioButton\");\n        proxyTypesGroup.add(proxySocksRadioButton);\n        // NOI18N\n        proxySocksRadioButton.setFont(resourceMap.getFont(\"proxySocksRadioButton.font\"));\n        // NOI18N\n        proxySocksRadioButton.setText(resourceMap.getString(\"proxySocksRadioButton.text\"));\n        // NOI18N\n        proxySocksRadioButton.setName(\"proxySocksRadioButton\");\n        javax.swing.GroupLayout proxyTypesPanelLayout = new javax.swing.GroupLayout(proxyTypesPanel);\n        proxyTypesPanel.setLayout(proxyTypesPanelLayout);\n        proxyTypesPanelLayout.setHorizontalGroup(proxyTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxyTypesPanelLayout.createSequentialGroup().addContainerGap().addGroup(proxyTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(proxyNoneRadioButton).addComponent(proxyHttpRadioButton).addComponent(proxySocksRadioButton)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        proxyTypesPanelLayout.setVerticalGroup(proxyTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxyTypesPanelLayout.createSequentialGroup().addComponent(proxyNoneRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(proxyHttpRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(proxySocksRadioButton).addContainerGap(4, Short.MAX_VALUE)));\n        // NOI18N\n        proxySetsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString(\"proxySetsPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont(\"proxySetsPanel.border.titleFont\")));\n        // NOI18N\n        proxySetsPanel.setName(\"proxySetsPanel\");\n        // NOI18N\n        proxyField.setText(resourceMap.getString(\"proxyField.text\"));\n        proxyField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));\n        // NOI18N\n        proxyField.setName(\"proxyField\");\n        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proxyNoneRadioButton, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), proxyField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        proxyHostLabel.setFont(resourceMap.getFont(\"proxyHostLabel.font\"));\n        // NOI18N\n        proxyHostLabel.setText(resourceMap.getString(\"proxyHostLabel.text\"));\n        // NOI18N\n        proxyHostLabel.setName(\"proxyHostLabel\");\n        // NOI18N\n        proxyUserLabel.setFont(resourceMap.getFont(\"proxyUserLabel.font\"));\n        // NOI18N\n        proxyUserLabel.setText(resourceMap.getString(\"proxyUserLabel.text\"));\n        // NOI18N\n        proxyUserLabel.setName(\"proxyUserLabel\");\n        // NOI18N\n        proxyAuthCheckBox.setFont(resourceMap.getFont(\"proxyAuthCheckBox.font\"));\n        // NOI18N\n        proxyAuthCheckBox.setText(resourceMap.getString(\"proxyAuthCheckBox.text\"));\n        // NOI18N\n        proxyAuthCheckBox.setToolTipText(resourceMap.getString(\"proxyAuthCheckBox.toolTipText\"));\n        // NOI18N\n        proxyAuthCheckBox.setName(\"proxyAuthCheckBox\");\n        // NOI18N\n        proxyPassLabel.setFont(resourceMap.getFont(\"proxyPassLabel.font\"));\n        // NOI18N\n        proxyPassLabel.setText(resourceMap.getString(\"proxyPassLabel.text\"));\n        // NOI18N\n        proxyPassLabel.setName(\"proxyPassLabel\");\n        // NOI18N\n        proxyUserTextField.setText(resourceMap.getString(\"proxyUserTextField.text\"));\n        // NOI18N\n        proxyUserTextField.setName(\"proxyUserTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proxyAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), proxyUserTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        proxyPassPasswordField.setText(resourceMap.getString(\"proxyPassPasswordField.text\"));\n        // NOI18N\n        proxyPassPasswordField.setName(\"proxyPassPasswordField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proxyAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), proxyPassPasswordField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        javax.swing.GroupLayout proxySetsPanelLayout = new javax.swing.GroupLayout(proxySetsPanel);\n        proxySetsPanel.setLayout(proxySetsPanelLayout);\n        proxySetsPanelLayout.setHorizontalGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addContainerGap().addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(proxyHostLabel).addComponent(proxyAuthCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addComponent(proxyUserLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(proxyUserTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)).addComponent(proxyField, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))).addGroup(proxySetsPanelLayout.createSequentialGroup().addComponent(proxyPassLabel).addGap(21, 21, 21).addComponent(proxyPassPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))).addContainerGap()));\n        proxySetsPanelLayout.setVerticalGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(proxyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(proxyHostLabel)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(proxyUserLabel).addComponent(proxyAuthCheckBox).addComponent(proxyUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(proxyPassPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(proxyPassLabel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        httpOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));\n        // NOI18N\n        httpOptionsPanel.setName(\"httpOptionsPanel\");\n        // NOI18N\n        httpVerLabel.setFont(resourceMap.getFont(\"httpVerLabel.font\"));\n        // NOI18N\n        httpVerLabel.setText(resourceMap.getString(\"httpVerLabel.text\"));\n        // NOI18N\n        httpVerLabel.setName(\"httpVerLabel\");\n        // NOI18N\n        httpVersionComboBox.setFont(resourceMap.getFont(\"httpVersionComboBox.font\"));\n        httpVersionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"1.1\", \"1.0\" }));\n        // NOI18N\n        httpVersionComboBox.setName(\"httpVersionComboBox\");\n        // NOI18N\n        httpUserLabel.setFont(resourceMap.getFont(\"httpUserLabel.font\"));\n        // NOI18N\n        httpUserLabel.setText(resourceMap.getString(\"httpUserLabel.text\"));\n        // NOI18N\n        httpUserLabel.setName(\"httpUserLabel\");\n        // NOI18N\n        httpPassLabel.setFont(resourceMap.getFont(\"httpPassLabel.font\"));\n        // NOI18N\n        httpPassLabel.setText(resourceMap.getString(\"httpPassLabel.text\"));\n        // NOI18N\n        httpPassLabel.setName(\"httpPassLabel\");\n        // NOI18N\n        httpPassPasswordField.setName(\"httpPassPasswordField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, httpAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), httpPassPasswordField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        httpUserTextField.setName(\"httpUserTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, httpAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), httpUserTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        httpAuthCheckBox.setFont(resourceMap.getFont(\"httpAuthCheckBox.font\"));\n        // NOI18N\n        httpAuthCheckBox.setText(resourceMap.getString(\"httpAuthCheckBox.text\"));\n        httpAuthCheckBox.setFocusable(false);\n        // NOI18N\n        httpAuthCheckBox.setName(\"httpAuthCheckBox\");\n        // NOI18N\n        basicHeadersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString(\"basicHeadersPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont(\"basicHeadersPanel.border.titleFont\")));\n        // NOI18N\n        basicHeadersPanel.setName(\"basicHeadersPanel\");\n        // NOI18N\n        customRefererCheckBox.setFont(resourceMap.getFont(\"customRefererCheckBox.font\"));\n        // NOI18N\n        customRefererCheckBox.setText(resourceMap.getString(\"customRefererCheckBox.text\"));\n        // NOI18N\n        customRefererCheckBox.setName(\"customRefererCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), customRefererCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        customRefererTextField.setText(resourceMap.getString(\"customRefererTextField.text\"));\n        // NOI18N\n        customRefererTextField.setName(\"customRefererTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, customRefererCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), customRefererTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        customCookieCheckBox.setFont(resourceMap.getFont(\"customCookieCheckBox.font\"));\n        // NOI18N\n        customCookieCheckBox.setText(resourceMap.getString(\"customCookieCheckBox.text\"));\n        // NOI18N\n        customCookieCheckBox.setName(\"customCookieCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), customCookieCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        customCookieTextField.setName(\"customCookieTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, customCookieCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), customCookieTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        agentsSeparator.setName(\"agentsSeparator\");\n        // NOI18N\n        agentsLabel.setFont(resourceMap.getFont(\"agentsLabel.font\"));\n        // NOI18N\n        agentsLabel.setText(resourceMap.getString(\"agentsLabel.text\"));\n        // NOI18N\n        agentsLabel.setName(\"agentsLabel\");\n        userAgentsGroup.add(firefoxRadioButton);\n        // NOI18N\n        firefoxRadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        firefoxRadioButton.setText(resourceMap.getString(\"firefoxRadioButton.text\"));\n        // NOI18N\n        firefoxRadioButton.setName(\"firefoxRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), firefoxRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(ie6RadioButton);\n        // NOI18N\n        ie6RadioButton.setFont(resourceMap.getFont(\"ie6RadioButton.font\"));\n        ie6RadioButton.setSelected(true);\n        // NOI18N\n        ie6RadioButton.setText(resourceMap.getString(\"ie6RadioButton.text\"));\n        // NOI18N\n        ie6RadioButton.setName(\"ie6RadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), ie6RadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(ie7RadioButton);\n        // NOI18N\n        ie7RadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        ie7RadioButton.setText(resourceMap.getString(\"ie7RadioButton.text\"));\n        // NOI18N\n        ie7RadioButton.setName(\"ie7RadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), ie7RadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(ie8RadioButton);\n        // NOI18N\n        ie8RadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        ie8RadioButton.setText(resourceMap.getString(\"ie8RadioButton.text\"));\n        // NOI18N\n        ie8RadioButton.setName(\"ie8RadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), ie8RadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(iPhoneRadioButton);\n        // NOI18N\n        iPhoneRadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        iPhoneRadioButton.setText(resourceMap.getString(\"iPhoneRadioButton.text\"));\n        // NOI18N\n        iPhoneRadioButton.setName(\"iPhoneRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), iPhoneRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(googleBotRadioButton);\n        // NOI18N\n        googleBotRadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        googleBotRadioButton.setText(resourceMap.getString(\"googleBotRadioButton.text\"));\n        // NOI18N\n        googleBotRadioButton.setName(\"googleBotRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), googleBotRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(msnRadioButton);\n        // NOI18N\n        msnRadioButton.setFont(resourceMap.getFont(\"msnRadioButton.font\"));\n        // NOI18N\n        msnRadioButton.setText(resourceMap.getString(\"msnRadioButton.text\"));\n        // NOI18N\n        msnRadioButton.setName(\"msnRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), msnRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(yahooRadioButton);\n        // NOI18N\n        yahooRadioButton.setFont(resourceMap.getFont(\"yahooRadioButton.font\"));\n        // NOI18N\n        yahooRadioButton.setText(resourceMap.getString(\"yahooRadioButton.text\"));\n        // NOI18N\n        yahooRadioButton.setName(\"yahooRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), yahooRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        javax.swing.GroupLayout basicHeadersPanelLayout = new javax.swing.GroupLayout(basicHeadersPanel);\n        basicHeadersPanel.setLayout(basicHeadersPanelLayout);\n        basicHeadersPanelLayout.setHorizontalGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addContainerGap().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(customCookieCheckBox).addComponent(customRefererCheckBox)).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(customRefererTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGap(12, 12, 12).addComponent(customCookieTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))).addGroup(basicHeadersPanelLayout.createSequentialGroup().addComponent(agentsLabel).addGap(18, 18, 18).addComponent(agentsSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(ie6RadioButton).addComponent(ie7RadioButton).addComponent(firefoxRadioButton)).addGap(18, 18, 18).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(googleBotRadioButton).addComponent(ie8RadioButton)).addGap(2, 2, 2).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(yahooRadioButton).addComponent(iPhoneRadioButton))).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGap(84, 84, 84).addComponent(msnRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE))).addContainerGap()));\n        basicHeadersPanelLayout.setVerticalGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(customRefererCheckBox).addComponent(customRefererTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(customCookieTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(customCookieCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(agentsLabel).addComponent(agentsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addComponent(ie8RadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(googleBotRadioButton).addComponent(yahooRadioButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(msnRadioButton)).addGroup(basicHeadersPanelLayout.createSequentialGroup().addComponent(firefoxRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(ie6RadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(ie7RadioButton)).addComponent(iPhoneRadioButton)).addContainerGap()));\n        javax.swing.GroupLayout httpOptionsPanelLayout = new javax.swing.GroupLayout(httpOptionsPanel);\n        httpOptionsPanel.setLayout(httpOptionsPanelLayout);\n        httpOptionsPanelLayout.setHorizontalGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(httpOptionsPanelLayout.createSequentialGroup().addContainerGap().addGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(basicHeadersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(httpOptionsPanelLayout.createSequentialGroup().addComponent(httpVerLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(httpUserLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpUserTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, httpOptionsPanelLayout.createSequentialGroup().addComponent(httpAuthCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpPassLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpPassPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))).addContainerGap()));\n        httpOptionsPanelLayout.setVerticalGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(httpOptionsPanelLayout.createSequentialGroup().addGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(httpVerLabel).addComponent(httpVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(httpUserLabel).addComponent(httpUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(httpPassPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(httpPassLabel).addComponent(httpAuthCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(basicHeadersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));\n        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);\n        optionsPanel.setLayout(optionsPanelLayout);\n        optionsPanelLayout.setHorizontalGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(optionsPanelLayout.createSequentialGroup().addContainerGap().addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(httpOptionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(optionsPanelLayout.createSequentialGroup().addComponent(proxyTypesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(proxySetsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap()));\n        optionsPanelLayout.setVerticalGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(optionsPanelLayout.createSequentialGroup().addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(proxyTypesPanel, 0, 106, Short.MAX_VALUE).addComponent(proxySetsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(httpOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"optionsPanel.TabConstraints.tabTitle\"), optionsPanel);\n        // NOI18N\n        customHeaderPanel.setName(\"customHeaderPanel\");\n        customHeaderPanel.addComponentListener(new java.awt.event.ComponentAdapter() {\n\n            public void componentShown(java.awt.event.ComponentEvent evt) {\n                customHeaderPanelComponentShown(evt);\n            }\n        });\n        // NOI18N\n        customHeadersScrollPane.setName(\"customHeadersScrollPane\");\n        customHeaders.setColumns(20);\n        // NOI18N\n        customHeaders.setFont(resourceMap.getFont(\"customHeaders.font\"));\n        customHeaders.setLineWrap(true);\n        customHeaders.setRows(5);\n        // NOI18N\n        customHeaders.setText(resourceMap.getString(\"customHeaders.text\"));\n        // NOI18N\n        customHeaders.setName(\"customHeaders\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), customHeaders, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        customHeadersScrollPane.setViewportView(customHeaders);\n        // NOI18N\n        useCustomHeadersCheckBox.setFont(resourceMap.getFont(\"useCustomHeadersCheckBox.font\"));\n        // NOI18N\n        useCustomHeadersCheckBox.setText(resourceMap.getString(\"useCustomHeadersCheckBox.text\"));\n        useCustomHeadersCheckBox.setFocusable(false);\n        // NOI18N\n        useCustomHeadersCheckBox.setName(\"useCustomHeadersCheckBox\");\n        javax.swing.GroupLayout customHeaderPanelLayout = new javax.swing.GroupLayout(customHeaderPanel);\n        customHeaderPanel.setLayout(customHeaderPanelLayout);\n        customHeaderPanelLayout.setHorizontalGroup(customHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(customHeaderPanelLayout.createSequentialGroup().addContainerGap().addGroup(customHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(customHeadersScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE).addComponent(useCustomHeadersCheckBox)).addContainerGap()));\n        customHeaderPanelLayout.setVerticalGroup(customHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(customHeaderPanelLayout.createSequentialGroup().addComponent(useCustomHeadersCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(customHeadersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(73, Short.MAX_VALUE)));\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"customHeaderPanel.TabConstraints.tabTitle\"), customHeaderPanel);\n        // NOI18N\n        debugPanel.setName(\"debugPanel\");\n        // NOI18N\n        debugDataScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString(\"debugDataScrollPane.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, resourceMap.getFont(\"debugDataScrollPane.border.titleFont\")));\n        // NOI18N\n        debugDataScrollPane.setName(\"debugDataScrollPane\");\n        // NOI18N\n        debugDataPane.setBackground(resourceMap.getColor(\"debugDataPane.background\"));\n        // NOI18N\n        debugDataPane.setName(\"debugDataPane\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mergeInfoCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), debugDataPane, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        debugDataScrollPane.setViewportView(debugDataPane);\n        javax.swing.GroupLayout debugPanelLayout = new javax.swing.GroupLayout(debugPanel);\n        debugPanel.setLayout(debugPanelLayout);\n        debugPanelLayout.setHorizontalGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 395, Short.MAX_VALUE).addGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(debugDataScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)));\n        debugPanelLayout.setVerticalGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 374, Short.MAX_VALUE).addGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(debugDataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)));\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"debugPanel.TabConstraints.tabTitle\"), debugPanel);\n        // NOI18N\n        upButton.setFont(resourceMap.getFont(\"upButton.font\"));\n        // NOI18N\n        upButton.setIcon(resourceMap.getIcon(\"upButton.icon\"));\n        // NOI18N\n        upButton.setText(resourceMap.getString(\"upButton.text\"));\n        // NOI18N\n        upButton.setName(\"upButton\");\n        upButton.setNextFocusableComponent(replayDataPane);\n        upButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                upButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        downButton.setFont(resourceMap.getFont(\"downButton.font\"));\n        // NOI18N\n        downButton.setIcon(resourceMap.getIcon(\"downButton.icon\"));\n        // NOI18N\n        downButton.setName(\"downButton\");\n        downButton.setNextFocusableComponent(replayDataPane);\n        downButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                downButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        clearParams.setFont(resourceMap.getFont(\"clearParams.font\"));\n        // NOI18N\n        clearParams.setText(resourceMap.getString(\"clearParams.text\"));\n        // NOI18N\n        clearParams.setToolTipText(resourceMap.getString(\"clearParams.toolTipText\"));\n        clearParams.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n        // NOI18N\n        clearParams.setName(\"clearParams\");\n        clearParams.setNextFocusableComponent(paramsComboBox);\n        clearParams.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                clearParamsActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        clipboardButton.setIcon(resourceMap.getIcon(\"clipboardButton.icon\"));\n        // NOI18N\n        clipboardButton.setToolTipText(resourceMap.getString(\"clipboardButton.toolTipText\"));\n        // NOI18N\n        clipboardButton.setName(\"clipboardButton\");\n        clipboardButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                clipboardButtonActionPerformed(evt);\n            }\n        });\n        paramsComboBox.setEditable(true);\n        // NOI18N\n        paramsComboBox.setFont(resourceMap.getFont(\"paramsComboBox.font\"));\n        paramsComboBox.setMaximumRowCount(10);\n        paramsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"\" }));\n        // NOI18N\n        paramsComboBox.setName(\"paramsComboBox\");\n        paramsComboBox.addItemListener(new java.awt.event.ItemListener() {\n\n            public void itemStateChanged(java.awt.event.ItemEvent evt) {\n                paramsComboBoxItemStateChanged(evt);\n            }\n        });\n        paramsComboBox.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                paramsComboBoxActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        paramsLabel.setFont(resourceMap.getFont(\"paramsLabel.font\"));\n        // NOI18N\n        paramsLabel.setText(resourceMap.getString(\"paramsLabel.text\"));\n        paramsLabel.setFocusable(false);\n        // NOI18N\n        paramsLabel.setName(\"paramsLabel\");\n        // NOI18N\n        mainSeparator.setName(\"mainSeparator\");\n        // NOI18N\n        intelSaveCheckBox.setFont(resourceMap.getFont(\"intelSaveCheckBox.font\"));\n        // NOI18N\n        intelSaveCheckBox.setText(resourceMap.getString(\"intelSaveCheckBox.text\"));\n        // NOI18N\n        intelSaveCheckBox.setToolTipText(resourceMap.getString(\"intelSaveCheckBox.toolTipText\"));\n        // NOI18N\n        intelSaveCheckBox.setName(\"intelSaveCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, toFileCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), intelSaveCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        toFileTextField.setText(resourceMap.getString(\"toFileTextField.text\"));\n        // NOI18N\n        toFileTextField.setName(\"toFileTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, intelSaveCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), toFileTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        toFileButton.setFont(resourceMap.getFont(\"toFileButton.font\"));\n        // NOI18N\n        toFileButton.setText(resourceMap.getString(\"toFileButton.text\"));\n        // NOI18N\n        toFileButton.setToolTipText(resourceMap.getString(\"toFileButton.toolTipText\"));\n        toFileButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n        toFileButton.setFocusable(false);\n        // NOI18N\n        toFileButton.setName(\"toFileButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, intelSaveCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), toFileButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        toFileButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                toFileButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        toFileCheckBox.setFont(resourceMap.getFont(\"toFileCheckBox.font\"));\n        // NOI18N\n        toFileCheckBox.setText(resourceMap.getString(\"toFileCheckBox.text\"));\n        // NOI18N\n        toFileCheckBox.setToolTipText(resourceMap.getString(\"toFileCheckBox.toolTipText\"));\n        // NOI18N\n        toFileCheckBox.setName(\"toFileCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, intelSaveCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), toFileCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);\n        mainPanel.setLayout(mainPanelLayout);\n        mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup().addContainerGap().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(mainSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE).addGroup(mainPanelLayout.createSequentialGroup().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE).addGroup(mainPanelLayout.createSequentialGroup().addComponent(urlLabel).addGap(10, 10, 10).addComponent(clearURL).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(urlCombo, 0, 349, Short.MAX_VALUE)).addGroup(mainPanelLayout.createSequentialGroup().addComponent(paramsLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(clearParams).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(paramsComboBox, 0, 330, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup().addComponent(toFileCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(toFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(toFileButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(intelSaveCheckBox))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(goButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(paramsButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(methodPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(clearButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(upButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(downButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(clipboardButton, javax.swing.GroupLayout.Alignment.TRAILING)))).addContainerGap()));\n        mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(mainPanelLayout.createSequentialGroup().addContainerGap().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(goButton).addComponent(urlCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(urlLabel).addComponent(clearURL, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(paramsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(paramsLabel).addComponent(clearParams, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(paramsButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(mainSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(1, 1, 1).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(mainPanelLayout.createSequentialGroup().addComponent(methodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(saveButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(clearButton).addGap(18, 18, 18).addComponent(upButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(downButton).addGap(18, 18, 18).addComponent(clipboardButton).addGap(159, 159, 159)).addGroup(mainPanelLayout.createSequentialGroup().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(intelSaveCheckBox).addComponent(toFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(toFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(toFileCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)))));\n        // NOI18N\n        mainMenuBar.setFont(resourceMap.getFont(\"mainMenuBar.font\"));\n        // NOI18N\n        mainMenuBar.setName(\"mainMenuBar\");\n        // NOI18N\n        fileMenu.setAction(actionMap.get(\"fileChoose\"));\n        // NOI18N\n        fileMenu.setText(resourceMap.getString(\"fileMenu.text\"));\n        // NOI18N\n        fileMenu.setFont(resourceMap.getFont(\"fileMenu.font\"));\n        // NOI18N\n        fileMenu.setName(\"fileMenu\");\n        // NOI18N\n        saveMenuItem.setAction(actionMap.get(\"fileChoose\"));\n        // NOI18N\n        saveMenuItem.setFont(resourceMap.getFont(\"saveMenuItem.font\"));\n        // NOI18N\n        saveMenuItem.setText(resourceMap.getString(\"saveMenuItem.text\"));\n        // NOI18N\n        saveMenuItem.setName(\"saveMenuItem\");\n        fileMenu.add(saveMenuItem);\n        // NOI18N\n        clearMenuItem1.setAction(actionMap.get(\"ClearDataPanel\"));\n        // NOI18N\n        clearMenuItem1.setFont(resourceMap.getFont(\"clearMenuItem1.font\"));\n        // NOI18N\n        clearMenuItem1.setText(resourceMap.getString(\"clearMenuItem1.text\"));\n        // NOI18N\n        clearMenuItem1.setName(\"clearMenuItem1\");\n        fileMenu.add(clearMenuItem1);\n        // NOI18N\n        filesSeparator1.setName(\"filesSeparator1\");\n        fileMenu.add(filesSeparator1);\n        // NOI18N\n        saveTemplateItem.setFont(resourceMap.getFont(\"saveTemplateItem.font\"));\n        // NOI18N\n        saveTemplateItem.setText(resourceMap.getString(\"saveTemplateItem.text\"));\n        // NOI18N\n        saveTemplateItem.setName(\"saveTemplateItem\");\n        saveTemplateItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                saveTemplateItemActionPerformed(evt);\n            }\n        });\n        fileMenu.add(saveTemplateItem);\n        // NOI18N\n        loadTemplateItem.setFont(resourceMap.getFont(\"saveTemplateItem.font\"));\n        // NOI18N\n        loadTemplateItem.setText(resourceMap.getString(\"loadTemplateItem.text\"));\n        // NOI18N\n        loadTemplateItem.setName(\"loadTemplateItem\");\n        loadTemplateItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                loadTemplateItemActionPerformed(evt);\n            }\n        });\n        fileMenu.add(loadTemplateItem);\n        // NOI18N\n        filesSeparator2.setName(\"filesSeparator2\");\n        fileMenu.add(filesSeparator2);\n        // NOI18N\n        exitMenuItem.setAction(actionMap.get(\"quit\"));\n        // NOI18N\n        exitMenuItem.setFont(resourceMap.getFont(\"exitMenuItem.font\"));\n        // NOI18N\n        exitMenuItem.setName(\"exitMenuItem\");\n        fileMenu.add(exitMenuItem);\n        mainMenuBar.add(fileMenu);\n        // NOI18N\n        toolsMenu.setText(resourceMap.getString(\"toolsMenu.text\"));\n        // NOI18N\n        toolsMenu.setFont(resourceMap.getFont(\"toolsMenu.font\"));\n        // NOI18N\n        toolsMenu.setName(\"toolsMenu\");\n        // NOI18N\n        notesMenuItem.setFont(resourceMap.getFont(\"notesMenuItem.font\"));\n        notesMenuItem.setMnemonic('n');\n        // NOI18N\n        notesMenuItem.setText(resourceMap.getString(\"notesMenuItem.text\"));\n        // NOI18N\n        notesMenuItem.setToolTipText(resourceMap.getString(\"notesMenuItem.toolTipText\"));\n        // NOI18N\n        notesMenuItem.setName(\"notesMenuItem\");\n        notesMenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                notesMenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(notesMenuItem);\n        // NOI18N\n        toolsSeparator.setName(\"toolsSeparator\");\n        toolsMenu.add(toolsSeparator);\n        // NOI18N\n        cryptMenuItem.setFont(resourceMap.getFont(\"cryptMenuItem.font\"));\n        cryptMenuItem.setMnemonic('d');\n        // NOI18N\n        cryptMenuItem.setText(resourceMap.getString(\"cryptMenuItem.text\"));\n        // NOI18N\n        cryptMenuItem.setToolTipText(resourceMap.getString(\"cryptMenuItem.toolTipText\"));\n        // NOI18N\n        cryptMenuItem.setName(\"cryptMenuItem\");\n        cryptMenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cryptMenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(cryptMenuItem);\n        // NOI18N\n        md5MenuItem.setFont(resourceMap.getFont(\"md5MenuItem.font\"));\n        md5MenuItem.setMnemonic('m');\n        // NOI18N\n        md5MenuItem.setText(resourceMap.getString(\"md5MenuItem.text\"));\n        // NOI18N\n        md5MenuItem.setToolTipText(resourceMap.getString(\"md5MenuItem.toolTipText\"));\n        // NOI18N\n        md5MenuItem.setName(\"md5MenuItem\");\n        md5MenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                md5MenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(md5MenuItem);\n        // NOI18N\n        base64MenuItem.setFont(resourceMap.getFont(\"notesMenuItem.font\"));\n        base64MenuItem.setMnemonic('b');\n        // NOI18N\n        base64MenuItem.setText(resourceMap.getString(\"base64MenuItem.text\"));\n        // NOI18N\n        base64MenuItem.setToolTipText(resourceMap.getString(\"base64MenuItem.toolTipText\"));\n        // NOI18N\n        base64MenuItem.setName(\"base64MenuItem\");\n        base64MenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                base64MenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(base64MenuItem);\n        // NOI18N\n        toolsSeparator2.setName(\"toolsSeparator2\");\n        toolsMenu.add(toolsSeparator2);\n        optionsMenu.setMnemonic('o');\n        // NOI18N\n        optionsMenu.setText(resourceMap.getString(\"optionsMenu.text\"));\n        // NOI18N\n        optionsMenu.setFont(resourceMap.getFont(\"optionsMenu.font\"));\n        // NOI18N\n        optionsMenu.setName(\"optionsMenu\");\n        // NOI18N\n        mergeInfoCheckBox.setFont(resourceMap.getFont(\"mergeInfoCheckBox.font\"));\n        // NOI18N\n        mergeInfoCheckBox.setText(resourceMap.getString(\"mergeInfoCheckBox.text\"));\n        // NOI18N\n        mergeInfoCheckBox.setToolTipText(resourceMap.getString(\"mergeInfoCheckBox.toolTipText\"));\n        // NOI18N\n        mergeInfoCheckBox.setName(\"mergeInfoCheckBox\");\n        optionsMenu.add(mergeInfoCheckBox);\n        toolsMenu.add(optionsMenu);\n        mainMenuBar.add(toolsMenu);\n        // NOI18N\n        helpMenu.setText(resourceMap.getString(\"helpMenu.text\"));\n        // NOI18N\n        helpMenu.setFont(resourceMap.getFont(\"helpMenu.font\"));\n        // NOI18N\n        helpMenu.setName(\"helpMenu\");\n        // NOI18N\n        aboutMenuItem.setAction(actionMap.get(\"showAboutBox\"));\n        // NOI18N\n        aboutMenuItem.setFont(resourceMap.getFont(\"aboutMenuItem.font\"));\n        // NOI18N\n        aboutMenuItem.setName(\"aboutMenuItem\");\n        helpMenu.add(aboutMenuItem);\n        mainMenuBar.add(helpMenu);\n        // NOI18N\n        statusPanel.setName(\"statusPanel\");\n        // NOI18N\n        statusPanelSeparator.setName(\"statusPanelSeparator\");\n        // NOI18N\n        statusMessageLabel.setName(\"statusMessageLabel\");\n        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);\n        // NOI18N\n        statusAnimationLabel.setName(\"statusAnimationLabel\");\n        // NOI18N\n        progressBar.setName(\"progressBar\");\n        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);\n        statusPanel.setLayout(statusPanelLayout);\n        statusPanelLayout.setHorizontalGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE).addGroup(statusPanelLayout.createSequentialGroup().addContainerGap().addComponent(statusMessageLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE).addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(statusAnimationLabel).addContainerGap()));\n        statusPanelLayout.setVerticalGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(statusPanelLayout.createSequentialGroup().addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(statusMessageLabel).addComponent(statusAnimationLabel).addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(3, 3, 3)));\n        setComponent(mainPanel);\n        setMenuBar(mainMenuBar);\n        setStatusBar(statusPanel);\n        bindingGroup.bind();\n    }\n\n    // </editor-fold>//GEN-END:initComponents\n    private void urlComboActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_urlComboActionPerformed\n        // TODO make Combo to work:\n        if (evt.getActionCommand().equals(\"comboBoxEdited\")) {\n            //Object item = urlCombo.getSelectedItem();\n            //\n            // urlCombo.hidePopup();\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(urlCombo)) {\n                urlCombo.addItem(urlCombo.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_urlComboActionPerformed\n    private void formComponentHidden(java.awt.event.ComponentEvent evt) {\n        /*\n         * Copy information from ParamsDialog to\n         * ParamsTextField\n         */\n        SwingUtilities.invokeLater(new Runnable() {\n\n            @Override\n            public void run() {\n                if (RequestParamsDialog.isDataChanged()) {\n                    paramsComboBox.setSelectedItem(RequestParamsDialog.getRequestParams());\n                }\n            }\n        });\n    }\n\n    private void paramsButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_paramsButtonActionPerformed\n        /*\n         * Show Params dialog\n         * and set listener in hidden event\n         */\n        if (requestParams == null) {\n            // Initialize Options dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            requestParams = new RequestParamsDialog(mainFrame, true);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                //SwingUtilities.invokeAndWait(new Runnable() {\n                public void run() {\n                    requestParams.setVisible(true);\n                }\n            });\n            requestParams.addComponentListener(new java.awt.event.ComponentAdapter() {\n\n                @Override\n                public void componentHidden(java.awt.event.ComponentEvent evt) {\n                    formComponentHidden(evt);\n                }\n            });\n        } else {\n            requestParams.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_paramsButtonActionPerformed\n    private void clearURLActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_clearURLActionPerformed\n        /* \n         * Clear URL Combo\n         */\n        urlCombo.setSelectedItem(\"\");\n        clearURL.transferFocus();\n    }\n\n    //GEN-LAST:event_clearURLActionPerformed\n    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_upButtonActionPerformed\n        /*\n         * Move caret to top position\n         */\n        upButton.transferFocus();\n        replayDataPane.setCaretPosition(0);\n    }\n\n    //GEN-LAST:event_upButtonActionPerformed\n    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_downButtonActionPerformed\n        /*\n         * Move caret to bottom position\n         */\n        downButton.transferFocus();\n        replayDataPane.setCaretPosition(replayDataPane.getText().length());\n    }\n\n    //GEN-LAST:event_downButtonActionPerformed\n    private void notesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_notesMenuItemActionPerformed\n        /*\n         * Show Note Dialog\n         */\n        if (notesDialog == null) {\n            // Initialize Notes dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            notesDialog = new NotesDialog(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                //SwingUtilities.invokeAndWait(new Runnable() {\n                @Override\n                public void run() {\n                    notesDialog.setVisible(true);\n                }\n            });\n        } else {\n            notesDialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_notesMenuItemActionPerformed\n    private void clearParamsActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_clearParamsActionPerformed\n        /*\n         * Clear Params (Text field)\n         */\n        paramsComboBox.setSelectedItem(\"\");\n        clearParams.transferFocus();\n    }\n\n    //GEN-LAST:event_clearParamsActionPerformed\n    private void customHeaderPanelComponentShown(java.awt.event.ComponentEvent evt) {\n        //GEN-FIRST:event_customHeaderPanelComponentShown\n        /*\n         * Write headers options to CustomHeader (TextArea)\n         */\n        initRequestHeaders();\n        customHeaders.setText(HeaderSettings.getHeaders());\n    }\n\n    //GEN-LAST:event_customHeaderPanelComponentShown\n    private void base64MenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_base64MenuItemActionPerformed\n        /*\n         * Show Base64 Dialog\n         */\n        if (base64Dialog == null) {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            base64Dialog = new Base64Transformer(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                @Override\n                public void run() {\n                    base64Dialog.setVisible(true);\n                }\n            });\n        } else {\n            base64Dialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_base64MenuItemActionPerformed\n    private void md5MenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_md5MenuItemActionPerformed\n        /*\n         * Show MD5 Dialog\n         */\n        if (md5Dialog == null) {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            md5Dialog = new MD5Dialog(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                @Override\n                public void run() {\n                    md5Dialog.setVisible(true);\n                }\n            });\n        } else {\n            md5Dialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_md5MenuItemActionPerformed\n    private void cryptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_cryptMenuItemActionPerformed\n        /*\n         * Show Crypt/DES Dialog\n         */\n        if (desDialog == null) {\n            // Initialize Options dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            desDialog = new CryptDesDialog(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                //SwingUtilities.invokeAndWait(new Runnable() {\n                public void run() {\n                    desDialog.setVisible(true);\n                }\n            });\n        } else {\n            desDialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_cryptMenuItemActionPerformed\n    private void clipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_clipboardButtonActionPerformed\n        String seletedText = replayDataPane.getSelectedText();\n        StringSelection stringSelection = new StringSelection(seletedText);\n        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n        clipboard.setContents(stringSelection, stringSelection);\n    }\n\n    //GEN-LAST:event_clipboardButtonActionPerformed\n    private void paramsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_paramsComboBoxActionPerformed\n        if (evt.getActionCommand().equals(\"comboBoxEdited\")) {\n            // urlCombo.hidePopup();\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(paramsComboBox)) {\n                paramsComboBox.addItem(paramsComboBox.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_paramsComboBoxActionPerformed\n    private void paramsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {\n        //GEN-FIRST:event_paramsComboBoxItemStateChanged\n        if (evt.getStateChange() == ItemEvent.SELECTED) {\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(paramsComboBox)) {\n                paramsComboBox.addItem(paramsComboBox.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_paramsComboBoxItemStateChanged\n    private void urlComboItemStateChanged(java.awt.event.ItemEvent evt) {\n        //GEN-FIRST:event_urlComboItemStateChanged\n        if (evt.getStateChange() == ItemEvent.SELECTED) {\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(urlCombo)) {\n                urlCombo.addItem(urlCombo.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_urlComboItemStateChanged\n    private void toFileButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_toFileButtonActionPerformed\n        HttpFileUtils yourChoice = new HttpFileUtils();\n        yourChoice.fillToFileField(this, this.getFrame());\n    }\n\n    //GEN-LAST:event_toFileButtonActionPerformed\n    private void loadTemplateItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_loadTemplateItemActionPerformed\n        HttpPreference myPrefs = new HttpPreference();\n        if (notesDialog != null) {\n            notesDialog.putNotes(myPrefs.loadPreference(this, this.getFrame()));\n        } else {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            notesDialog = new NotesDialog(mainFrame, false);\n            notesDialog.putNotes(myPrefs.loadPreference(this, this.getFrame()));\n            /*SwingUtilities.invokeLater(new Runnable() {\n            //SwingUtilities.invokeAndWait(new Runnable() {\n\n            @Override\n            public void run() {\n            notesDialog.setVisible(false);\n            }\n            });*/\n        }\n    }\n\n    //GEN-LAST:event_loadTemplateItemActionPerformed\n    private void saveTemplateItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_saveTemplateItemActionPerformed\n        initRequestHeaders();\n        customHeaders.setText(HeaderSettings.getHeaders());\n        HttpPreference myPrefs = new HttpPreference();\n        if (notesDialog != null) {\n            myPrefs.savePreference(this, this.getFrame(), notesDialog.getNotes());\n        } else {\n            myPrefs.savePreference(this, this.getFrame(), null);\n        }\n    }\n\n    //GEN-LAST:event_saveTemplateItemActionPerformed\n    private void initRequestHeaders() {\n        if (customRefererCheckBox.isSelected()) {\n            referer = customRefererTextField.getText();\n        } else {\n            try {\n                referer = URIUtils.createURI(\"http\", targetHost, targetPort, targetPath, null, null).toString();\n            } catch (URISyntaxException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(this.getFrame()).showErrorDialog(\"Referer incorrect\", ex.getLocalizedMessage());\n            }\n        }\n        if (customCookieCheckBox.isSelected()) {\n            HeaderSettings.setCookie(customCookieTextField.getText());\n        } else {\n            HeaderSettings.clearCookie();\n        }\n        if (useCustomHeadersCheckBox.isSelected()) {\n            HeaderSettings.initHeaders(customHeaders.getText());\n        } else if (firefoxRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.FIREFOX, referer);\n        } else if (ie6RadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IE6, referer);\n        } else if (ie7RadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IE7, referer);\n        } else if (ie8RadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IE8, referer);\n        } else if (googleBotRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.GOOGLEBOT, referer);\n        } else if (msnRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.MSNBOT, referer);\n        } else if (iPhoneRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IPHONE, referer);\n        } else if (yahooRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.YAHOOBOT, referer);\n        }\n    }\n\n    private String initUrl() {\n        if (urlCombo.getSelectedItem() != null) {\n            String url = urlCombo.getSelectedItem().toString();\n            if ((url != null) && (!url.isEmpty())) {\n                String[] partsUrl = new ParamsUrlTools().splitUrl(url, this.getFrame());\n                targetHost = partsUrl[0];\n                targetPort = Integer.decode(partsUrl[1]);\n                targetPath = partsUrl[2];\n                return partsUrl[3];\n            }\n        }\n        return null;\n    }\n\n    public class ProxyAuth extends Authenticator {\n\n        private PasswordAuthentication auth;\n\n        private ProxyAuth(String user, String password) {\n            auth = new PasswordAuthentication(user, password == null ? new char[] {} : password.toCharArray());\n        }\n\n        @Override\n        protected PasswordAuthentication getPasswordAuthentication() {\n            return auth;\n        }\n    }\n\n    /**\n     * Make connection use proxy server\n     * @param HttpClient\n     */\n    void setProxy(DefaultHttpClient myClient) {\n        String textField = proxyField.getText();\n        int indexStr = textField.indexOf(\":\");\n        proxyHost = textField.substring(0, indexStr);\n        proxyPort = Integer.decode(textField.substring(indexStr + 1));\n        if (proxyHttpRadioButton.isSelected()) {\n            System.setProperty(\"socksProxySet\", \"false\");\n            HttpHost proxy = new HttpHost(proxyHost, proxyPort);\n            myClient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy);\n            //Proxy Auth\n            if (proxyAuthCheckBox.isSelected()) {\n                String username = proxyUserTextField.getText();\n                String password = String.valueOf(proxyPassPasswordField.getPassword());\n                UsernamePasswordCredentials creds = new UsernamePasswordCredentials(username, password);\n                myClient.getCredentialsProvider().setCredentials(new AuthScope(proxyHost, proxyPort), creds);\n            }\n        } else if (proxySocksRadioButton.isSelected()) {\n            /*System.out.println(\"User =\" + System.getProperty(\"java.net.socks.username\"));\n            System.out.println(\"Pass =\" + System.getProperty(\"java.net.socks.password\"));*/\n            System.setProperty(\"socksProxySet\", \"true\");\n            System.setProperty(\"socksProxyHost\", proxyHost);\n            System.setProperty(\"socksProxyPort\", Integer.toString(proxyPort));\n            String username = proxyUserTextField.getText();\n            String password = String.valueOf(proxyPassPasswordField.getPassword());\n            Authenticator.setDefault(new ProxyAuth(username, password));\n            /*System.getProperties().put(\"socksProxyHost\", proxyHost);\n            System.out.println(\"User =\"+System.getProperty(\"java.net.socks.username\"));\n            System.out.println(\"Pass =\"+System.getProperty(\"java.net.socks.password\"));*/\n        }\n    }\n\n    void showIntelSaveDialog(String message) {\n        /*\n         * Show intelligence save dialog\n         */\n        if (intelSaveDialog == null) {\n            // Initialize Options dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            intelSaveDialog = new IntelSaveDialog(mainFrame, true);\n            IntelSaveDialog.setMessage(message);\n            try {\n                SwingUtilities.invokeAndWait(new Runnable() {\n\n                    @Override\n                    public void run() {\n                        intelSaveDialog.setVisible(true);\n                    }\n                });\n            } catch (InterruptedException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n            } catch (InvocationTargetException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n            }\n        } else {\n            IntelSaveDialog.setMessage(message);\n            intelSaveDialog.setVisible(true);\n        }\n    }\n\n    @Action\n    public Task RequestRun() {\n        return new RequestRunTask(getApplication());\n    }\n\n    private class RequestRunTask extends org.jdesktop.application.Task<Object, Void> {\n\n        RequestRunTask(org.jdesktop.application.Application app) {\n            // Runs on the EDT.  Copy GUI state that\n            // doInBackground() depends on from parameters\n            // to RequestRunTask fields, here.\n            super(app);\n        }\n\n        @Override\n        protected Object doInBackground() {\n            // Your Task's code here.  This method runs\n            // on a background thread, so don't reference\n            // the Swing GUI from here.\n            // Check URL\n            String workURL = initUrl();\n            if (workURL == null) {\n                return null;\n            }\n            setProgress(0, 0, 100);\n            // Prepare HTTP method\n            HttpParams httpParams = new BasicHttpParams();\n            InitBasicParams myInitParams = new InitBasicParams();\n            myInitParams.initHttpParams(httpParams, HttpAnalyzerView.this);\n            initRequestHeaders();\n            DefaultHttpClient httpClient = new DefaultHttpClient(httpParams);\n            setProxy(httpClient);\n            SwingTools swingTool = new SwingTools(HttpAnalyzerView.this, HttpAnalyzerApp.getApplication().getMainFrame());\n            swingTool.setColorTextDoc(new Date() + \"\\n\", swingTool.DATE_COLOR, true);\n            if (!mergeInfoCheckBox.isSelected()) {\n                swingTool.setColorTextDoc(new Date() + \"\\n\", swingTool.DATE_COLOR, false);\n            }\n            setMessage(\"Connect to \" + targetHost);\n            goButton.setEnabled(false);\n            // HTTP Auth\n            if (httpAuthCheckBox.isSelected()) {\n                String username = httpUserTextField.getText();\n                String password = String.valueOf(httpPassPasswordField.getPassword());\n                UsernamePasswordCredentials creds = new UsernamePasswordCredentials(username, password);\n                httpClient.getCredentialsProvider().setCredentials(AuthScope.ANY, creds);\n            }\n            try {\n                if (getRadio.isSelected()) {\n                    /*\n                     * GET Request section\n                     */\n                    List<NameValuePair> qparams = null;\n                    URI uri = null;\n                    if (!paramsComboBox.getSelectedItem().toString().isEmpty()) {\n                        qparams = new ParamsUrlTools().getPairParams(paramsComboBox.getSelectedItem().toString());\n                        //qparams = RequestParamsDialog.getRequestParams();\n                        try {\n                            uri = URIUtils.createURI(\"http\", targetHost, targetPort, targetPath, URLEncodedUtils.format(qparams, \"UTF-8\"), null);\n                        } catch (URISyntaxException ex) {\n                            Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                    } else {\n                        try {\n                            uri = URIUtils.createURI(\"http\", targetHost, targetPort, targetPath, null, null);\n                        } catch (URISyntaxException ex) {\n                            Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                    }\n                    // HttpGet httpGet = new HttpGet(workURL);\n                    HttpGet httpGet = new HttpGet(uri);\n                    if (useCustomHeadersCheckBox.isSelected()) {\n                        System.out.println(\"Headers:\\n\");\n                    }\n                    httpGet.setHeaders(HeaderSettings.setHeaders());\n                    // Show request\n                    swingTool.spliterOut();\n                    String getRequest = httpGet.getMethod() + \" \" + httpGet.getURI() + \"\\n\";\n                    swingTool.setColorTextDoc(getRequest, swingTool.REQUEST_COLOR, true);\n                    if (!mergeInfoCheckBox.isSelected()) {\n                        swingTool.setColorTextDoc(getRequest, swingTool.REQUEST_COLOR, false);\n                    }\n                    swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpGet), swingTool.REQUEST_COLOR, false);\n                    // Response header\n                    setMessage(\"GET request to \" + targetHost);\n                    httpResponse = httpClient.execute(httpGet);\n                    setProgress(30, 0, 100);\n                } else if (postRadio.isSelected()) {\n                    /*\n                     * POST Request section\n                     */\n                    HttpPost httpPost = new HttpPost(workURL);\n                    httpPost.setHeaders(HeaderSettings.setHeaders());\n                    if (!paramsComboBox.getSelectedItem().toString().isEmpty()) {\n                        ByteArrayEntity postEntityParams = null;\n                        byte[] params = paramsComboBox.getSelectedItem().toString().getBytes();\n                        postEntityParams = new ByteArrayEntity(params);\n                        postEntityParams.setContentType(\"application/x-www-form-urlencoded\");\n                        postEntityParams.setChunked(false);\n                        httpPost.setEntity(postEntityParams);\n                    }\n                    // Show request\n                    swingTool.spliterOut();\n                    String postRequest = httpPost.getMethod() + \" \" + httpPost.getURI() + \"\\n\";\n                    swingTool.setColorTextDoc(postRequest, swingTool.REQUEST_COLOR, true);\n                    if (!mergeInfoCheckBox.isSelected()) {\n                        swingTool.setColorTextDoc(postRequest, swingTool.REQUEST_COLOR, false);\n                    }\n                    swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpPost), swingTool.REQUEST_COLOR, false);\n                    //spliterOut();\n                    //spliterOut();\n                    setMessage(\"POST request to \" + targetHost);\n                    httpResponse = httpClient.execute(httpPost);\n                    setProgress(30, 0, 100);\n                } else if (headRadio.isSelected()) {\n                    /*\n                     * HEAD Request section\n                     */\n                    HttpHead httpHead = new HttpHead(workURL);\n                    httpHead.setHeaders(HeaderSettings.setHeaders());\n                    // Show request\n                    swingTool.spliterOut();\n                    String headRequest = httpHead.getMethod() + \" \" + httpHead.getURI() + \"\\n\";\n                    swingTool.setColorTextDoc(headRequest, swingTool.REQUEST_COLOR, true);\n                    if (!mergeInfoCheckBox.isSelected()) {\n                        swingTool.setColorTextDoc(headRequest, swingTool.REQUEST_COLOR, false);\n                    }\n                    //spliterOut();\n                    //spliterOut();\n                    swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpHead), swingTool.REQUEST_COLOR, false);\n                    //spliterOut();\n                    setMessage(\"HEAD request to \" + targetHost);\n                    httpResponse = httpClient.execute(httpHead);\n                    setProgress(30, 0, 100);\n                }\n                setMessage(\"Wait answer ... \");\n                swingTool.setColorTextDoc(httpResponse.getStatusLine().toString() + \"\\n\", swingTool.RESPONSE_COLOR, true);\n                swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpResponse.getAllHeaders()) + \"\\n\", swingTool.REQUEST_COLOR, true);\n                HttpEntity entity = httpResponse.getEntity();\n                swingTool.spliterOut();\n                setProgress(50, 0, 100);\n                // Response entity\n                swingTool.spliterOut();\n                if (entity != null) {\n                    if (intelSaveCheckBox.isSelected()) {\n                        // Intelligence mode is ON\n                        setProgress(80, 0, 100);\n                        String contentType = entity.getContentType().getValue();\n                        if (!contentType.startsWith(\"text/htm\")) {\n                            // Binary content\n                            long sizeEntity = entity.getContentLength();\n                            String message = contentType + \". Size is \" + sizeEntity + \" bytes.\";\n                            showIntelSaveDialog(message);\n                            int status = IntelSaveDialog.getStatus();\n                            if (status == 2) {\n                                String filename = IntelSaveDialog.getFilename();\n                                HttpFileUtils myUtils = new HttpFileUtils();\n                                long size = myUtils.saveEntity(entity, filename);\n                                swingTool.setColorTextDoc(\"Save \" + size + \" bytes into \" + filename + \"\\n\", swingTool.DATE_COLOR, true);\n                            } else if (status == 1) {\n                                swingTool.showEntity(entity);\n                            } else {\n                                swingTool.setColorTextDoc(\"Entity is ignored\\n\", swingTool.DATE_COLOR, true);\n                            }\n                            System.out.println(\"Status =\" + IntelSaveDialog.getStatus());\n                        } else {\n                            swingTool.showEntity(entity);\n                        }\n                    } else if ((toFileCheckBox.isSelected()) && (!toFileTextField.getText().isEmpty())) {\n                        setProgress(80, 0, 100);\n                        String filename = toFileTextField.getText();\n                        HttpFileUtils myUtils = new HttpFileUtils();\n                        System.out.println(\"Base Entity =\" + entity.getContentLength());\n                        long size = myUtils.saveEntity(entity, filename);\n                        swingTool.setColorTextDoc(\"Save \" + size + \" bytes into \" + filename + \"\\n\", swingTool.DATE_COLOR, true);\n                    } else {\n                        setProgress(80, 0, 100);\n                        swingTool.showEntity(entity);\n                    }\n                    swingTool.spliterOut();\n                } else {\n                    swingTool.setColorTextDoc(\"Entity is NULL\\n\", swingTool.DATE_COLOR, true);\n                }\n                setProgress(100, 0, 100);\n                replayDataPane.setCaretPosition(replayDataPane.getText().length());\n                setMessage(\"Done.\");\n            } catch (IOException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(HttpAnalyzerApp.getApplication().getMainFrame()).showErrorDialog(\"IO Error\", ex.toString());\n                setMessage(\"<html><font color=#CC0000>Error!</font></html>\");\n            } finally {\n                goButton.setEnabled(true);\n                // When HttpClient instance is no longer needed,\n                // shut down the connection manager to ensure\n                // immediate deallocation of all system resources\n                httpClient.getConnectionManager().shutdown();\n            }\n            // return your result\n            return null;\n        }\n\n        @Override\n        protected void succeeded(Object result) {\n            // Runs on the EDT.  Update the GUI based on\n            // the result computed by doInBackground().\n        }\n    }\n\n    @Action\n    public Task ClearDataPanel() {\n        return new ClearDataPanelTask(getApplication());\n    }\n\n    private class ClearDataPanelTask extends org.jdesktop.application.Task<Object, Void> {\n\n        ClearDataPanelTask(org.jdesktop.application.Application app) {\n            // Runs on the EDT.  Copy GUI state that\n            // doInBackground() depends on from parameters\n            // to ClearDataPanelTask fields, here.\n            super(app);\n            replayDataPane.setText(null);\n            replayDataPane.requestFocus();\n        }\n\n        @Override\n        protected Object doInBackground() {\n            // Your Task's code here.  This method runs\n            // on a background thread, so don't reference\n            // the Swing GUI from here.\n            // return your result\n            return null;\n        }\n\n        @Override\n        protected void succeeded(Object result) {\n            // Runs on the EDT.  Update the GUI based on\n            // the result computed by doInBackground().\n        }\n    }\n\n    @Action\n    public void fileChoose() {\n        HttpFileUtils infoSaver = new HttpFileUtils();\n        infoSaver.saveSessionInfo(this, this.getFrame());\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JLabel agentsLabel;\n\n    private javax.swing.JSeparator agentsSeparator;\n\n    private javax.swing.JMenuItem base64MenuItem;\n\n    private javax.swing.JPanel basicHeadersPanel;\n\n    private javax.swing.JButton clearButton;\n\n    private javax.swing.JMenuItem clearMenuItem1;\n\n    private javax.swing.JButton clearParams;\n\n    private javax.swing.JButton clearURL;\n\n    private javax.swing.JButton clipboardButton;\n\n    private javax.swing.JMenuItem cryptMenuItem;\n\n    public javax.swing.JCheckBox customCookieCheckBox;\n\n    public javax.swing.JTextField customCookieTextField;\n\n    private javax.swing.JPanel customHeaderPanel;\n\n    public javax.swing.JTextArea customHeaders;\n\n    private javax.swing.JScrollPane customHeadersScrollPane;\n\n    public javax.swing.JCheckBox customRefererCheckBox;\n\n    public javax.swing.JTextField customRefererTextField;\n\n    public javax.swing.JTextPane debugDataPane;\n\n    private javax.swing.JScrollPane debugDataScrollPane;\n\n    private javax.swing.JPanel debugPanel;\n\n    private javax.swing.JButton downButton;\n\n    private javax.swing.JPopupMenu.Separator filesSeparator1;\n\n    private javax.swing.JPopupMenu.Separator filesSeparator2;\n\n    public javax.swing.JRadioButton firefoxRadioButton;\n\n    public javax.swing.JRadioButton getRadio;\n\n    private javax.swing.JButton goButton;\n\n    public javax.swing.JRadioButton googleBotRadioButton;\n\n    public javax.swing.JRadioButton headRadio;\n\n    public javax.swing.JCheckBox httpAuthCheckBox;\n\n    private javax.swing.JPanel httpOptionsPanel;\n\n    private javax.swing.JLabel httpPassLabel;\n\n    public javax.swing.JPasswordField httpPassPasswordField;\n\n    private javax.swing.JLabel httpUserLabel;\n\n    public javax.swing.JTextField httpUserTextField;\n\n    private javax.swing.JLabel httpVerLabel;\n\n    public javax.swing.JComboBox httpVersionComboBox;\n\n    public javax.swing.JRadioButton iPhoneRadioButton;\n\n    public javax.swing.JRadioButton ie6RadioButton;\n\n    public javax.swing.JRadioButton ie7RadioButton;\n\n    public javax.swing.JRadioButton ie8RadioButton;\n\n    public javax.swing.JCheckBox intelSaveCheckBox;\n\n    private javax.swing.JMenuItem loadTemplateItem;\n\n    private javax.swing.JMenuBar mainMenuBar;\n\n    private javax.swing.JPanel mainPanel;\n\n    private javax.swing.JSeparator mainSeparator;\n\n    private javax.swing.JTabbedPane mainTabbedPane;\n\n    private javax.swing.JMenuItem md5MenuItem;\n\n    public javax.swing.JCheckBoxMenuItem mergeInfoCheckBox;\n\n    private javax.swing.ButtonGroup methodGroups;\n\n    private javax.swing.JPanel methodPanel;\n\n    public javax.swing.JRadioButton msnRadioButton;\n\n    private javax.swing.JMenuItem notesMenuItem;\n\n    private javax.swing.JMenu optionsMenu;\n\n    private javax.swing.JPanel optionsPanel;\n\n    private javax.swing.JButton paramsButton;\n\n    public javax.swing.JComboBox paramsComboBox;\n\n    private javax.swing.JLabel paramsLabel;\n\n    public javax.swing.JRadioButton postRadio;\n\n    private javax.swing.JProgressBar progressBar;\n\n    public javax.swing.JCheckBox proxyAuthCheckBox;\n\n    public javax.swing.JTextField proxyField;\n\n    private javax.swing.JLabel proxyHostLabel;\n\n    public javax.swing.JRadioButton proxyHttpRadioButton;\n\n    public javax.swing.JRadioButton proxyNoneRadioButton;\n\n    private javax.swing.JLabel proxyPassLabel;\n\n    public javax.swing.JPasswordField proxyPassPasswordField;\n\n    private javax.swing.JPanel proxySetsPanel;\n\n    public javax.swing.JRadioButton proxySocksRadioButton;\n\n    private javax.swing.ButtonGroup proxyTypesGroup;\n\n    private javax.swing.JPanel proxyTypesPanel;\n\n    private javax.swing.JLabel proxyUserLabel;\n\n    public javax.swing.JTextField proxyUserTextField;\n\n    public javax.swing.JTextPane replayDataPane;\n\n    private javax.swing.JScrollPane replayDataScrollPane;\n\n    private javax.swing.JButton saveButton;\n\n    private javax.swing.JMenuItem saveMenuItem;\n\n    private javax.swing.JMenuItem saveTemplateItem;\n\n    private javax.swing.JLabel statusAnimationLabel;\n\n    private javax.swing.JLabel statusMessageLabel;\n\n    private javax.swing.JPanel statusPanel;\n\n    private javax.swing.JButton toFileButton;\n\n    public javax.swing.JCheckBox toFileCheckBox;\n\n    public javax.swing.JTextField toFileTextField;\n\n    private javax.swing.JMenu toolsMenu;\n\n    private javax.swing.JPopupMenu.Separator toolsSeparator;\n\n    private javax.swing.JPopupMenu.Separator toolsSeparator2;\n\n    private javax.swing.JButton upButton;\n\n    public javax.swing.JComboBox urlCombo;\n\n    private javax.swing.JLabel urlLabel;\n\n    public javax.swing.JCheckBox useCustomHeadersCheckBox;\n\n    private javax.swing.ButtonGroup userAgentsGroup;\n\n    public javax.swing.JRadioButton yahooRadioButton;\n\n    private org.jdesktop.beansbinding.BindingGroup bindingGroup;\n\n    // End of variables declaration//GEN-END:variables\n    private final Timer messageTimer;\n\n    private final Timer busyIconTimer;\n\n    private final Icon idleIcon;\n\n    private final Icon[] busyIcons = new Icon[15];\n\n    private int busyIconIndex = 0;\n\n    private JDialog aboutBox;\n\n    private RequestParamsDialog requestParams;\n\n    private NotesDialog notesDialog;\n\n    private Base64Transformer base64Dialog;\n\n    private MD5Dialog md5Dialog;\n\n    private CryptDesDialog desDialog;\n\n    private IntelSaveDialog intelSaveDialog;\n}\n",
    "test_prompt": "// HttpAnalyzerViewTest0.java\npackage httpanalyzer;\n\nimport java.awt.Toolkit;\nimport java.awt.datatransfer.Clipboard;\nimport java.awt.datatransfer.StringSelection;\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.jdesktop.application.Action;\nimport org.jdesktop.application.ResourceMap;\nimport org.jdesktop.application.SingleFrameApplication;\nimport org.jdesktop.application.FrameView;\nimport org.jdesktop.application.TaskMonitor;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.net.Authenticator;\nimport java.net.PasswordAuthentication;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Date;\nimport java.util.List;\nimport javax.swing.Timer;\nimport javax.swing.Icon;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.SwingUtilities;\nimport org.apache.http.*;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.auth.AuthScope;\nimport org.apache.http.auth.UsernamePasswordCredentials;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.methods.HttpHead;\nimport org.apache.http.client.utils.URIUtils;\nimport org.apache.http.client.utils.URLEncodedUtils;\nimport org.apache.http.conn.params.ConnRoutePNames;\nimport org.apache.http.entity.ByteArrayEntity;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.params.BasicHttpParams;\nimport org.apache.http.params.HttpParams;\nimport org.jdesktop.application.Task;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpAnalyzerView}.\n* It contains ten unit test cases for the {@link HttpAnalyzerView#RequestRun()} method.\n*/\nclass HttpAnalyzerViewTest0 {"
},
{
    "choices": [
        {
            "finish_reason": "ERROR - This model's maximum context length is 8001 tokens, however you requested 33921 tokens (31873 in your prompt; 2048 for the completion). Please reduce your prompt; or completion length."
        }
    ],
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/HttpAnalyzerViewTest1.java",
    "original_code": "// HttpAnalyzerView.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n *\n * Copyright (C) 2010, vlad\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\n * HttpAnalyzerView.java\n */\npackage httpanalyzer;\n\nimport java.awt.Toolkit;\nimport java.awt.datatransfer.Clipboard;\nimport java.awt.datatransfer.StringSelection;\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.jdesktop.application.Action;\nimport org.jdesktop.application.ResourceMap;\nimport org.jdesktop.application.SingleFrameApplication;\nimport org.jdesktop.application.FrameView;\nimport org.jdesktop.application.TaskMonitor;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.net.Authenticator;\nimport java.net.PasswordAuthentication;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Date;\nimport java.util.List;\nimport javax.swing.Timer;\nimport javax.swing.Icon;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.SwingUtilities;\nimport org.apache.http.*;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.auth.AuthScope;\nimport org.apache.http.auth.UsernamePasswordCredentials;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.methods.HttpHead;\nimport org.apache.http.client.utils.URIUtils;\nimport org.apache.http.client.utils.URLEncodedUtils;\nimport org.apache.http.conn.params.ConnRoutePNames;\nimport org.apache.http.entity.ByteArrayEntity;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.params.BasicHttpParams;\nimport org.apache.http.params.HttpParams;\nimport org.jdesktop.application.Task;\n\n/**\n * The application's main frame.\n */\npublic class HttpAnalyzerView extends FrameView {\n\n    HttpResponse httpResponse;\n\n    // Hostname\n    String targetHost;\n\n    int targetPort;\n\n    String targetPath;\n\n    String referer;\n\n    String proxyHost;\n\n    int proxyPort;\n\n    public HttpAnalyzerView(SingleFrameApplication app) {\n        super(app);\n        initComponents();\n        // status bar initialization - message timeout, idle icon and busy animation, etc\n        ResourceMap resourceMap = getResourceMap();\n        int messageTimeout = resourceMap.getInteger(\"StatusBar.messageTimeout\");\n        messageTimer = new Timer(messageTimeout, new ActionListener() {\n\n            public void actionPerformed(ActionEvent e) {\n                statusMessageLabel.setText(\"\");\n            }\n        });\n        messageTimer.setRepeats(false);\n        int busyAnimationRate = resourceMap.getInteger(\"StatusBar.busyAnimationRate\");\n        for (int i = 0; i < busyIcons.length; i++) {\n            busyIcons[i] = resourceMap.getIcon(\"StatusBar.busyIcons[\" + i + \"]\");\n        }\n        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {\n\n            public void actionPerformed(ActionEvent e) {\n                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;\n                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);\n            }\n        });\n        idleIcon = resourceMap.getIcon(\"StatusBar.idleIcon\");\n        statusAnimationLabel.setIcon(idleIcon);\n        progressBar.setVisible(false);\n        // connecting action tasks to status bar via TaskMonitor\n        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());\n        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {\n\n            public void propertyChange(java.beans.PropertyChangeEvent evt) {\n                String propertyName = evt.getPropertyName();\n                if (\"started\".equals(propertyName)) {\n                    if (!busyIconTimer.isRunning()) {\n                        statusAnimationLabel.setIcon(busyIcons[0]);\n                        busyIconIndex = 0;\n                        busyIconTimer.start();\n                    }\n                    progressBar.setVisible(true);\n                    progressBar.setIndeterminate(true);\n                } else if (\"done\".equals(propertyName)) {\n                    busyIconTimer.stop();\n                    statusAnimationLabel.setIcon(idleIcon);\n                    progressBar.setVisible(false);\n                    progressBar.setValue(0);\n                } else if (\"message\".equals(propertyName)) {\n                    String text = (String) (evt.getNewValue());\n                    statusMessageLabel.setText((text == null) ? \"\" : text);\n                    messageTimer.restart();\n                } else if (\"progress\".equals(propertyName)) {\n                    int value = (Integer) (evt.getNewValue());\n                    progressBar.setVisible(true);\n                    progressBar.setIndeterminate(false);\n                    progressBar.setValue(value);\n                }\n            }\n        });\n        // My pre-init\n        String proxyEnv = new InitBasicParams().getProxyEnv();\n        if (proxyEnv != null) {\n            proxyField.setText(proxyEnv);\n        }\n        initRequestHeaders();\n    }\n\n    @Action\n    public void showAboutBox() {\n        if (aboutBox == null) {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            aboutBox = new HttpAnalyzerAboutBox(mainFrame);\n            aboutBox.setLocationRelativeTo(mainFrame);\n        }\n        HttpAnalyzerApp.getApplication().show(aboutBox);\n    }\n\n    /**\n     * This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    void initComponents() {\n        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();\n        mainPanel = new javax.swing.JPanel();\n        urlLabel = new javax.swing.JLabel();\n        urlCombo = new javax.swing.JComboBox();\n        goButton = new javax.swing.JButton();\n        clearButton = new javax.swing.JButton();\n        saveButton = new javax.swing.JButton();\n        methodPanel = new javax.swing.JPanel();\n        getRadio = new javax.swing.JRadioButton();\n        postRadio = new javax.swing.JRadioButton();\n        headRadio = new javax.swing.JRadioButton();\n        paramsButton = new javax.swing.JButton();\n        clearURL = new javax.swing.JButton();\n        mainTabbedPane = new javax.swing.JTabbedPane();\n        replayDataScrollPane = new javax.swing.JScrollPane();\n        replayDataPane = new javax.swing.JTextPane();\n        optionsPanel = new javax.swing.JPanel();\n        proxyTypesPanel = new javax.swing.JPanel();\n        proxyNoneRadioButton = new javax.swing.JRadioButton();\n        proxyHttpRadioButton = new javax.swing.JRadioButton();\n        proxySocksRadioButton = new javax.swing.JRadioButton();\n        proxySetsPanel = new javax.swing.JPanel();\n        proxyField = new javax.swing.JTextField();\n        proxyHostLabel = new javax.swing.JLabel();\n        proxyUserLabel = new javax.swing.JLabel();\n        proxyAuthCheckBox = new javax.swing.JCheckBox();\n        proxyPassLabel = new javax.swing.JLabel();\n        proxyUserTextField = new javax.swing.JTextField();\n        proxyPassPasswordField = new javax.swing.JPasswordField();\n        httpOptionsPanel = new javax.swing.JPanel();\n        httpVerLabel = new javax.swing.JLabel();\n        httpVersionComboBox = new javax.swing.JComboBox();\n        httpUserLabel = new javax.swing.JLabel();\n        httpPassLabel = new javax.swing.JLabel();\n        httpPassPasswordField = new javax.swing.JPasswordField();\n        httpUserTextField = new javax.swing.JTextField();\n        httpAuthCheckBox = new javax.swing.JCheckBox();\n        basicHeadersPanel = new javax.swing.JPanel();\n        customRefererCheckBox = new javax.swing.JCheckBox();\n        customRefererTextField = new javax.swing.JTextField();\n        customCookieCheckBox = new javax.swing.JCheckBox();\n        customCookieTextField = new javax.swing.JTextField();\n        agentsSeparator = new javax.swing.JSeparator();\n        agentsLabel = new javax.swing.JLabel();\n        firefoxRadioButton = new javax.swing.JRadioButton();\n        ie6RadioButton = new javax.swing.JRadioButton();\n        ie7RadioButton = new javax.swing.JRadioButton();\n        ie8RadioButton = new javax.swing.JRadioButton();\n        iPhoneRadioButton = new javax.swing.JRadioButton();\n        googleBotRadioButton = new javax.swing.JRadioButton();\n        msnRadioButton = new javax.swing.JRadioButton();\n        yahooRadioButton = new javax.swing.JRadioButton();\n        customHeaderPanel = new javax.swing.JPanel();\n        customHeadersScrollPane = new javax.swing.JScrollPane();\n        customHeaders = new javax.swing.JTextArea();\n        useCustomHeadersCheckBox = new javax.swing.JCheckBox();\n        debugPanel = new javax.swing.JPanel();\n        debugDataScrollPane = new javax.swing.JScrollPane();\n        debugDataPane = new javax.swing.JTextPane();\n        upButton = new javax.swing.JButton();\n        downButton = new javax.swing.JButton();\n        clearParams = new javax.swing.JButton();\n        clipboardButton = new javax.swing.JButton();\n        paramsComboBox = new javax.swing.JComboBox();\n        paramsLabel = new javax.swing.JLabel();\n        mainSeparator = new javax.swing.JSeparator();\n        intelSaveCheckBox = new javax.swing.JCheckBox();\n        toFileTextField = new javax.swing.JTextField();\n        toFileButton = new javax.swing.JButton();\n        toFileCheckBox = new javax.swing.JCheckBox();\n        mainMenuBar = new javax.swing.JMenuBar();\n        javax.swing.JMenu fileMenu = new javax.swing.JMenu();\n        saveMenuItem = new javax.swing.JMenuItem();\n        clearMenuItem1 = new javax.swing.JMenuItem();\n        filesSeparator1 = new javax.swing.JPopupMenu.Separator();\n        saveTemplateItem = new javax.swing.JMenuItem();\n        loadTemplateItem = new javax.swing.JMenuItem();\n        filesSeparator2 = new javax.swing.JPopupMenu.Separator();\n        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();\n        toolsMenu = new javax.swing.JMenu();\n        notesMenuItem = new javax.swing.JMenuItem();\n        toolsSeparator = new javax.swing.JPopupMenu.Separator();\n        cryptMenuItem = new javax.swing.JMenuItem();\n        md5MenuItem = new javax.swing.JMenuItem();\n        base64MenuItem = new javax.swing.JMenuItem();\n        toolsSeparator2 = new javax.swing.JPopupMenu.Separator();\n        optionsMenu = new javax.swing.JMenu();\n        mergeInfoCheckBox = new javax.swing.JCheckBoxMenuItem();\n        javax.swing.JMenu helpMenu = new javax.swing.JMenu();\n        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();\n        statusPanel = new javax.swing.JPanel();\n        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();\n        statusMessageLabel = new javax.swing.JLabel();\n        statusAnimationLabel = new javax.swing.JLabel();\n        progressBar = new javax.swing.JProgressBar();\n        methodGroups = new javax.swing.ButtonGroup();\n        proxyTypesGroup = new javax.swing.ButtonGroup();\n        userAgentsGroup = new javax.swing.ButtonGroup();\n        // NOI18N\n        mainPanel.setName(\"mainPanel\");\n        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(HttpAnalyzerView.class);\n        // NOI18N\n        urlLabel.setFont(resourceMap.getFont(\"urlLabel.font\"));\n        // NOI18N\n        urlLabel.setText(resourceMap.getString(\"urlLabel.text\"));\n        urlLabel.setFocusable(false);\n        // NOI18N\n        urlLabel.setName(\"urlLabel\");\n        urlCombo.setEditable(true);\n        // NOI18N\n        urlCombo.setFont(resourceMap.getFont(\"urlCombo.font\"));\n        // NOI18N\n        urlCombo.setToolTipText(resourceMap.getString(\"urlCombo.toolTipText\"));\n        urlCombo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));\n        urlCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));\n        // NOI18N\n        urlCombo.setName(\"urlCombo\");\n        urlCombo.setNextFocusableComponent(paramsComboBox);\n        urlCombo.addItemListener(new java.awt.event.ItemListener() {\n\n            public void itemStateChanged(java.awt.event.ItemEvent evt) {\n                urlComboItemStateChanged(evt);\n            }\n        });\n        urlCombo.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                urlComboActionPerformed(evt);\n            }\n        });\n        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getActionMap(HttpAnalyzerView.class, this);\n        // NOI18N\n        goButton.setAction(actionMap.get(\"RequestRun\"));\n        // NOI18N\n        goButton.setFont(resourceMap.getFont(\"goButton.font\"));\n        // NOI18N\n        goButton.setIcon(resourceMap.getIcon(\"goButton.icon\"));\n        // NOI18N\n        goButton.setText(resourceMap.getString(\"goButton.text\"));\n        // NOI18N\n        goButton.setName(\"goButton\");\n        // NOI18N\n        clearButton.setAction(actionMap.get(\"ClearDataPanel\"));\n        // NOI18N\n        clearButton.setFont(resourceMap.getFont(\"clearButton.font\"));\n        // NOI18N\n        clearButton.setIcon(resourceMap.getIcon(\"clearButton.icon\"));\n        // NOI18N\n        clearButton.setText(resourceMap.getString(\"clearButton.text\"));\n        // NOI18N\n        clearButton.setToolTipText(resourceMap.getString(\"clearButton.toolTipText\"));\n        // NOI18N\n        clearButton.setName(\"clearButton\");\n        // NOI18N\n        saveButton.setAction(actionMap.get(\"fileChoose\"));\n        // NOI18N\n        saveButton.setFont(resourceMap.getFont(\"saveButton.font\"));\n        // NOI18N\n        saveButton.setIcon(resourceMap.getIcon(\"saveButton.icon\"));\n        // NOI18N\n        saveButton.setText(resourceMap.getString(\"saveButton.text\"));\n        // NOI18N\n        saveButton.setToolTipText(resourceMap.getString(\"saveButton.toolTipText\"));\n        // NOI18N\n        saveButton.setName(\"saveButton\");\n        // NOI18N\n        methodPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString(\"methodPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, resourceMap.getFont(\"methodPanel.border.titleFont\")));\n        // NOI18N\n        methodPanel.setName(\"methodPanel\");\n        methodGroups.add(getRadio);\n        // NOI18N\n        getRadio.setFont(resourceMap.getFont(\"headRadio.font\"));\n        getRadio.setSelected(true);\n        // NOI18N\n        getRadio.setText(resourceMap.getString(\"getRadio.text\"));\n        getRadio.setBorder(null);\n        // NOI18N\n        getRadio.setName(\"getRadio\");\n        methodGroups.add(postRadio);\n        // NOI18N\n        postRadio.setFont(resourceMap.getFont(\"headRadio.font\"));\n        // NOI18N\n        postRadio.setText(resourceMap.getString(\"postRadio.text\"));\n        postRadio.setBorder(null);\n        // NOI18N\n        postRadio.setName(\"postRadio\");\n        methodGroups.add(headRadio);\n        // NOI18N\n        headRadio.setFont(resourceMap.getFont(\"headRadio.font\"));\n        // NOI18N\n        headRadio.setText(resourceMap.getString(\"headRadio.text\"));\n        headRadio.setBorder(null);\n        // NOI18N\n        headRadio.setName(\"headRadio\");\n        javax.swing.GroupLayout methodPanelLayout = new javax.swing.GroupLayout(methodPanel);\n        methodPanel.setLayout(methodPanelLayout);\n        methodPanelLayout.setHorizontalGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(methodPanelLayout.createSequentialGroup().addGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(getRadio).addComponent(postRadio).addComponent(headRadio)).addContainerGap(4, Short.MAX_VALUE)));\n        methodPanelLayout.setVerticalGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(methodPanelLayout.createSequentialGroup().addComponent(getRadio).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(postRadio).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(headRadio)));\n        // NOI18N\n        paramsButton.setFont(resourceMap.getFont(\"paramsButton.font\"));\n        // NOI18N\n        paramsButton.setText(resourceMap.getString(\"paramsButton.text\"));\n        // NOI18N\n        paramsButton.setToolTipText(resourceMap.getString(\"paramsButton.toolTipText\"));\n        // NOI18N\n        paramsButton.setName(\"paramsButton\");\n        paramsButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                paramsButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        clearURL.setFont(resourceMap.getFont(\"clearURL.font\"));\n        // NOI18N\n        clearURL.setText(resourceMap.getString(\"clearURL.text\"));\n        // NOI18N\n        clearURL.setToolTipText(resourceMap.getString(\"clearURL.toolTipText\"));\n        clearURL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n        // NOI18N\n        clearURL.setName(\"clearURL\");\n        clearURL.setNextFocusableComponent(urlCombo);\n        clearURL.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                clearURLActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        mainTabbedPane.setFont(resourceMap.getFont(\"mainTabbedPane.font\"));\n        // NOI18N\n        mainTabbedPane.setName(\"mainTabbedPane\");\n        // NOI18N\n        replayDataScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString(\"replayDataScrollPane.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, resourceMap.getFont(\"replayDataScrollPane.border.titleFont\")));\n        // NOI18N\n        replayDataScrollPane.setName(\"replayDataScrollPane\");\n        // NOI18N\n        replayDataPane.setBackground(resourceMap.getColor(\"replayDataPane.background\"));\n        // NOI18N\n        replayDataPane.setName(\"replayDataPane\");\n        replayDataScrollPane.setViewportView(replayDataPane);\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"replayDataScrollPane.TabConstraints.tabTitle\"), replayDataScrollPane);\n        // NOI18N\n        optionsPanel.setName(\"optionsPanel\");\n        // NOI18N\n        proxyTypesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString(\"proxyTypesPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, resourceMap.getFont(\"proxyTypesPanel.border.titleFont\")));\n        // NOI18N\n        proxyTypesPanel.setName(\"proxyTypesPanel\");\n        proxyTypesGroup.add(proxyNoneRadioButton);\n        // NOI18N\n        proxyNoneRadioButton.setFont(resourceMap.getFont(\"proxySocksRadioButton.font\"));\n        proxyNoneRadioButton.setSelected(true);\n        // NOI18N\n        proxyNoneRadioButton.setText(resourceMap.getString(\"proxyNoneRadioButton.text\"));\n        // NOI18N\n        proxyNoneRadioButton.setName(\"proxyNoneRadioButton\");\n        proxyTypesGroup.add(proxyHttpRadioButton);\n        // NOI18N\n        proxyHttpRadioButton.setFont(resourceMap.getFont(\"proxySocksRadioButton.font\"));\n        // NOI18N\n        proxyHttpRadioButton.setText(resourceMap.getString(\"proxyHttpRadioButton.text\"));\n        // NOI18N\n        proxyHttpRadioButton.setName(\"proxyHttpRadioButton\");\n        proxyTypesGroup.add(proxySocksRadioButton);\n        // NOI18N\n        proxySocksRadioButton.setFont(resourceMap.getFont(\"proxySocksRadioButton.font\"));\n        // NOI18N\n        proxySocksRadioButton.setText(resourceMap.getString(\"proxySocksRadioButton.text\"));\n        // NOI18N\n        proxySocksRadioButton.setName(\"proxySocksRadioButton\");\n        javax.swing.GroupLayout proxyTypesPanelLayout = new javax.swing.GroupLayout(proxyTypesPanel);\n        proxyTypesPanel.setLayout(proxyTypesPanelLayout);\n        proxyTypesPanelLayout.setHorizontalGroup(proxyTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxyTypesPanelLayout.createSequentialGroup().addContainerGap().addGroup(proxyTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(proxyNoneRadioButton).addComponent(proxyHttpRadioButton).addComponent(proxySocksRadioButton)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        proxyTypesPanelLayout.setVerticalGroup(proxyTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxyTypesPanelLayout.createSequentialGroup().addComponent(proxyNoneRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(proxyHttpRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(proxySocksRadioButton).addContainerGap(4, Short.MAX_VALUE)));\n        // NOI18N\n        proxySetsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString(\"proxySetsPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont(\"proxySetsPanel.border.titleFont\")));\n        // NOI18N\n        proxySetsPanel.setName(\"proxySetsPanel\");\n        // NOI18N\n        proxyField.setText(resourceMap.getString(\"proxyField.text\"));\n        proxyField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));\n        // NOI18N\n        proxyField.setName(\"proxyField\");\n        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proxyNoneRadioButton, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), proxyField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        proxyHostLabel.setFont(resourceMap.getFont(\"proxyHostLabel.font\"));\n        // NOI18N\n        proxyHostLabel.setText(resourceMap.getString(\"proxyHostLabel.text\"));\n        // NOI18N\n        proxyHostLabel.setName(\"proxyHostLabel\");\n        // NOI18N\n        proxyUserLabel.setFont(resourceMap.getFont(\"proxyUserLabel.font\"));\n        // NOI18N\n        proxyUserLabel.setText(resourceMap.getString(\"proxyUserLabel.text\"));\n        // NOI18N\n        proxyUserLabel.setName(\"proxyUserLabel\");\n        // NOI18N\n        proxyAuthCheckBox.setFont(resourceMap.getFont(\"proxyAuthCheckBox.font\"));\n        // NOI18N\n        proxyAuthCheckBox.setText(resourceMap.getString(\"proxyAuthCheckBox.text\"));\n        // NOI18N\n        proxyAuthCheckBox.setToolTipText(resourceMap.getString(\"proxyAuthCheckBox.toolTipText\"));\n        // NOI18N\n        proxyAuthCheckBox.setName(\"proxyAuthCheckBox\");\n        // NOI18N\n        proxyPassLabel.setFont(resourceMap.getFont(\"proxyPassLabel.font\"));\n        // NOI18N\n        proxyPassLabel.setText(resourceMap.getString(\"proxyPassLabel.text\"));\n        // NOI18N\n        proxyPassLabel.setName(\"proxyPassLabel\");\n        // NOI18N\n        proxyUserTextField.setText(resourceMap.getString(\"proxyUserTextField.text\"));\n        // NOI18N\n        proxyUserTextField.setName(\"proxyUserTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proxyAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), proxyUserTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        proxyPassPasswordField.setText(resourceMap.getString(\"proxyPassPasswordField.text\"));\n        // NOI18N\n        proxyPassPasswordField.setName(\"proxyPassPasswordField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proxyAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), proxyPassPasswordField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        javax.swing.GroupLayout proxySetsPanelLayout = new javax.swing.GroupLayout(proxySetsPanel);\n        proxySetsPanel.setLayout(proxySetsPanelLayout);\n        proxySetsPanelLayout.setHorizontalGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addContainerGap().addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(proxyHostLabel).addComponent(proxyAuthCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addComponent(proxyUserLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(proxyUserTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)).addComponent(proxyField, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))).addGroup(proxySetsPanelLayout.createSequentialGroup().addComponent(proxyPassLabel).addGap(21, 21, 21).addComponent(proxyPassPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))).addContainerGap()));\n        proxySetsPanelLayout.setVerticalGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(proxySetsPanelLayout.createSequentialGroup().addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(proxyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(proxyHostLabel)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(proxyUserLabel).addComponent(proxyAuthCheckBox).addComponent(proxyUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(proxySetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(proxyPassPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(proxyPassLabel)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        httpOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));\n        // NOI18N\n        httpOptionsPanel.setName(\"httpOptionsPanel\");\n        // NOI18N\n        httpVerLabel.setFont(resourceMap.getFont(\"httpVerLabel.font\"));\n        // NOI18N\n        httpVerLabel.setText(resourceMap.getString(\"httpVerLabel.text\"));\n        // NOI18N\n        httpVerLabel.setName(\"httpVerLabel\");\n        // NOI18N\n        httpVersionComboBox.setFont(resourceMap.getFont(\"httpVersionComboBox.font\"));\n        httpVersionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"1.1\", \"1.0\" }));\n        // NOI18N\n        httpVersionComboBox.setName(\"httpVersionComboBox\");\n        // NOI18N\n        httpUserLabel.setFont(resourceMap.getFont(\"httpUserLabel.font\"));\n        // NOI18N\n        httpUserLabel.setText(resourceMap.getString(\"httpUserLabel.text\"));\n        // NOI18N\n        httpUserLabel.setName(\"httpUserLabel\");\n        // NOI18N\n        httpPassLabel.setFont(resourceMap.getFont(\"httpPassLabel.font\"));\n        // NOI18N\n        httpPassLabel.setText(resourceMap.getString(\"httpPassLabel.text\"));\n        // NOI18N\n        httpPassLabel.setName(\"httpPassLabel\");\n        // NOI18N\n        httpPassPasswordField.setName(\"httpPassPasswordField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, httpAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), httpPassPasswordField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        httpUserTextField.setName(\"httpUserTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, httpAuthCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), httpUserTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        httpAuthCheckBox.setFont(resourceMap.getFont(\"httpAuthCheckBox.font\"));\n        // NOI18N\n        httpAuthCheckBox.setText(resourceMap.getString(\"httpAuthCheckBox.text\"));\n        httpAuthCheckBox.setFocusable(false);\n        // NOI18N\n        httpAuthCheckBox.setName(\"httpAuthCheckBox\");\n        // NOI18N\n        basicHeadersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString(\"basicHeadersPanel.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont(\"basicHeadersPanel.border.titleFont\")));\n        // NOI18N\n        basicHeadersPanel.setName(\"basicHeadersPanel\");\n        // NOI18N\n        customRefererCheckBox.setFont(resourceMap.getFont(\"customRefererCheckBox.font\"));\n        // NOI18N\n        customRefererCheckBox.setText(resourceMap.getString(\"customRefererCheckBox.text\"));\n        // NOI18N\n        customRefererCheckBox.setName(\"customRefererCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), customRefererCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        customRefererTextField.setText(resourceMap.getString(\"customRefererTextField.text\"));\n        // NOI18N\n        customRefererTextField.setName(\"customRefererTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, customRefererCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), customRefererTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        customCookieCheckBox.setFont(resourceMap.getFont(\"customCookieCheckBox.font\"));\n        // NOI18N\n        customCookieCheckBox.setText(resourceMap.getString(\"customCookieCheckBox.text\"));\n        // NOI18N\n        customCookieCheckBox.setName(\"customCookieCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), customCookieCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        customCookieTextField.setName(\"customCookieTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, customCookieCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), customCookieTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        agentsSeparator.setName(\"agentsSeparator\");\n        // NOI18N\n        agentsLabel.setFont(resourceMap.getFont(\"agentsLabel.font\"));\n        // NOI18N\n        agentsLabel.setText(resourceMap.getString(\"agentsLabel.text\"));\n        // NOI18N\n        agentsLabel.setName(\"agentsLabel\");\n        userAgentsGroup.add(firefoxRadioButton);\n        // NOI18N\n        firefoxRadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        firefoxRadioButton.setText(resourceMap.getString(\"firefoxRadioButton.text\"));\n        // NOI18N\n        firefoxRadioButton.setName(\"firefoxRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), firefoxRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(ie6RadioButton);\n        // NOI18N\n        ie6RadioButton.setFont(resourceMap.getFont(\"ie6RadioButton.font\"));\n        ie6RadioButton.setSelected(true);\n        // NOI18N\n        ie6RadioButton.setText(resourceMap.getString(\"ie6RadioButton.text\"));\n        // NOI18N\n        ie6RadioButton.setName(\"ie6RadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), ie6RadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(ie7RadioButton);\n        // NOI18N\n        ie7RadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        ie7RadioButton.setText(resourceMap.getString(\"ie7RadioButton.text\"));\n        // NOI18N\n        ie7RadioButton.setName(\"ie7RadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), ie7RadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(ie8RadioButton);\n        // NOI18N\n        ie8RadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        ie8RadioButton.setText(resourceMap.getString(\"ie8RadioButton.text\"));\n        // NOI18N\n        ie8RadioButton.setName(\"ie8RadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), ie8RadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(iPhoneRadioButton);\n        // NOI18N\n        iPhoneRadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        iPhoneRadioButton.setText(resourceMap.getString(\"iPhoneRadioButton.text\"));\n        // NOI18N\n        iPhoneRadioButton.setName(\"iPhoneRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), iPhoneRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(googleBotRadioButton);\n        // NOI18N\n        googleBotRadioButton.setFont(resourceMap.getFont(\"googleBotRadioButton.font\"));\n        // NOI18N\n        googleBotRadioButton.setText(resourceMap.getString(\"googleBotRadioButton.text\"));\n        // NOI18N\n        googleBotRadioButton.setName(\"googleBotRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), googleBotRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(msnRadioButton);\n        // NOI18N\n        msnRadioButton.setFont(resourceMap.getFont(\"msnRadioButton.font\"));\n        // NOI18N\n        msnRadioButton.setText(resourceMap.getString(\"msnRadioButton.text\"));\n        // NOI18N\n        msnRadioButton.setName(\"msnRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), msnRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        userAgentsGroup.add(yahooRadioButton);\n        // NOI18N\n        yahooRadioButton.setFont(resourceMap.getFont(\"yahooRadioButton.font\"));\n        // NOI18N\n        yahooRadioButton.setText(resourceMap.getString(\"yahooRadioButton.text\"));\n        // NOI18N\n        yahooRadioButton.setName(\"yahooRadioButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), yahooRadioButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        javax.swing.GroupLayout basicHeadersPanelLayout = new javax.swing.GroupLayout(basicHeadersPanel);\n        basicHeadersPanel.setLayout(basicHeadersPanelLayout);\n        basicHeadersPanelLayout.setHorizontalGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addContainerGap().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(customCookieCheckBox).addComponent(customRefererCheckBox)).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(customRefererTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGap(12, 12, 12).addComponent(customCookieTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))).addGroup(basicHeadersPanelLayout.createSequentialGroup().addComponent(agentsLabel).addGap(18, 18, 18).addComponent(agentsSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(ie6RadioButton).addComponent(ie7RadioButton).addComponent(firefoxRadioButton)).addGap(18, 18, 18).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(googleBotRadioButton).addComponent(ie8RadioButton)).addGap(2, 2, 2).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(yahooRadioButton).addComponent(iPhoneRadioButton))).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGap(84, 84, 84).addComponent(msnRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE))).addContainerGap()));\n        basicHeadersPanelLayout.setVerticalGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(customRefererCheckBox).addComponent(customRefererTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(customCookieTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(customCookieCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(agentsLabel).addComponent(agentsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(basicHeadersPanelLayout.createSequentialGroup().addComponent(ie8RadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(basicHeadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(googleBotRadioButton).addComponent(yahooRadioButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(msnRadioButton)).addGroup(basicHeadersPanelLayout.createSequentialGroup().addComponent(firefoxRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(ie6RadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(ie7RadioButton)).addComponent(iPhoneRadioButton)).addContainerGap()));\n        javax.swing.GroupLayout httpOptionsPanelLayout = new javax.swing.GroupLayout(httpOptionsPanel);\n        httpOptionsPanel.setLayout(httpOptionsPanelLayout);\n        httpOptionsPanelLayout.setHorizontalGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(httpOptionsPanelLayout.createSequentialGroup().addContainerGap().addGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(basicHeadersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(httpOptionsPanelLayout.createSequentialGroup().addComponent(httpVerLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(httpUserLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpUserTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, httpOptionsPanelLayout.createSequentialGroup().addComponent(httpAuthCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpPassLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(httpPassPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))).addContainerGap()));\n        httpOptionsPanelLayout.setVerticalGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(httpOptionsPanelLayout.createSequentialGroup().addGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(httpVerLabel).addComponent(httpVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(httpUserLabel).addComponent(httpUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(httpOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(httpPassPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(httpPassLabel).addComponent(httpAuthCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(basicHeadersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));\n        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);\n        optionsPanel.setLayout(optionsPanelLayout);\n        optionsPanelLayout.setHorizontalGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(optionsPanelLayout.createSequentialGroup().addContainerGap().addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(httpOptionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(optionsPanelLayout.createSequentialGroup().addComponent(proxyTypesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(proxySetsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap()));\n        optionsPanelLayout.setVerticalGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(optionsPanelLayout.createSequentialGroup().addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(proxyTypesPanel, 0, 106, Short.MAX_VALUE).addComponent(proxySetsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(httpOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"optionsPanel.TabConstraints.tabTitle\"), optionsPanel);\n        // NOI18N\n        customHeaderPanel.setName(\"customHeaderPanel\");\n        customHeaderPanel.addComponentListener(new java.awt.event.ComponentAdapter() {\n\n            public void componentShown(java.awt.event.ComponentEvent evt) {\n                customHeaderPanelComponentShown(evt);\n            }\n        });\n        // NOI18N\n        customHeadersScrollPane.setName(\"customHeadersScrollPane\");\n        customHeaders.setColumns(20);\n        // NOI18N\n        customHeaders.setFont(resourceMap.getFont(\"customHeaders.font\"));\n        customHeaders.setLineWrap(true);\n        customHeaders.setRows(5);\n        // NOI18N\n        customHeaders.setText(resourceMap.getString(\"customHeaders.text\"));\n        // NOI18N\n        customHeaders.setName(\"customHeaders\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, useCustomHeadersCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${selected}\"), customHeaders, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        customHeadersScrollPane.setViewportView(customHeaders);\n        // NOI18N\n        useCustomHeadersCheckBox.setFont(resourceMap.getFont(\"useCustomHeadersCheckBox.font\"));\n        // NOI18N\n        useCustomHeadersCheckBox.setText(resourceMap.getString(\"useCustomHeadersCheckBox.text\"));\n        useCustomHeadersCheckBox.setFocusable(false);\n        // NOI18N\n        useCustomHeadersCheckBox.setName(\"useCustomHeadersCheckBox\");\n        javax.swing.GroupLayout customHeaderPanelLayout = new javax.swing.GroupLayout(customHeaderPanel);\n        customHeaderPanel.setLayout(customHeaderPanelLayout);\n        customHeaderPanelLayout.setHorizontalGroup(customHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(customHeaderPanelLayout.createSequentialGroup().addContainerGap().addGroup(customHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(customHeadersScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE).addComponent(useCustomHeadersCheckBox)).addContainerGap()));\n        customHeaderPanelLayout.setVerticalGroup(customHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(customHeaderPanelLayout.createSequentialGroup().addComponent(useCustomHeadersCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(customHeadersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(73, Short.MAX_VALUE)));\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"customHeaderPanel.TabConstraints.tabTitle\"), customHeaderPanel);\n        // NOI18N\n        debugPanel.setName(\"debugPanel\");\n        // NOI18N\n        debugDataScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString(\"debugDataScrollPane.border.title\"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, resourceMap.getFont(\"debugDataScrollPane.border.titleFont\")));\n        // NOI18N\n        debugDataScrollPane.setName(\"debugDataScrollPane\");\n        // NOI18N\n        debugDataPane.setBackground(resourceMap.getColor(\"debugDataPane.background\"));\n        // NOI18N\n        debugDataPane.setName(\"debugDataPane\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mergeInfoCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), debugDataPane, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        debugDataScrollPane.setViewportView(debugDataPane);\n        javax.swing.GroupLayout debugPanelLayout = new javax.swing.GroupLayout(debugPanel);\n        debugPanel.setLayout(debugPanelLayout);\n        debugPanelLayout.setHorizontalGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 395, Short.MAX_VALUE).addGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(debugDataScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)));\n        debugPanelLayout.setVerticalGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 374, Short.MAX_VALUE).addGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(debugDataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)));\n        // NOI18N\n        mainTabbedPane.addTab(resourceMap.getString(\"debugPanel.TabConstraints.tabTitle\"), debugPanel);\n        // NOI18N\n        upButton.setFont(resourceMap.getFont(\"upButton.font\"));\n        // NOI18N\n        upButton.setIcon(resourceMap.getIcon(\"upButton.icon\"));\n        // NOI18N\n        upButton.setText(resourceMap.getString(\"upButton.text\"));\n        // NOI18N\n        upButton.setName(\"upButton\");\n        upButton.setNextFocusableComponent(replayDataPane);\n        upButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                upButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        downButton.setFont(resourceMap.getFont(\"downButton.font\"));\n        // NOI18N\n        downButton.setIcon(resourceMap.getIcon(\"downButton.icon\"));\n        // NOI18N\n        downButton.setName(\"downButton\");\n        downButton.setNextFocusableComponent(replayDataPane);\n        downButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                downButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        clearParams.setFont(resourceMap.getFont(\"clearParams.font\"));\n        // NOI18N\n        clearParams.setText(resourceMap.getString(\"clearParams.text\"));\n        // NOI18N\n        clearParams.setToolTipText(resourceMap.getString(\"clearParams.toolTipText\"));\n        clearParams.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n        // NOI18N\n        clearParams.setName(\"clearParams\");\n        clearParams.setNextFocusableComponent(paramsComboBox);\n        clearParams.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                clearParamsActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        clipboardButton.setIcon(resourceMap.getIcon(\"clipboardButton.icon\"));\n        // NOI18N\n        clipboardButton.setToolTipText(resourceMap.getString(\"clipboardButton.toolTipText\"));\n        // NOI18N\n        clipboardButton.setName(\"clipboardButton\");\n        clipboardButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                clipboardButtonActionPerformed(evt);\n            }\n        });\n        paramsComboBox.setEditable(true);\n        // NOI18N\n        paramsComboBox.setFont(resourceMap.getFont(\"paramsComboBox.font\"));\n        paramsComboBox.setMaximumRowCount(10);\n        paramsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"\" }));\n        // NOI18N\n        paramsComboBox.setName(\"paramsComboBox\");\n        paramsComboBox.addItemListener(new java.awt.event.ItemListener() {\n\n            public void itemStateChanged(java.awt.event.ItemEvent evt) {\n                paramsComboBoxItemStateChanged(evt);\n            }\n        });\n        paramsComboBox.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                paramsComboBoxActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        paramsLabel.setFont(resourceMap.getFont(\"paramsLabel.font\"));\n        // NOI18N\n        paramsLabel.setText(resourceMap.getString(\"paramsLabel.text\"));\n        paramsLabel.setFocusable(false);\n        // NOI18N\n        paramsLabel.setName(\"paramsLabel\");\n        // NOI18N\n        mainSeparator.setName(\"mainSeparator\");\n        // NOI18N\n        intelSaveCheckBox.setFont(resourceMap.getFont(\"intelSaveCheckBox.font\"));\n        // NOI18N\n        intelSaveCheckBox.setText(resourceMap.getString(\"intelSaveCheckBox.text\"));\n        // NOI18N\n        intelSaveCheckBox.setToolTipText(resourceMap.getString(\"intelSaveCheckBox.toolTipText\"));\n        // NOI18N\n        intelSaveCheckBox.setName(\"intelSaveCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, toFileCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), intelSaveCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        toFileTextField.setText(resourceMap.getString(\"toFileTextField.text\"));\n        // NOI18N\n        toFileTextField.setName(\"toFileTextField\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, intelSaveCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), toFileTextField, org.jdesktop.beansbinding.BeanProperty.create(\"editable\"));\n        bindingGroup.addBinding(binding);\n        // NOI18N\n        toFileButton.setFont(resourceMap.getFont(\"toFileButton.font\"));\n        // NOI18N\n        toFileButton.setText(resourceMap.getString(\"toFileButton.text\"));\n        // NOI18N\n        toFileButton.setToolTipText(resourceMap.getString(\"toFileButton.toolTipText\"));\n        toFileButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n        toFileButton.setFocusable(false);\n        // NOI18N\n        toFileButton.setName(\"toFileButton\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, intelSaveCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), toFileButton, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        toFileButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                toFileButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        toFileCheckBox.setFont(resourceMap.getFont(\"toFileCheckBox.font\"));\n        // NOI18N\n        toFileCheckBox.setText(resourceMap.getString(\"toFileCheckBox.text\"));\n        // NOI18N\n        toFileCheckBox.setToolTipText(resourceMap.getString(\"toFileCheckBox.toolTipText\"));\n        // NOI18N\n        toFileCheckBox.setName(\"toFileCheckBox\");\n        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, intelSaveCheckBox, org.jdesktop.beansbinding.ELProperty.create(\"${!selected}\"), toFileCheckBox, org.jdesktop.beansbinding.BeanProperty.create(\"enabled\"));\n        bindingGroup.addBinding(binding);\n        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);\n        mainPanel.setLayout(mainPanelLayout);\n        mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup().addContainerGap().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(mainSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE).addGroup(mainPanelLayout.createSequentialGroup().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE).addGroup(mainPanelLayout.createSequentialGroup().addComponent(urlLabel).addGap(10, 10, 10).addComponent(clearURL).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(urlCombo, 0, 349, Short.MAX_VALUE)).addGroup(mainPanelLayout.createSequentialGroup().addComponent(paramsLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(clearParams).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(paramsComboBox, 0, 330, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup().addComponent(toFileCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(toFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(toFileButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(intelSaveCheckBox))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(goButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(paramsButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(methodPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(clearButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(upButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(downButton, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(clipboardButton, javax.swing.GroupLayout.Alignment.TRAILING)))).addContainerGap()));\n        mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(mainPanelLayout.createSequentialGroup().addContainerGap().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(goButton).addComponent(urlCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(urlLabel).addComponent(clearURL, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(paramsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(paramsLabel).addComponent(clearParams, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(paramsButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(mainSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(1, 1, 1).addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(mainPanelLayout.createSequentialGroup().addComponent(methodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(saveButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(clearButton).addGap(18, 18, 18).addComponent(upButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(downButton).addGap(18, 18, 18).addComponent(clipboardButton).addGap(159, 159, 159)).addGroup(mainPanelLayout.createSequentialGroup().addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(intelSaveCheckBox).addComponent(toFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(toFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(toFileCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)))));\n        // NOI18N\n        mainMenuBar.setFont(resourceMap.getFont(\"mainMenuBar.font\"));\n        // NOI18N\n        mainMenuBar.setName(\"mainMenuBar\");\n        // NOI18N\n        fileMenu.setAction(actionMap.get(\"fileChoose\"));\n        // NOI18N\n        fileMenu.setText(resourceMap.getString(\"fileMenu.text\"));\n        // NOI18N\n        fileMenu.setFont(resourceMap.getFont(\"fileMenu.font\"));\n        // NOI18N\n        fileMenu.setName(\"fileMenu\");\n        // NOI18N\n        saveMenuItem.setAction(actionMap.get(\"fileChoose\"));\n        // NOI18N\n        saveMenuItem.setFont(resourceMap.getFont(\"saveMenuItem.font\"));\n        // NOI18N\n        saveMenuItem.setText(resourceMap.getString(\"saveMenuItem.text\"));\n        // NOI18N\n        saveMenuItem.setName(\"saveMenuItem\");\n        fileMenu.add(saveMenuItem);\n        // NOI18N\n        clearMenuItem1.setAction(actionMap.get(\"ClearDataPanel\"));\n        // NOI18N\n        clearMenuItem1.setFont(resourceMap.getFont(\"clearMenuItem1.font\"));\n        // NOI18N\n        clearMenuItem1.setText(resourceMap.getString(\"clearMenuItem1.text\"));\n        // NOI18N\n        clearMenuItem1.setName(\"clearMenuItem1\");\n        fileMenu.add(clearMenuItem1);\n        // NOI18N\n        filesSeparator1.setName(\"filesSeparator1\");\n        fileMenu.add(filesSeparator1);\n        // NOI18N\n        saveTemplateItem.setFont(resourceMap.getFont(\"saveTemplateItem.font\"));\n        // NOI18N\n        saveTemplateItem.setText(resourceMap.getString(\"saveTemplateItem.text\"));\n        // NOI18N\n        saveTemplateItem.setName(\"saveTemplateItem\");\n        saveTemplateItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                saveTemplateItemActionPerformed(evt);\n            }\n        });\n        fileMenu.add(saveTemplateItem);\n        // NOI18N\n        loadTemplateItem.setFont(resourceMap.getFont(\"saveTemplateItem.font\"));\n        // NOI18N\n        loadTemplateItem.setText(resourceMap.getString(\"loadTemplateItem.text\"));\n        // NOI18N\n        loadTemplateItem.setName(\"loadTemplateItem\");\n        loadTemplateItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                loadTemplateItemActionPerformed(evt);\n            }\n        });\n        fileMenu.add(loadTemplateItem);\n        // NOI18N\n        filesSeparator2.setName(\"filesSeparator2\");\n        fileMenu.add(filesSeparator2);\n        // NOI18N\n        exitMenuItem.setAction(actionMap.get(\"quit\"));\n        // NOI18N\n        exitMenuItem.setFont(resourceMap.getFont(\"exitMenuItem.font\"));\n        // NOI18N\n        exitMenuItem.setName(\"exitMenuItem\");\n        fileMenu.add(exitMenuItem);\n        mainMenuBar.add(fileMenu);\n        // NOI18N\n        toolsMenu.setText(resourceMap.getString(\"toolsMenu.text\"));\n        // NOI18N\n        toolsMenu.setFont(resourceMap.getFont(\"toolsMenu.font\"));\n        // NOI18N\n        toolsMenu.setName(\"toolsMenu\");\n        // NOI18N\n        notesMenuItem.setFont(resourceMap.getFont(\"notesMenuItem.font\"));\n        notesMenuItem.setMnemonic('n');\n        // NOI18N\n        notesMenuItem.setText(resourceMap.getString(\"notesMenuItem.text\"));\n        // NOI18N\n        notesMenuItem.setToolTipText(resourceMap.getString(\"notesMenuItem.toolTipText\"));\n        // NOI18N\n        notesMenuItem.setName(\"notesMenuItem\");\n        notesMenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                notesMenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(notesMenuItem);\n        // NOI18N\n        toolsSeparator.setName(\"toolsSeparator\");\n        toolsMenu.add(toolsSeparator);\n        // NOI18N\n        cryptMenuItem.setFont(resourceMap.getFont(\"cryptMenuItem.font\"));\n        cryptMenuItem.setMnemonic('d');\n        // NOI18N\n        cryptMenuItem.setText(resourceMap.getString(\"cryptMenuItem.text\"));\n        // NOI18N\n        cryptMenuItem.setToolTipText(resourceMap.getString(\"cryptMenuItem.toolTipText\"));\n        // NOI18N\n        cryptMenuItem.setName(\"cryptMenuItem\");\n        cryptMenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cryptMenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(cryptMenuItem);\n        // NOI18N\n        md5MenuItem.setFont(resourceMap.getFont(\"md5MenuItem.font\"));\n        md5MenuItem.setMnemonic('m');\n        // NOI18N\n        md5MenuItem.setText(resourceMap.getString(\"md5MenuItem.text\"));\n        // NOI18N\n        md5MenuItem.setToolTipText(resourceMap.getString(\"md5MenuItem.toolTipText\"));\n        // NOI18N\n        md5MenuItem.setName(\"md5MenuItem\");\n        md5MenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                md5MenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(md5MenuItem);\n        // NOI18N\n        base64MenuItem.setFont(resourceMap.getFont(\"notesMenuItem.font\"));\n        base64MenuItem.setMnemonic('b');\n        // NOI18N\n        base64MenuItem.setText(resourceMap.getString(\"base64MenuItem.text\"));\n        // NOI18N\n        base64MenuItem.setToolTipText(resourceMap.getString(\"base64MenuItem.toolTipText\"));\n        // NOI18N\n        base64MenuItem.setName(\"base64MenuItem\");\n        base64MenuItem.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                base64MenuItemActionPerformed(evt);\n            }\n        });\n        toolsMenu.add(base64MenuItem);\n        // NOI18N\n        toolsSeparator2.setName(\"toolsSeparator2\");\n        toolsMenu.add(toolsSeparator2);\n        optionsMenu.setMnemonic('o');\n        // NOI18N\n        optionsMenu.setText(resourceMap.getString(\"optionsMenu.text\"));\n        // NOI18N\n        optionsMenu.setFont(resourceMap.getFont(\"optionsMenu.font\"));\n        // NOI18N\n        optionsMenu.setName(\"optionsMenu\");\n        // NOI18N\n        mergeInfoCheckBox.setFont(resourceMap.getFont(\"mergeInfoCheckBox.font\"));\n        // NOI18N\n        mergeInfoCheckBox.setText(resourceMap.getString(\"mergeInfoCheckBox.text\"));\n        // NOI18N\n        mergeInfoCheckBox.setToolTipText(resourceMap.getString(\"mergeInfoCheckBox.toolTipText\"));\n        // NOI18N\n        mergeInfoCheckBox.setName(\"mergeInfoCheckBox\");\n        optionsMenu.add(mergeInfoCheckBox);\n        toolsMenu.add(optionsMenu);\n        mainMenuBar.add(toolsMenu);\n        // NOI18N\n        helpMenu.setText(resourceMap.getString(\"helpMenu.text\"));\n        // NOI18N\n        helpMenu.setFont(resourceMap.getFont(\"helpMenu.font\"));\n        // NOI18N\n        helpMenu.setName(\"helpMenu\");\n        // NOI18N\n        aboutMenuItem.setAction(actionMap.get(\"showAboutBox\"));\n        // NOI18N\n        aboutMenuItem.setFont(resourceMap.getFont(\"aboutMenuItem.font\"));\n        // NOI18N\n        aboutMenuItem.setName(\"aboutMenuItem\");\n        helpMenu.add(aboutMenuItem);\n        mainMenuBar.add(helpMenu);\n        // NOI18N\n        statusPanel.setName(\"statusPanel\");\n        // NOI18N\n        statusPanelSeparator.setName(\"statusPanelSeparator\");\n        // NOI18N\n        statusMessageLabel.setName(\"statusMessageLabel\");\n        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);\n        // NOI18N\n        statusAnimationLabel.setName(\"statusAnimationLabel\");\n        // NOI18N\n        progressBar.setName(\"progressBar\");\n        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);\n        statusPanel.setLayout(statusPanelLayout);\n        statusPanelLayout.setHorizontalGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE).addGroup(statusPanelLayout.createSequentialGroup().addContainerGap().addComponent(statusMessageLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE).addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(statusAnimationLabel).addContainerGap()));\n        statusPanelLayout.setVerticalGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(statusPanelLayout.createSequentialGroup().addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(statusMessageLabel).addComponent(statusAnimationLabel).addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(3, 3, 3)));\n        setComponent(mainPanel);\n        setMenuBar(mainMenuBar);\n        setStatusBar(statusPanel);\n        bindingGroup.bind();\n    }\n\n    // </editor-fold>//GEN-END:initComponents\n    private void urlComboActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_urlComboActionPerformed\n        // TODO make Combo to work:\n        if (evt.getActionCommand().equals(\"comboBoxEdited\")) {\n            //Object item = urlCombo.getSelectedItem();\n            //\n            // urlCombo.hidePopup();\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(urlCombo)) {\n                urlCombo.addItem(urlCombo.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_urlComboActionPerformed\n    private void formComponentHidden(java.awt.event.ComponentEvent evt) {\n        /*\n         * Copy information from ParamsDialog to\n         * ParamsTextField\n         */\n        SwingUtilities.invokeLater(new Runnable() {\n\n            @Override\n            public void run() {\n                if (RequestParamsDialog.isDataChanged()) {\n                    paramsComboBox.setSelectedItem(RequestParamsDialog.getRequestParams());\n                }\n            }\n        });\n    }\n\n    private void paramsButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_paramsButtonActionPerformed\n        /*\n         * Show Params dialog\n         * and set listener in hidden event\n         */\n        if (requestParams == null) {\n            // Initialize Options dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            requestParams = new RequestParamsDialog(mainFrame, true);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                //SwingUtilities.invokeAndWait(new Runnable() {\n                public void run() {\n                    requestParams.setVisible(true);\n                }\n            });\n            requestParams.addComponentListener(new java.awt.event.ComponentAdapter() {\n\n                @Override\n                public void componentHidden(java.awt.event.ComponentEvent evt) {\n                    formComponentHidden(evt);\n                }\n            });\n        } else {\n            requestParams.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_paramsButtonActionPerformed\n    private void clearURLActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_clearURLActionPerformed\n        /* \n         * Clear URL Combo\n         */\n        urlCombo.setSelectedItem(\"\");\n        clearURL.transferFocus();\n    }\n\n    //GEN-LAST:event_clearURLActionPerformed\n    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_upButtonActionPerformed\n        /*\n         * Move caret to top position\n         */\n        upButton.transferFocus();\n        replayDataPane.setCaretPosition(0);\n    }\n\n    //GEN-LAST:event_upButtonActionPerformed\n    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_downButtonActionPerformed\n        /*\n         * Move caret to bottom position\n         */\n        downButton.transferFocus();\n        replayDataPane.setCaretPosition(replayDataPane.getText().length());\n    }\n\n    //GEN-LAST:event_downButtonActionPerformed\n    private void notesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_notesMenuItemActionPerformed\n        /*\n         * Show Note Dialog\n         */\n        if (notesDialog == null) {\n            // Initialize Notes dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            notesDialog = new NotesDialog(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                //SwingUtilities.invokeAndWait(new Runnable() {\n                @Override\n                public void run() {\n                    notesDialog.setVisible(true);\n                }\n            });\n        } else {\n            notesDialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_notesMenuItemActionPerformed\n    private void clearParamsActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_clearParamsActionPerformed\n        /*\n         * Clear Params (Text field)\n         */\n        paramsComboBox.setSelectedItem(\"\");\n        clearParams.transferFocus();\n    }\n\n    //GEN-LAST:event_clearParamsActionPerformed\n    private void customHeaderPanelComponentShown(java.awt.event.ComponentEvent evt) {\n        //GEN-FIRST:event_customHeaderPanelComponentShown\n        /*\n         * Write headers options to CustomHeader (TextArea)\n         */\n        initRequestHeaders();\n        customHeaders.setText(HeaderSettings.getHeaders());\n    }\n\n    //GEN-LAST:event_customHeaderPanelComponentShown\n    private void base64MenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_base64MenuItemActionPerformed\n        /*\n         * Show Base64 Dialog\n         */\n        if (base64Dialog == null) {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            base64Dialog = new Base64Transformer(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                @Override\n                public void run() {\n                    base64Dialog.setVisible(true);\n                }\n            });\n        } else {\n            base64Dialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_base64MenuItemActionPerformed\n    private void md5MenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_md5MenuItemActionPerformed\n        /*\n         * Show MD5 Dialog\n         */\n        if (md5Dialog == null) {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            md5Dialog = new MD5Dialog(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                @Override\n                public void run() {\n                    md5Dialog.setVisible(true);\n                }\n            });\n        } else {\n            md5Dialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_md5MenuItemActionPerformed\n    private void cryptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_cryptMenuItemActionPerformed\n        /*\n         * Show Crypt/DES Dialog\n         */\n        if (desDialog == null) {\n            // Initialize Options dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            desDialog = new CryptDesDialog(mainFrame, false);\n            SwingUtilities.invokeLater(new Runnable() {\n\n                //SwingUtilities.invokeAndWait(new Runnable() {\n                public void run() {\n                    desDialog.setVisible(true);\n                }\n            });\n        } else {\n            desDialog.setVisible(true);\n        }\n    }\n\n    //GEN-LAST:event_cryptMenuItemActionPerformed\n    private void clipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_clipboardButtonActionPerformed\n        String seletedText = replayDataPane.getSelectedText();\n        StringSelection stringSelection = new StringSelection(seletedText);\n        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n        clipboard.setContents(stringSelection, stringSelection);\n    }\n\n    //GEN-LAST:event_clipboardButtonActionPerformed\n    private void paramsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_paramsComboBoxActionPerformed\n        if (evt.getActionCommand().equals(\"comboBoxEdited\")) {\n            // urlCombo.hidePopup();\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(paramsComboBox)) {\n                paramsComboBox.addItem(paramsComboBox.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_paramsComboBoxActionPerformed\n    private void paramsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {\n        //GEN-FIRST:event_paramsComboBoxItemStateChanged\n        if (evt.getStateChange() == ItemEvent.SELECTED) {\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(paramsComboBox)) {\n                paramsComboBox.addItem(paramsComboBox.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_paramsComboBoxItemStateChanged\n    private void urlComboItemStateChanged(java.awt.event.ItemEvent evt) {\n        //GEN-FIRST:event_urlComboItemStateChanged\n        if (evt.getStateChange() == ItemEvent.SELECTED) {\n            SwingTools urlCheck = new SwingTools(this.getFrame());\n            if (!urlCheck.checkAddComboItem(urlCombo)) {\n                urlCombo.addItem(urlCombo.getSelectedItem());\n            }\n        }\n    }\n\n    //GEN-LAST:event_urlComboItemStateChanged\n    private void toFileButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_toFileButtonActionPerformed\n        HttpFileUtils yourChoice = new HttpFileUtils();\n        yourChoice.fillToFileField(this, this.getFrame());\n    }\n\n    //GEN-LAST:event_toFileButtonActionPerformed\n    private void loadTemplateItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_loadTemplateItemActionPerformed\n        HttpPreference myPrefs = new HttpPreference();\n        if (notesDialog != null) {\n            notesDialog.putNotes(myPrefs.loadPreference(this, this.getFrame()));\n        } else {\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            notesDialog = new NotesDialog(mainFrame, false);\n            notesDialog.putNotes(myPrefs.loadPreference(this, this.getFrame()));\n            /*SwingUtilities.invokeLater(new Runnable() {\n            //SwingUtilities.invokeAndWait(new Runnable() {\n\n            @Override\n            public void run() {\n            notesDialog.setVisible(false);\n            }\n            });*/\n        }\n    }\n\n    //GEN-LAST:event_loadTemplateItemActionPerformed\n    private void saveTemplateItemActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_saveTemplateItemActionPerformed\n        initRequestHeaders();\n        customHeaders.setText(HeaderSettings.getHeaders());\n        HttpPreference myPrefs = new HttpPreference();\n        if (notesDialog != null) {\n            myPrefs.savePreference(this, this.getFrame(), notesDialog.getNotes());\n        } else {\n            myPrefs.savePreference(this, this.getFrame(), null);\n        }\n    }\n\n    //GEN-LAST:event_saveTemplateItemActionPerformed\n    private void initRequestHeaders() {\n        if (customRefererCheckBox.isSelected()) {\n            referer = customRefererTextField.getText();\n        } else {\n            try {\n                referer = URIUtils.createURI(\"http\", targetHost, targetPort, targetPath, null, null).toString();\n            } catch (URISyntaxException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(this.getFrame()).showErrorDialog(\"Referer incorrect\", ex.getLocalizedMessage());\n            }\n        }\n        if (customCookieCheckBox.isSelected()) {\n            HeaderSettings.setCookie(customCookieTextField.getText());\n        } else {\n            HeaderSettings.clearCookie();\n        }\n        if (useCustomHeadersCheckBox.isSelected()) {\n            HeaderSettings.initHeaders(customHeaders.getText());\n        } else if (firefoxRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.FIREFOX, referer);\n        } else if (ie6RadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IE6, referer);\n        } else if (ie7RadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IE7, referer);\n        } else if (ie8RadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IE8, referer);\n        } else if (googleBotRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.GOOGLEBOT, referer);\n        } else if (msnRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.MSNBOT, referer);\n        } else if (iPhoneRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.IPHONE, referer);\n        } else if (yahooRadioButton.isSelected()) {\n            HeaderSettings.initHeaders(HeaderSettings.YAHOOBOT, referer);\n        }\n    }\n\n    private String initUrl() {\n        if (urlCombo.getSelectedItem() != null) {\n            String url = urlCombo.getSelectedItem().toString();\n            if ((url != null) && (!url.isEmpty())) {\n                String[] partsUrl = new ParamsUrlTools().splitUrl(url, this.getFrame());\n                targetHost = partsUrl[0];\n                targetPort = Integer.decode(partsUrl[1]);\n                targetPath = partsUrl[2];\n                return partsUrl[3];\n            }\n        }\n        return null;\n    }\n\n    public class ProxyAuth extends Authenticator {\n\n        private PasswordAuthentication auth;\n\n        private ProxyAuth(String user, String password) {\n            auth = new PasswordAuthentication(user, password == null ? new char[] {} : password.toCharArray());\n        }\n\n        @Override\n        protected PasswordAuthentication getPasswordAuthentication() {\n            return auth;\n        }\n    }\n\n    /**\n     * Make connection use proxy server\n     * @param HttpClient\n     */\n    void setProxy(DefaultHttpClient myClient) {\n        String textField = proxyField.getText();\n        int indexStr = textField.indexOf(\":\");\n        proxyHost = textField.substring(0, indexStr);\n        proxyPort = Integer.decode(textField.substring(indexStr + 1));\n        if (proxyHttpRadioButton.isSelected()) {\n            System.setProperty(\"socksProxySet\", \"false\");\n            HttpHost proxy = new HttpHost(proxyHost, proxyPort);\n            myClient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy);\n            //Proxy Auth\n            if (proxyAuthCheckBox.isSelected()) {\n                String username = proxyUserTextField.getText();\n                String password = String.valueOf(proxyPassPasswordField.getPassword());\n                UsernamePasswordCredentials creds = new UsernamePasswordCredentials(username, password);\n                myClient.getCredentialsProvider().setCredentials(new AuthScope(proxyHost, proxyPort), creds);\n            }\n        } else if (proxySocksRadioButton.isSelected()) {\n            /*System.out.println(\"User =\" + System.getProperty(\"java.net.socks.username\"));\n            System.out.println(\"Pass =\" + System.getProperty(\"java.net.socks.password\"));*/\n            System.setProperty(\"socksProxySet\", \"true\");\n            System.setProperty(\"socksProxyHost\", proxyHost);\n            System.setProperty(\"socksProxyPort\", Integer.toString(proxyPort));\n            String username = proxyUserTextField.getText();\n            String password = String.valueOf(proxyPassPasswordField.getPassword());\n            Authenticator.setDefault(new ProxyAuth(username, password));\n            /*System.getProperties().put(\"socksProxyHost\", proxyHost);\n            System.out.println(\"User =\"+System.getProperty(\"java.net.socks.username\"));\n            System.out.println(\"Pass =\"+System.getProperty(\"java.net.socks.password\"));*/\n        }\n    }\n\n    void showIntelSaveDialog(String message) {\n        /*\n         * Show intelligence save dialog\n         */\n        if (intelSaveDialog == null) {\n            // Initialize Options dialog\n            JFrame mainFrame = HttpAnalyzerApp.getApplication().getMainFrame();\n            intelSaveDialog = new IntelSaveDialog(mainFrame, true);\n            IntelSaveDialog.setMessage(message);\n            try {\n                SwingUtilities.invokeAndWait(new Runnable() {\n\n                    @Override\n                    public void run() {\n                        intelSaveDialog.setVisible(true);\n                    }\n                });\n            } catch (InterruptedException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n            } catch (InvocationTargetException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n            }\n        } else {\n            IntelSaveDialog.setMessage(message);\n            intelSaveDialog.setVisible(true);\n        }\n    }\n\n    @Action\n    public Task RequestRun() {\n        return new RequestRunTask(getApplication());\n    }\n\n    private class RequestRunTask extends org.jdesktop.application.Task<Object, Void> {\n\n        RequestRunTask(org.jdesktop.application.Application app) {\n            // Runs on the EDT.  Copy GUI state that\n            // doInBackground() depends on from parameters\n            // to RequestRunTask fields, here.\n            super(app);\n        }\n\n        @Override\n        protected Object doInBackground() {\n            // Your Task's code here.  This method runs\n            // on a background thread, so don't reference\n            // the Swing GUI from here.\n            // Check URL\n            String workURL = initUrl();\n            if (workURL == null) {\n                return null;\n            }\n            setProgress(0, 0, 100);\n            // Prepare HTTP method\n            HttpParams httpParams = new BasicHttpParams();\n            InitBasicParams myInitParams = new InitBasicParams();\n            myInitParams.initHttpParams(httpParams, HttpAnalyzerView.this);\n            initRequestHeaders();\n            DefaultHttpClient httpClient = new DefaultHttpClient(httpParams);\n            setProxy(httpClient);\n            SwingTools swingTool = new SwingTools(HttpAnalyzerView.this, HttpAnalyzerApp.getApplication().getMainFrame());\n            swingTool.setColorTextDoc(new Date() + \"\\n\", swingTool.DATE_COLOR, true);\n            if (!mergeInfoCheckBox.isSelected()) {\n                swingTool.setColorTextDoc(new Date() + \"\\n\", swingTool.DATE_COLOR, false);\n            }\n            setMessage(\"Connect to \" + targetHost);\n            goButton.setEnabled(false);\n            // HTTP Auth\n            if (httpAuthCheckBox.isSelected()) {\n                String username = httpUserTextField.getText();\n                String password = String.valueOf(httpPassPasswordField.getPassword());\n                UsernamePasswordCredentials creds = new UsernamePasswordCredentials(username, password);\n                httpClient.getCredentialsProvider().setCredentials(AuthScope.ANY, creds);\n            }\n            try {\n                if (getRadio.isSelected()) {\n                    /*\n                     * GET Request section\n                     */\n                    List<NameValuePair> qparams = null;\n                    URI uri = null;\n                    if (!paramsComboBox.getSelectedItem().toString().isEmpty()) {\n                        qparams = new ParamsUrlTools().getPairParams(paramsComboBox.getSelectedItem().toString());\n                        //qparams = RequestParamsDialog.getRequestParams();\n                        try {\n                            uri = URIUtils.createURI(\"http\", targetHost, targetPort, targetPath, URLEncodedUtils.format(qparams, \"UTF-8\"), null);\n                        } catch (URISyntaxException ex) {\n                            Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                    } else {\n                        try {\n                            uri = URIUtils.createURI(\"http\", targetHost, targetPort, targetPath, null, null);\n                        } catch (URISyntaxException ex) {\n                            Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                    }\n                    // HttpGet httpGet = new HttpGet(workURL);\n                    HttpGet httpGet = new HttpGet(uri);\n                    if (useCustomHeadersCheckBox.isSelected()) {\n                        System.out.println(\"Headers:\\n\");\n                    }\n                    httpGet.setHeaders(HeaderSettings.setHeaders());\n                    // Show request\n                    swingTool.spliterOut();\n                    String getRequest = httpGet.getMethod() + \" \" + httpGet.getURI() + \"\\n\";\n                    swingTool.setColorTextDoc(getRequest, swingTool.REQUEST_COLOR, true);\n                    if (!mergeInfoCheckBox.isSelected()) {\n                        swingTool.setColorTextDoc(getRequest, swingTool.REQUEST_COLOR, false);\n                    }\n                    swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpGet), swingTool.REQUEST_COLOR, false);\n                    // Response header\n                    setMessage(\"GET request to \" + targetHost);\n                    httpResponse = httpClient.execute(httpGet);\n                    setProgress(30, 0, 100);\n                } else if (postRadio.isSelected()) {\n                    /*\n                     * POST Request section\n                     */\n                    HttpPost httpPost = new HttpPost(workURL);\n                    httpPost.setHeaders(HeaderSettings.setHeaders());\n                    if (!paramsComboBox.getSelectedItem().toString().isEmpty()) {\n                        ByteArrayEntity postEntityParams = null;\n                        byte[] params = paramsComboBox.getSelectedItem().toString().getBytes();\n                        postEntityParams = new ByteArrayEntity(params);\n                        postEntityParams.setContentType(\"application/x-www-form-urlencoded\");\n                        postEntityParams.setChunked(false);\n                        httpPost.setEntity(postEntityParams);\n                    }\n                    // Show request\n                    swingTool.spliterOut();\n                    String postRequest = httpPost.getMethod() + \" \" + httpPost.getURI() + \"\\n\";\n                    swingTool.setColorTextDoc(postRequest, swingTool.REQUEST_COLOR, true);\n                    if (!mergeInfoCheckBox.isSelected()) {\n                        swingTool.setColorTextDoc(postRequest, swingTool.REQUEST_COLOR, false);\n                    }\n                    swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpPost), swingTool.REQUEST_COLOR, false);\n                    //spliterOut();\n                    //spliterOut();\n                    setMessage(\"POST request to \" + targetHost);\n                    httpResponse = httpClient.execute(httpPost);\n                    setProgress(30, 0, 100);\n                } else if (headRadio.isSelected()) {\n                    /*\n                     * HEAD Request section\n                     */\n                    HttpHead httpHead = new HttpHead(workURL);\n                    httpHead.setHeaders(HeaderSettings.setHeaders());\n                    // Show request\n                    swingTool.spliterOut();\n                    String headRequest = httpHead.getMethod() + \" \" + httpHead.getURI() + \"\\n\";\n                    swingTool.setColorTextDoc(headRequest, swingTool.REQUEST_COLOR, true);\n                    if (!mergeInfoCheckBox.isSelected()) {\n                        swingTool.setColorTextDoc(headRequest, swingTool.REQUEST_COLOR, false);\n                    }\n                    //spliterOut();\n                    //spliterOut();\n                    swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpHead), swingTool.REQUEST_COLOR, false);\n                    //spliterOut();\n                    setMessage(\"HEAD request to \" + targetHost);\n                    httpResponse = httpClient.execute(httpHead);\n                    setProgress(30, 0, 100);\n                }\n                setMessage(\"Wait answer ... \");\n                swingTool.setColorTextDoc(httpResponse.getStatusLine().toString() + \"\\n\", swingTool.RESPONSE_COLOR, true);\n                swingTool.setColorTextDoc(HeaderSettings.showHeaders(httpResponse.getAllHeaders()) + \"\\n\", swingTool.REQUEST_COLOR, true);\n                HttpEntity entity = httpResponse.getEntity();\n                swingTool.spliterOut();\n                setProgress(50, 0, 100);\n                // Response entity\n                swingTool.spliterOut();\n                if (entity != null) {\n                    if (intelSaveCheckBox.isSelected()) {\n                        // Intelligence mode is ON\n                        setProgress(80, 0, 100);\n                        String contentType = entity.getContentType().getValue();\n                        if (!contentType.startsWith(\"text/htm\")) {\n                            // Binary content\n                            long sizeEntity = entity.getContentLength();\n                            String message = contentType + \". Size is \" + sizeEntity + \" bytes.\";\n                            showIntelSaveDialog(message);\n                            int status = IntelSaveDialog.getStatus();\n                            if (status == 2) {\n                                String filename = IntelSaveDialog.getFilename();\n                                HttpFileUtils myUtils = new HttpFileUtils();\n                                long size = myUtils.saveEntity(entity, filename);\n                                swingTool.setColorTextDoc(\"Save \" + size + \" bytes into \" + filename + \"\\n\", swingTool.DATE_COLOR, true);\n                            } else if (status == 1) {\n                                swingTool.showEntity(entity);\n                            } else {\n                                swingTool.setColorTextDoc(\"Entity is ignored\\n\", swingTool.DATE_COLOR, true);\n                            }\n                            System.out.println(\"Status =\" + IntelSaveDialog.getStatus());\n                        } else {\n                            swingTool.showEntity(entity);\n                        }\n                    } else if ((toFileCheckBox.isSelected()) && (!toFileTextField.getText().isEmpty())) {\n                        setProgress(80, 0, 100);\n                        String filename = toFileTextField.getText();\n                        HttpFileUtils myUtils = new HttpFileUtils();\n                        System.out.println(\"Base Entity =\" + entity.getContentLength());\n                        long size = myUtils.saveEntity(entity, filename);\n                        swingTool.setColorTextDoc(\"Save \" + size + \" bytes into \" + filename + \"\\n\", swingTool.DATE_COLOR, true);\n                    } else {\n                        setProgress(80, 0, 100);\n                        swingTool.showEntity(entity);\n                    }\n                    swingTool.spliterOut();\n                } else {\n                    swingTool.setColorTextDoc(\"Entity is NULL\\n\", swingTool.DATE_COLOR, true);\n                }\n                setProgress(100, 0, 100);\n                replayDataPane.setCaretPosition(replayDataPane.getText().length());\n                setMessage(\"Done.\");\n            } catch (IOException ex) {\n                Logger.getLogger(HttpAnalyzerView.class.getName()).log(Level.SEVERE, null, ex);\n                new SwingTools(HttpAnalyzerApp.getApplication().getMainFrame()).showErrorDialog(\"IO Error\", ex.toString());\n                setMessage(\"<html><font color=#CC0000>Error!</font></html>\");\n            } finally {\n                goButton.setEnabled(true);\n                // When HttpClient instance is no longer needed,\n                // shut down the connection manager to ensure\n                // immediate deallocation of all system resources\n                httpClient.getConnectionManager().shutdown();\n            }\n            // return your result\n            return null;\n        }\n\n        @Override\n        protected void succeeded(Object result) {\n            // Runs on the EDT.  Update the GUI based on\n            // the result computed by doInBackground().\n        }\n    }\n\n    @Action\n    public Task ClearDataPanel() {\n        return new ClearDataPanelTask(getApplication());\n    }\n\n    private class ClearDataPanelTask extends org.jdesktop.application.Task<Object, Void> {\n\n        ClearDataPanelTask(org.jdesktop.application.Application app) {\n            // Runs on the EDT.  Copy GUI state that\n            // doInBackground() depends on from parameters\n            // to ClearDataPanelTask fields, here.\n            super(app);\n            replayDataPane.setText(null);\n            replayDataPane.requestFocus();\n        }\n\n        @Override\n        protected Object doInBackground() {\n            // Your Task's code here.  This method runs\n            // on a background thread, so don't reference\n            // the Swing GUI from here.\n            // return your result\n            return null;\n        }\n\n        @Override\n        protected void succeeded(Object result) {\n            // Runs on the EDT.  Update the GUI based on\n            // the result computed by doInBackground().\n        }\n    }\n\n    @Action\n    public void fileChoose() {\n        HttpFileUtils infoSaver = new HttpFileUtils();\n        infoSaver.saveSessionInfo(this, this.getFrame());\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JLabel agentsLabel;\n\n    private javax.swing.JSeparator agentsSeparator;\n\n    private javax.swing.JMenuItem base64MenuItem;\n\n    private javax.swing.JPanel basicHeadersPanel;\n\n    private javax.swing.JButton clearButton;\n\n    private javax.swing.JMenuItem clearMenuItem1;\n\n    private javax.swing.JButton clearParams;\n\n    private javax.swing.JButton clearURL;\n\n    private javax.swing.JButton clipboardButton;\n\n    private javax.swing.JMenuItem cryptMenuItem;\n\n    public javax.swing.JCheckBox customCookieCheckBox;\n\n    public javax.swing.JTextField customCookieTextField;\n\n    private javax.swing.JPanel customHeaderPanel;\n\n    public javax.swing.JTextArea customHeaders;\n\n    private javax.swing.JScrollPane customHeadersScrollPane;\n\n    public javax.swing.JCheckBox customRefererCheckBox;\n\n    public javax.swing.JTextField customRefererTextField;\n\n    public javax.swing.JTextPane debugDataPane;\n\n    private javax.swing.JScrollPane debugDataScrollPane;\n\n    private javax.swing.JPanel debugPanel;\n\n    private javax.swing.JButton downButton;\n\n    private javax.swing.JPopupMenu.Separator filesSeparator1;\n\n    private javax.swing.JPopupMenu.Separator filesSeparator2;\n\n    public javax.swing.JRadioButton firefoxRadioButton;\n\n    public javax.swing.JRadioButton getRadio;\n\n    private javax.swing.JButton goButton;\n\n    public javax.swing.JRadioButton googleBotRadioButton;\n\n    public javax.swing.JRadioButton headRadio;\n\n    public javax.swing.JCheckBox httpAuthCheckBox;\n\n    private javax.swing.JPanel httpOptionsPanel;\n\n    private javax.swing.JLabel httpPassLabel;\n\n    public javax.swing.JPasswordField httpPassPasswordField;\n\n    private javax.swing.JLabel httpUserLabel;\n\n    public javax.swing.JTextField httpUserTextField;\n\n    private javax.swing.JLabel httpVerLabel;\n\n    public javax.swing.JComboBox httpVersionComboBox;\n\n    public javax.swing.JRadioButton iPhoneRadioButton;\n\n    public javax.swing.JRadioButton ie6RadioButton;\n\n    public javax.swing.JRadioButton ie7RadioButton;\n\n    public javax.swing.JRadioButton ie8RadioButton;\n\n    public javax.swing.JCheckBox intelSaveCheckBox;\n\n    private javax.swing.JMenuItem loadTemplateItem;\n\n    private javax.swing.JMenuBar mainMenuBar;\n\n    private javax.swing.JPanel mainPanel;\n\n    private javax.swing.JSeparator mainSeparator;\n\n    private javax.swing.JTabbedPane mainTabbedPane;\n\n    private javax.swing.JMenuItem md5MenuItem;\n\n    public javax.swing.JCheckBoxMenuItem mergeInfoCheckBox;\n\n    private javax.swing.ButtonGroup methodGroups;\n\n    private javax.swing.JPanel methodPanel;\n\n    public javax.swing.JRadioButton msnRadioButton;\n\n    private javax.swing.JMenuItem notesMenuItem;\n\n    private javax.swing.JMenu optionsMenu;\n\n    private javax.swing.JPanel optionsPanel;\n\n    private javax.swing.JButton paramsButton;\n\n    public javax.swing.JComboBox paramsComboBox;\n\n    private javax.swing.JLabel paramsLabel;\n\n    public javax.swing.JRadioButton postRadio;\n\n    private javax.swing.JProgressBar progressBar;\n\n    public javax.swing.JCheckBox proxyAuthCheckBox;\n\n    public javax.swing.JTextField proxyField;\n\n    private javax.swing.JLabel proxyHostLabel;\n\n    public javax.swing.JRadioButton proxyHttpRadioButton;\n\n    public javax.swing.JRadioButton proxyNoneRadioButton;\n\n    private javax.swing.JLabel proxyPassLabel;\n\n    public javax.swing.JPasswordField proxyPassPasswordField;\n\n    private javax.swing.JPanel proxySetsPanel;\n\n    public javax.swing.JRadioButton proxySocksRadioButton;\n\n    private javax.swing.ButtonGroup proxyTypesGroup;\n\n    private javax.swing.JPanel proxyTypesPanel;\n\n    private javax.swing.JLabel proxyUserLabel;\n\n    public javax.swing.JTextField proxyUserTextField;\n\n    public javax.swing.JTextPane replayDataPane;\n\n    private javax.swing.JScrollPane replayDataScrollPane;\n\n    private javax.swing.JButton saveButton;\n\n    private javax.swing.JMenuItem saveMenuItem;\n\n    private javax.swing.JMenuItem saveTemplateItem;\n\n    private javax.swing.JLabel statusAnimationLabel;\n\n    private javax.swing.JLabel statusMessageLabel;\n\n    private javax.swing.JPanel statusPanel;\n\n    private javax.swing.JButton toFileButton;\n\n    public javax.swing.JCheckBox toFileCheckBox;\n\n    public javax.swing.JTextField toFileTextField;\n\n    private javax.swing.JMenu toolsMenu;\n\n    private javax.swing.JPopupMenu.Separator toolsSeparator;\n\n    private javax.swing.JPopupMenu.Separator toolsSeparator2;\n\n    private javax.swing.JButton upButton;\n\n    public javax.swing.JComboBox urlCombo;\n\n    private javax.swing.JLabel urlLabel;\n\n    public javax.swing.JCheckBox useCustomHeadersCheckBox;\n\n    private javax.swing.ButtonGroup userAgentsGroup;\n\n    public javax.swing.JRadioButton yahooRadioButton;\n\n    private org.jdesktop.beansbinding.BindingGroup bindingGroup;\n\n    // End of variables declaration//GEN-END:variables\n    private final Timer messageTimer;\n\n    private final Timer busyIconTimer;\n\n    private final Icon idleIcon;\n\n    private final Icon[] busyIcons = new Icon[15];\n\n    private int busyIconIndex = 0;\n\n    private JDialog aboutBox;\n\n    private RequestParamsDialog requestParams;\n\n    private NotesDialog notesDialog;\n\n    private Base64Transformer base64Dialog;\n\n    private MD5Dialog md5Dialog;\n\n    private CryptDesDialog desDialog;\n\n    private IntelSaveDialog intelSaveDialog;\n}\n",
    "test_prompt": "// HttpAnalyzerViewTest1.java\npackage httpanalyzer;\n\nimport java.awt.Toolkit;\nimport java.awt.datatransfer.Clipboard;\nimport java.awt.datatransfer.StringSelection;\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.jdesktop.application.Action;\nimport org.jdesktop.application.ResourceMap;\nimport org.jdesktop.application.SingleFrameApplication;\nimport org.jdesktop.application.FrameView;\nimport org.jdesktop.application.TaskMonitor;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.net.Authenticator;\nimport java.net.PasswordAuthentication;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.util.Date;\nimport java.util.List;\nimport javax.swing.Timer;\nimport javax.swing.Icon;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.SwingUtilities;\nimport org.apache.http.*;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.auth.AuthScope;\nimport org.apache.http.auth.UsernamePasswordCredentials;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.methods.HttpHead;\nimport org.apache.http.client.utils.URIUtils;\nimport org.apache.http.client.utils.URLEncodedUtils;\nimport org.apache.http.conn.params.ConnRoutePNames;\nimport org.apache.http.entity.ByteArrayEntity;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.params.BasicHttpParams;\nimport org.apache.http.params.HttpParams;\nimport org.jdesktop.application.Task;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HttpAnalyzerView}.\n* It contains ten unit test cases for the {@link HttpAnalyzerView#ClearDataPanel()} method.\n*/\nclass HttpAnalyzerViewTest1 {"
},
{
    "id": "cmpl-6qbcpvSEfkSiwpzxONXi8RRS3i8qg",
    "object": "text_completion",
    "created": 1677995707,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 0.\n\t */\n\t@Test\n\tvoid testGetStatus0() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(0, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 1.\n\t */\n\t@Test\n\tvoid testGetStatus1() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(1, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 2.\n\t */\n\t@Test\n\tvoid testGetStatus2() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(2, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 0.\n\t */\n\t@Test\n\tvoid testGetStatus3() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(0, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 1.\n\t */\n\t@Test\n\tvoid testGetStatus4() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(1, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 2.\n\t */\n\t@Test\n\tvoid testGetStatus5() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(2, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 0.\n\t */\n\t@Test\n\tvoid testGetStatus6() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(0, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 1.\n\t */\n\t@Test\n\tvoid testGetStatus7() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(1, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 2.\n\t */\n\t@Test\n\tvoid testGetStatus8() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(2, dialog.getStatus());\n\t}\n\t\n\t/**\n\t * Test case for {@link IntelSaveDialog#getStatus()} method.\n\t * <p>\n\t * Test case for checking the status of the dialog.\n\t * <p>\n\t * Expected result: status is 0.\n\t */\n\t@Test\n\tvoid testGetStatus9() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertEquals(0, dialog.getStatus());\n\t}\n}",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 3275,
        "completion_tokens": 1940,
        "total_tokens": 5215
    },
    "time_taken": 66.40869688987732,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/IntelSaveDialogTest0.java",
    "original_code": "// IntelSaveDialog.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n/*\n * IntelSaveDialog.java\n *\n * Created on 31.03.2010, 13:51:12\n */\npackage httpanalyzer;\n\nimport javax.swing.JFileChooser;\n\n/**\n * @author vlad\n */\npublic class IntelSaveDialog extends javax.swing.JDialog {\n\n    static final String DESCRIPTION_1 = \"<html>Content type is \";\n\n    static final String DESCRIPTION_2 = \"What would you like to do with it?</html>\";\n\n    // 0 - nothing, 1 - show, 2 - write\n    static int status;\n\n    static String fileName;\n\n    /**\n     * Creates new form IntelSaveDialog\n     */\n    public IntelSaveDialog(java.awt.Frame parent, boolean modal) {\n        super(parent, modal);\n        initComponents();\n    }\n\n    /**\n     * Get message and set it\n     * for showing in Dialog\n     * @param message\n     */\n    public static void setMessage(String message) {\n        StringBuffer strBuf = new StringBuffer();\n        strBuf.append(DESCRIPTION_1);\n        strBuf.append(\"\\\"\");\n        strBuf.append(message);\n        strBuf.append(\"\\\"<br>\");\n        strBuf.append(DESCRIPTION_2);\n        description.setText(strBuf.toString());\n    }\n\n    public static int getStatus() {\n        return status;\n    }\n\n    public static String getFilename() {\n        return fileName;\n    }\n\n    /**\n     * This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    void initComponents() {\n        iconLabel = new javax.swing.JLabel();\n        javax.swing.JLabel warnTitleLabel = new javax.swing.JLabel();\n        description = new javax.swing.JLabel();\n        saveToButton = new javax.swing.JButton();\n        displayButton = new javax.swing.JButton();\n        cancelButton = new javax.swing.JButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(IntelSaveDialog.class);\n        // NOI18N\n        setTitle(resourceMap.getString(\"Form.title\"));\n        // NOI18N\n        setName(\"Form\");\n        // NOI18N\n        iconLabel.setIcon(resourceMap.getIcon(\"iconLabel.icon\"));\n        // NOI18N\n        iconLabel.setText(resourceMap.getString(\"iconLabel.text\"));\n        iconLabel.setMaximumSize(new java.awt.Dimension(128, 128));\n        // NOI18N\n        iconLabel.setName(\"iconLabel\");\n        warnTitleLabel.setFont(warnTitleLabel.getFont().deriveFont(warnTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, warnTitleLabel.getFont().getSize() + 4));\n        // NOI18N\n        warnTitleLabel.setText(resourceMap.getString(\"warnTitleLabel.text\"));\n        // NOI18N\n        warnTitleLabel.setName(\"warnTitleLabel\");\n        // NOI18N\n        description.setFont(resourceMap.getFont(\"description.font\"));\n        // NOI18N\n        description.setText(resourceMap.getString(\"description.text\"));\n        // NOI18N\n        description.setName(\"description\");\n        // NOI18N\n        saveToButton.setFont(resourceMap.getFont(\"saveToButton.font\"));\n        // NOI18N\n        saveToButton.setIcon(resourceMap.getIcon(\"saveToButton.icon\"));\n        // NOI18N\n        saveToButton.setText(resourceMap.getString(\"saveToButton.text\"));\n        // NOI18N\n        saveToButton.setName(\"saveToButton\");\n        saveToButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                saveToButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        displayButton.setFont(resourceMap.getFont(\"displayButton.font\"));\n        // NOI18N\n        displayButton.setIcon(resourceMap.getIcon(\"displayButton.icon\"));\n        // NOI18N\n        displayButton.setText(resourceMap.getString(\"displayButton.text\"));\n        // NOI18N\n        displayButton.setToolTipText(resourceMap.getString(\"displayButton.toolTipText\"));\n        // NOI18N\n        displayButton.setName(\"displayButton\");\n        displayButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                displayButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        cancelButton.setFont(resourceMap.getFont(\"cancelButton.font\"));\n        // NOI18N\n        cancelButton.setIcon(resourceMap.getIcon(\"cancelButton.icon\"));\n        // NOI18N\n        cancelButton.setText(resourceMap.getString(\"cancelButton.text\"));\n        // NOI18N\n        cancelButton.setToolTipText(resourceMap.getString(\"cancelButton.toolTipText\"));\n        // NOI18N\n        cancelButton.setName(\"cancelButton\");\n        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cancelButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        jSeparator1.setName(\"jSeparator1\");\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(13, 13, 13).addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE).addComponent(warnTitleLabel))).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(saveToButton).addGap(53, 53, 53).addComponent(displayButton).addGap(18, 18, 18).addComponent(cancelButton))).addContainerGap()));\n        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(layout.createSequentialGroup().addComponent(warnTitleLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(saveToButton).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(displayButton).addComponent(cancelButton))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        pack();\n    }\n\n    // </editor-fold>//GEN-END:initComponents\n    private void saveToButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_saveToButtonActionPerformed\n        // TODO add your handling code here:\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save content\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        int returnVal = fileChooser.showSaveDialog(this);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            fileName = fileChooser.getSelectedFile().toString();\n            status = 2;\n            setVisible(false);\n        }\n    }\n\n    //GEN-LAST:event_saveToButtonActionPerformed\n    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_cancelButtonActionPerformed\n        status = 0;\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_cancelButtonActionPerformed\n    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_displayButtonActionPerformed\n        status = 1;\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_displayButtonActionPerformed\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        java.awt.EventQueue.invokeLater(new Runnable() {\n\n            public void run() {\n                IntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n                dialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\n                    public void windowClosing(java.awt.event.WindowEvent e) {\n                        System.exit(0);\n                    }\n                });\n                dialog.setVisible(true);\n            }\n        });\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton cancelButton;\n\n    private static javax.swing.JLabel description;\n\n    private javax.swing.JButton displayButton;\n\n    private javax.swing.JLabel iconLabel;\n\n    private javax.swing.JSeparator jSeparator1;\n\n    private javax.swing.JButton saveToButton;\n    // End of variables declaration//GEN-END:variables\n}\n",
    "test_prompt": "// IntelSaveDialogTest0.java\n/*\n * IntelSaveDialog.java\n *\n * Created on 31.03.2010, 13:51:12\n */\npackage httpanalyzer;\n\nimport javax.swing.JFileChooser;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link IntelSaveDialog}.\n* It contains ten unit test cases for the {@link IntelSaveDialog#getStatus()} method.\n*/\nclass IntelSaveDialogTest0 {"
},
{
    "id": "cmpl-6qbduVkM7xzBNMeDYOQkSOmKXOKCq",
    "object": "text_completion",
    "created": 1677995774,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t * Test case 1 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 1 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Cancel\" button.\n\t */\n\t@Test\n\tvoid testGetFilename1() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 2 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 2 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Display\" button.\n\t */\n\t@Test\n\tvoid testGetFilename2() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 3 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 3 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Cancel\" button.\n\t */\n\t@Test\n\tvoid testGetFilename3() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 4 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 4 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Display\" button.\n\t */\n\t@Test\n\tvoid testGetFilename4() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 5 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 5 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Save to\" button.\n\t */\n\t@Test\n\tvoid testGetFilename5() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 6 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 6 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Cancel\" button.\n\t */\n\t@Test\n\tvoid testGetFilename6() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 7 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 7 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Display\" button.\n\t */\n\t@Test\n\tvoid testGetFilename7() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 8 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 8 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Save to\" button.\n\t */\n\t@Test\n\tvoid testGetFilename8() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tdialog.setVisible(true);\n\t\tassertNull(IntelSaveDialog.getFilename());\n\t}\n\t\n\t/**\n\t * Test case 9 for {@link IntelSaveDialog#getFilename()} method.\n\t * <p>\n\t * Test case 9 checks the {@link IntelSaveDialog#getFilename()} method\n\t * for the following condition:\n\t * <p>\n\t * {@link IntelSaveDialog#getFilename()} method returns null\n\t * if the user clicks the \"Save to\" button and then clicks the \"Cancel\" button.\n\t */\n\t@Test\n\tvoid testGetFilename9() {\n\t\tIntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n\t\tdialog.addWindowListener(new java.awt.event.WindowAdapter()",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 3275,
        "completion_tokens": 2048,
        "total_tokens": 5323
    },
    "time_taken": 85.60618901252747,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/IntelSaveDialogTest1.java",
    "original_code": "// IntelSaveDialog.java\n/*\n * GNU GENERAL PUBLIC LICENSE\n * Version 3, 29 June 2007\n * \n * Copyright (C) 2010, vlad\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n/*\n * IntelSaveDialog.java\n *\n * Created on 31.03.2010, 13:51:12\n */\npackage httpanalyzer;\n\nimport javax.swing.JFileChooser;\n\n/**\n * @author vlad\n */\npublic class IntelSaveDialog extends javax.swing.JDialog {\n\n    static final String DESCRIPTION_1 = \"<html>Content type is \";\n\n    static final String DESCRIPTION_2 = \"What would you like to do with it?</html>\";\n\n    // 0 - nothing, 1 - show, 2 - write\n    static int status;\n\n    static String fileName;\n\n    /**\n     * Creates new form IntelSaveDialog\n     */\n    public IntelSaveDialog(java.awt.Frame parent, boolean modal) {\n        super(parent, modal);\n        initComponents();\n    }\n\n    /**\n     * Get message and set it\n     * for showing in Dialog\n     * @param message\n     */\n    public static void setMessage(String message) {\n        StringBuffer strBuf = new StringBuffer();\n        strBuf.append(DESCRIPTION_1);\n        strBuf.append(\"\\\"\");\n        strBuf.append(message);\n        strBuf.append(\"\\\"<br>\");\n        strBuf.append(DESCRIPTION_2);\n        description.setText(strBuf.toString());\n    }\n\n    public static int getStatus() {\n        return status;\n    }\n\n    public static String getFilename() {\n        return fileName;\n    }\n\n    /**\n     * This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    void initComponents() {\n        iconLabel = new javax.swing.JLabel();\n        javax.swing.JLabel warnTitleLabel = new javax.swing.JLabel();\n        description = new javax.swing.JLabel();\n        saveToButton = new javax.swing.JButton();\n        displayButton = new javax.swing.JButton();\n        cancelButton = new javax.swing.JButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpanalyzer.HttpAnalyzerApp.class).getContext().getResourceMap(IntelSaveDialog.class);\n        // NOI18N\n        setTitle(resourceMap.getString(\"Form.title\"));\n        // NOI18N\n        setName(\"Form\");\n        // NOI18N\n        iconLabel.setIcon(resourceMap.getIcon(\"iconLabel.icon\"));\n        // NOI18N\n        iconLabel.setText(resourceMap.getString(\"iconLabel.text\"));\n        iconLabel.setMaximumSize(new java.awt.Dimension(128, 128));\n        // NOI18N\n        iconLabel.setName(\"iconLabel\");\n        warnTitleLabel.setFont(warnTitleLabel.getFont().deriveFont(warnTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, warnTitleLabel.getFont().getSize() + 4));\n        // NOI18N\n        warnTitleLabel.setText(resourceMap.getString(\"warnTitleLabel.text\"));\n        // NOI18N\n        warnTitleLabel.setName(\"warnTitleLabel\");\n        // NOI18N\n        description.setFont(resourceMap.getFont(\"description.font\"));\n        // NOI18N\n        description.setText(resourceMap.getString(\"description.text\"));\n        // NOI18N\n        description.setName(\"description\");\n        // NOI18N\n        saveToButton.setFont(resourceMap.getFont(\"saveToButton.font\"));\n        // NOI18N\n        saveToButton.setIcon(resourceMap.getIcon(\"saveToButton.icon\"));\n        // NOI18N\n        saveToButton.setText(resourceMap.getString(\"saveToButton.text\"));\n        // NOI18N\n        saveToButton.setName(\"saveToButton\");\n        saveToButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                saveToButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        displayButton.setFont(resourceMap.getFont(\"displayButton.font\"));\n        // NOI18N\n        displayButton.setIcon(resourceMap.getIcon(\"displayButton.icon\"));\n        // NOI18N\n        displayButton.setText(resourceMap.getString(\"displayButton.text\"));\n        // NOI18N\n        displayButton.setToolTipText(resourceMap.getString(\"displayButton.toolTipText\"));\n        // NOI18N\n        displayButton.setName(\"displayButton\");\n        displayButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                displayButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        cancelButton.setFont(resourceMap.getFont(\"cancelButton.font\"));\n        // NOI18N\n        cancelButton.setIcon(resourceMap.getIcon(\"cancelButton.icon\"));\n        // NOI18N\n        cancelButton.setText(resourceMap.getString(\"cancelButton.text\"));\n        // NOI18N\n        cancelButton.setToolTipText(resourceMap.getString(\"cancelButton.toolTipText\"));\n        // NOI18N\n        cancelButton.setName(\"cancelButton\");\n        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                cancelButtonActionPerformed(evt);\n            }\n        });\n        // NOI18N\n        jSeparator1.setName(\"jSeparator1\");\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(13, 13, 13).addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE).addComponent(warnTitleLabel))).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(saveToButton).addGap(53, 53, 53).addComponent(displayButton).addGap(18, 18, 18).addComponent(cancelButton))).addContainerGap()));\n        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(layout.createSequentialGroup().addComponent(warnTitleLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(saveToButton).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(displayButton).addComponent(cancelButton))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));\n        pack();\n    }\n\n    // </editor-fold>//GEN-END:initComponents\n    private void saveToButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_saveToButtonActionPerformed\n        // TODO add your handling code here:\n        //Create a file chooser\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Save content\");\n        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);\n        int returnVal = fileChooser.showSaveDialog(this);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            fileName = fileChooser.getSelectedFile().toString();\n            status = 2;\n            setVisible(false);\n        }\n    }\n\n    //GEN-LAST:event_saveToButtonActionPerformed\n    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_cancelButtonActionPerformed\n        status = 0;\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_cancelButtonActionPerformed\n    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {\n        //GEN-FIRST:event_displayButtonActionPerformed\n        status = 1;\n        setVisible(false);\n    }\n\n    //GEN-LAST:event_displayButtonActionPerformed\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        java.awt.EventQueue.invokeLater(new Runnable() {\n\n            public void run() {\n                IntelSaveDialog dialog = new IntelSaveDialog(new javax.swing.JFrame(), true);\n                dialog.addWindowListener(new java.awt.event.WindowAdapter() {\n\n                    public void windowClosing(java.awt.event.WindowEvent e) {\n                        System.exit(0);\n                    }\n                });\n                dialog.setVisible(true);\n            }\n        });\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton cancelButton;\n\n    private static javax.swing.JLabel description;\n\n    private javax.swing.JButton displayButton;\n\n    private javax.swing.JLabel iconLabel;\n\n    private javax.swing.JSeparator jSeparator1;\n\n    private javax.swing.JButton saveToButton;\n    // End of variables declaration//GEN-END:variables\n}\n",
    "test_prompt": "// IntelSaveDialogTest1.java\n/*\n * IntelSaveDialog.java\n *\n * Created on 31.03.2010, 13:51:12\n */\npackage httpanalyzer;\n\nimport javax.swing.JFileChooser;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link IntelSaveDialog}.\n* It contains ten unit test cases for the {@link IntelSaveDialog#getFilename()} method.\n*/\nclass IntelSaveDialogTest1 {"
},
{
    "id": "cmpl-6qbfH23rCSPTxvnqwG2QL6iUyW8ee",
    "object": "text_completion",
    "created": 1677995859,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt0() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt1() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt2() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt3() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt4() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt5() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt6() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt7() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt8() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt9() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n}\n\n// PasswordTest1.java\npackage httpanalyzer;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Password}.\n* It contains ten unit test cases for the {@link Password#crypt(String, String)} method.\n*/\nclass PasswordTest1 {\n\t\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt0() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt1() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt2() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt3() {\n\t\tString password = \"password\";\n\t\tString salt = \"salt\";\n\t\tString expected = \"saltpassword\";\n\t\tString actual = Password.crypt(password, salt);\n\t\tassertEquals(expected, actual);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#crypt(String, String)} method.\n\t* It tests the case when the password is \"password\" and the salt is \"salt\".\n\t* The expected result is \"saltpassword\".\n\t*/\n\t@Test\n\tvoid testCrypt4() {\n\t\tString",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 4253,
        "completion_tokens": 2048,
        "total_tokens": 6301
    },
    "time_taken": 41.48753309249878,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/PasswordTest0.java",
    "original_code": "// Password.java\npackage httpanalyzer;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * @author David Scott\n */\npublic class Password {\n\n    /**\n     * \tPassword is a class to implement password encryption as used\n     * \ton Unix systems. It is compatible with the crypt(3c) system function.\n     * \tThis version is a based on the DES encryption algorithm in\n     * \tAndrew Tanenbaum's book \"Computer Networks\". It was rewritten\n     * \tin C and used in Perl release 4.035. This version was rewritten\n     * \tin Java by David Scott, Siemens Ltd., Australia.\n     *\n     * \tFor further details on the methods in this class, refer to the\n     * \tUnix man pages for crypt(3c).\n     */\n    private static byte[] InitialTr = { 58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4, 62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8, 57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3, 61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7 };\n\n    private static byte[] FinalTr = { 40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31, 38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29, 36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27, 34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25 };\n\n    private static byte[] swap = { 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 };\n\n    private static byte[] KeyTr1 = { 57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4 };\n\n    private static byte[] KeyTr2 = { 14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32 };\n\n    private static byte[] etr = { 32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13, 12, 13, 14, 15, 16, 17, 16, 17, 18, 19, 20, 21, 20, 21, 22, 23, 24, 25, 24, 25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1 };\n\n    private static byte[] ptr = { 16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10, 2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25 };\n\n    private static byte[][] s_boxes = { { 14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7, 0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8, 4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0, 15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 }, { 15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10, 3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5, 0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15, 13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 }, { 10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8, 13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1, 13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7, 1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 }, { 7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15, 13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9, 10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4, 3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 }, { 2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9, 14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6, 4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14, 11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 }, { 12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11, 10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8, 9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6, 4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 }, { 4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1, 13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6, 1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2, 6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12 }, { 13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7, 1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2, 7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8, 2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11 } };\n\n    private static int[] rots = { 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1 };\n\n    private static byte[] key = new byte[64];\n\n    private static byte[] EP = etr;\n\n    /* *** Methods start here *** */\n    private static void transpose(byte[] data, byte[] t, int n) {\n        byte[] x = new byte[64];\n        System.arraycopy(data, 0, x, 0, x.length);\n        while (n-- > 0) {\n            data[n] = x[t[n] - 1];\n        }\n    }\n\n    private static void rotate(byte[] key) {\n        byte[] x = new byte[64];\n        System.arraycopy(key, 0, x, 0, x.length);\n        for (int i = 0; i < 55; i++) {\n            x[i] = x[i + 1];\n        }\n        x[27] = key[0];\n        x[55] = key[28];\n        System.arraycopy(x, 0, key, 0, key.length);\n    }\n\n    private static void f(int i, byte[] key, byte[] a, byte[] x) {\n        byte[] e = new byte[64];\n        byte[] ikey = new byte[64];\n        byte[] y = new byte[64];\n        System.arraycopy(a, 0, e, 0, e.length);\n        transpose(e, EP, 48);\n        for (int j = rots[i]; j > 0; j--) {\n            rotate(key);\n        }\n        System.arraycopy(key, 0, ikey, 0, ikey.length);\n        transpose(ikey, KeyTr2, 48);\n        for (int j = 0; j < 48; j++) {\n            y[j] = (byte) (e[j] ^ ikey[j]);\n        }\n        for (int j = 0; j < 8; j++) {\n            int k = j + 1;\n            int r = 32 * y[6 * k - 6] + 8 * y[6 * k - 5] + 4 * y[6 * k - 4] + 2 * y[6 * k - 3] + y[6 * k - 2] + 16 * y[6 * k - 1];\n            int xb = s_boxes[j][r];\n            x[4 * k - 4] = (byte) ((xb >> 3) & 1);\n            x[4 * k - 3] = (byte) ((xb >> 2) & 1);\n            x[4 * k - 2] = (byte) ((xb >> 1) & 1);\n            x[4 * k - 1] = (byte) (xb & 1);\n        }\n        transpose(x, ptr, 32);\n    }\n\n    private static void definekey(byte[] k) {\n        System.arraycopy(k, 0, key, 0, key.length);\n        transpose(key, KeyTr1, 56);\n    }\n\n    private static void encrypt(byte[] blck, int edflag) {\n        byte[] p = blck;\n        transpose(p, InitialTr, 64);\n        for (int i = 15; i >= 0; i--) {\n            int j = edflag > 0 ? i : 15 - i;\n            byte[] b = new byte[64];\n            System.arraycopy(p, 0, b, 0, b.length);\n            byte[] x = new byte[64];\n            for (int k = 31; k >= 0; k--) {\n                p[k] = b[k + 32];\n            }\n            f(j, key, p, x);\n            for (int k = 31; k >= 0; k--) {\n                p[k + 32] = (byte) (b[k] ^ x[k]);\n            }\n        }\n        transpose(p, swap, 64);\n        transpose(p, FinalTr, 64);\n        blck = p;\n    }\n\n    /**\n     * \tReturns a String containing the encrypted passwd\n     *\n     * \t@param\tstrpw\tA String containing the un-encrypted password\n     * \t@param\tstrsalt\tA 2 character String, containing the salt to\n     * \t\t\t\t\tencrypt the password with.\n     * \t@returns\t\tString containing encrypted password.\n     */\n    public static String crypt(String strpw, String strsalt) {\n        char[] pw = strpw.toCharArray();\n        char[] salt = strsalt.toCharArray();\n        byte[] pwb = new byte[66];\n        char[] result = new char[13];\n        byte[] new_etr = new byte[etr.length];\n        int n = 0;\n        int m = 0;\n        while (m < pw.length && n < 64) {\n            for (int j = 6; j >= 0; j--) {\n                pwb[n++] = (byte) ((pw[m] >> j) & 1);\n            }\n            // Increment pw\n            m++;\n            pwb[n++] = 0;\n        }\n        while (n < 64) {\n            pwb[n++] = 0;\n        }\n        definekey(pwb);\n        for (n = 0; n < 66; n++) {\n            pwb[n] = 0;\n        }\n        System.arraycopy(etr, 0, new_etr, 0, new_etr.length);\n        EP = new_etr;\n        for (int i = 0; i < 2; i++) {\n            char c = salt[i];\n            result[i] = c;\n            if (c > 'Z') {\n                // c was a lowercase letter\n                c -= 6 + 7 + '.';\n            } else if (c > '9') {\n                // c was a uppercase letter\n                c -= 7 + '.';\n            } else {\n                // c was a digit, '.' or '/'\n                c -= '.';\n            }\n            // now, 0 <= c <= 63\n            for (int j = 0; j < 6; j++) {\n                if (((c >> j) & 1) == 1) {\n                    byte t = (byte) (6 * i + j);\n                    byte temp = new_etr[t];\n                    new_etr[t] = new_etr[t + 24];\n                    new_etr[t + 24] = temp;\n                }\n            }\n        }\n        if (result[1] == 0) {\n            result[1] = result[0];\n        }\n        for (int i = 0; i < 25; i++) {\n            encrypt(pwb, 0);\n        }\n        EP = etr;\n        m = 2;\n        n = 0;\n        while (n < 66) {\n            int c = 0;\n            for (int j = 6; j > 0; j--) {\n                c <<= 1;\n                c |= pwb[n++];\n            }\n            // becomes >= '.'\n            c += '.';\n            if (c > '9') {\n                // not in [./0-9], becomes upper\n                c += 7;\n            }\n            if (c > 'Z') {\n                // not in [A-Z], becomes lower\n                c += 6;\n            }\n            result[m++] = (char) c;\n        }\n        return (new String(result));\n    }\n\n    public static String hashMD5(String baseString) {\n        MessageDigest digest = null;\n        StringBuffer hexString = new StringBuffer();\n        try {\n            digest = java.security.MessageDigest.getInstance(\"MD5\");\n            digest.update(baseString.getBytes());\n            byte[] hash = digest.digest();\n            for (int i = 0; i < hash.length; i++) {\n                if ((0xff & hash[i]) < 0x10) {\n                    hexString.append(\"0\" + Integer.toHexString((0xFF & hash[i])));\n                } else {\n                    hexString.append(Integer.toHexString(0xFF & hash[i]));\n                }\n            }\n        } catch (NoSuchAlgorithmException ex) {\n            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        return hexString.toString();\n    }\n}\n",
    "test_prompt": "// PasswordTest0.java\npackage httpanalyzer;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Password}.\n* It contains ten unit test cases for the {@link Password#crypt(String, String)} method.\n*/\nclass PasswordTest0 {"
},
{
    "id": "cmpl-6qbgYkOuai0pZoUQ2fKdGO3BljSs4",
    "object": "text_completion",
    "created": 1677995938,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with a null string.\n\t*/\n\t@Test\n\tvoid testHashMD5_NullString() {\n\t\tString baseString = null;\n\t\tString expResult = null;\n\t\tString result = Password.hashMD5(baseString);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with an empty string.\n\t*/\n\t@Test\n\tvoid testHashMD5_EmptyString() {\n\t\tString baseString = \"\";\n\t\tString expResult = \"d41d8cd98f00b204e9800998ecf8427e\";\n\t\tString result = Password.hashMD5(baseString);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with a string containing only spaces.\n\t*/\n\t@Test\n\tvoid testHashMD5_SpacesString() {\n\t\tString baseString = \"   \";\n\t\tString expResult = \"7215ee9c7d9dc229d2921a40e899ec5f\";\n\t\tString result = Password.hashMD5(baseString);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with a string containing only tabs.\n\t*/\n\t@Test\n\tvoid testHashMD5_TabsString() {\n\t\tString baseString = \"\\t\\t\\t\";\n\t\tString expResult = \"7215ee9c7d9dc229d2921a40e899ec5f\";\n\t\tString result = Password.hashMD5(baseString);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with a string containing only new lines.\n\t*/\n\t@Test\n\tvoid testHashMD5_NewLinesString() {\n\t\tString baseString = \"\\n\\n\\n\";\n\t\tString expResult = \"7215ee9c7d9dc229d2921a40e899ec5f\";\n\t\tString result = Password.hashMD5(baseString);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with a string containing only carriage returns.\n\t*/\n\t@Test\n\tvoid testHashMD5_CarriageReturnsString() {\n\t\tString baseString = \"\\r\\r\\r\";\n\t\tString expResult = \"7215ee9c7d9dc229d2921a40e899ec5f\";\n\t\tString result = Password.hashMD5(baseString);\n\t\tassertEquals(expResult, result);\n\t}\n\t\n\t/**\n\t* Test case for {@link Password#hashMD5(String)} method.\n\t* It tests the method with a string containing only spaces, tabs, new lines and carriage returns.\n\t*/\n\t@Test\n\tvoid testHashMD5_SpacesTabsNewLinesCarriageReturnsString() {\n\t\tString baseString = \" \\t\\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r\\t \\n\\r",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 4253,
        "completion_tokens": 2048,
        "total_tokens": 6301
    },
    "time_taken": 53.8649799823761,
    "prompt_id": "EvoSuiteBenchmark/32_httpanalyzer/src/main/java/httpanalyzer/PasswordTest1.java",
    "original_code": "// Password.java\npackage httpanalyzer;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * @author David Scott\n */\npublic class Password {\n\n    /**\n     * \tPassword is a class to implement password encryption as used\n     * \ton Unix systems. It is compatible with the crypt(3c) system function.\n     * \tThis version is a based on the DES encryption algorithm in\n     * \tAndrew Tanenbaum's book \"Computer Networks\". It was rewritten\n     * \tin C and used in Perl release 4.035. This version was rewritten\n     * \tin Java by David Scott, Siemens Ltd., Australia.\n     *\n     * \tFor further details on the methods in this class, refer to the\n     * \tUnix man pages for crypt(3c).\n     */\n    private static byte[] InitialTr = { 58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4, 62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8, 57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3, 61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7 };\n\n    private static byte[] FinalTr = { 40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31, 38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29, 36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27, 34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25 };\n\n    private static byte[] swap = { 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 };\n\n    private static byte[] KeyTr1 = { 57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4 };\n\n    private static byte[] KeyTr2 = { 14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32 };\n\n    private static byte[] etr = { 32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13, 12, 13, 14, 15, 16, 17, 16, 17, 18, 19, 20, 21, 20, 21, 22, 23, 24, 25, 24, 25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1 };\n\n    private static byte[] ptr = { 16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10, 2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25 };\n\n    private static byte[][] s_boxes = { { 14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7, 0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8, 4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0, 15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 }, { 15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10, 3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5, 0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15, 13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 }, { 10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8, 13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1, 13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7, 1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 }, { 7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15, 13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9, 10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4, 3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 }, { 2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9, 14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6, 4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14, 11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 }, { 12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11, 10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8, 9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6, 4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 }, { 4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1, 13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6, 1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2, 6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12 }, { 13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7, 1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2, 7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8, 2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11 } };\n\n    private static int[] rots = { 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1 };\n\n    private static byte[] key = new byte[64];\n\n    private static byte[] EP = etr;\n\n    /* *** Methods start here *** */\n    private static void transpose(byte[] data, byte[] t, int n) {\n        byte[] x = new byte[64];\n        System.arraycopy(data, 0, x, 0, x.length);\n        while (n-- > 0) {\n            data[n] = x[t[n] - 1];\n        }\n    }\n\n    private static void rotate(byte[] key) {\n        byte[] x = new byte[64];\n        System.arraycopy(key, 0, x, 0, x.length);\n        for (int i = 0; i < 55; i++) {\n            x[i] = x[i + 1];\n        }\n        x[27] = key[0];\n        x[55] = key[28];\n        System.arraycopy(x, 0, key, 0, key.length);\n    }\n\n    private static void f(int i, byte[] key, byte[] a, byte[] x) {\n        byte[] e = new byte[64];\n        byte[] ikey = new byte[64];\n        byte[] y = new byte[64];\n        System.arraycopy(a, 0, e, 0, e.length);\n        transpose(e, EP, 48);\n        for (int j = rots[i]; j > 0; j--) {\n            rotate(key);\n        }\n        System.arraycopy(key, 0, ikey, 0, ikey.length);\n        transpose(ikey, KeyTr2, 48);\n        for (int j = 0; j < 48; j++) {\n            y[j] = (byte) (e[j] ^ ikey[j]);\n        }\n        for (int j = 0; j < 8; j++) {\n            int k = j + 1;\n            int r = 32 * y[6 * k - 6] + 8 * y[6 * k - 5] + 4 * y[6 * k - 4] + 2 * y[6 * k - 3] + y[6 * k - 2] + 16 * y[6 * k - 1];\n            int xb = s_boxes[j][r];\n            x[4 * k - 4] = (byte) ((xb >> 3) & 1);\n            x[4 * k - 3] = (byte) ((xb >> 2) & 1);\n            x[4 * k - 2] = (byte) ((xb >> 1) & 1);\n            x[4 * k - 1] = (byte) (xb & 1);\n        }\n        transpose(x, ptr, 32);\n    }\n\n    private static void definekey(byte[] k) {\n        System.arraycopy(k, 0, key, 0, key.length);\n        transpose(key, KeyTr1, 56);\n    }\n\n    private static void encrypt(byte[] blck, int edflag) {\n        byte[] p = blck;\n        transpose(p, InitialTr, 64);\n        for (int i = 15; i >= 0; i--) {\n            int j = edflag > 0 ? i : 15 - i;\n            byte[] b = new byte[64];\n            System.arraycopy(p, 0, b, 0, b.length);\n            byte[] x = new byte[64];\n            for (int k = 31; k >= 0; k--) {\n                p[k] = b[k + 32];\n            }\n            f(j, key, p, x);\n            for (int k = 31; k >= 0; k--) {\n                p[k + 32] = (byte) (b[k] ^ x[k]);\n            }\n        }\n        transpose(p, swap, 64);\n        transpose(p, FinalTr, 64);\n        blck = p;\n    }\n\n    /**\n     * \tReturns a String containing the encrypted passwd\n     *\n     * \t@param\tstrpw\tA String containing the un-encrypted password\n     * \t@param\tstrsalt\tA 2 character String, containing the salt to\n     * \t\t\t\t\tencrypt the password with.\n     * \t@returns\t\tString containing encrypted password.\n     */\n    public static String crypt(String strpw, String strsalt) {\n        char[] pw = strpw.toCharArray();\n        char[] salt = strsalt.toCharArray();\n        byte[] pwb = new byte[66];\n        char[] result = new char[13];\n        byte[] new_etr = new byte[etr.length];\n        int n = 0;\n        int m = 0;\n        while (m < pw.length && n < 64) {\n            for (int j = 6; j >= 0; j--) {\n                pwb[n++] = (byte) ((pw[m] >> j) & 1);\n            }\n            // Increment pw\n            m++;\n            pwb[n++] = 0;\n        }\n        while (n < 64) {\n            pwb[n++] = 0;\n        }\n        definekey(pwb);\n        for (n = 0; n < 66; n++) {\n            pwb[n] = 0;\n        }\n        System.arraycopy(etr, 0, new_etr, 0, new_etr.length);\n        EP = new_etr;\n        for (int i = 0; i < 2; i++) {\n            char c = salt[i];\n            result[i] = c;\n            if (c > 'Z') {\n                // c was a lowercase letter\n                c -= 6 + 7 + '.';\n            } else if (c > '9') {\n                // c was a uppercase letter\n                c -= 7 + '.';\n            } else {\n                // c was a digit, '.' or '/'\n                c -= '.';\n            }\n            // now, 0 <= c <= 63\n            for (int j = 0; j < 6; j++) {\n                if (((c >> j) & 1) == 1) {\n                    byte t = (byte) (6 * i + j);\n                    byte temp = new_etr[t];\n                    new_etr[t] = new_etr[t + 24];\n                    new_etr[t + 24] = temp;\n                }\n            }\n        }\n        if (result[1] == 0) {\n            result[1] = result[0];\n        }\n        for (int i = 0; i < 25; i++) {\n            encrypt(pwb, 0);\n        }\n        EP = etr;\n        m = 2;\n        n = 0;\n        while (n < 66) {\n            int c = 0;\n            for (int j = 6; j > 0; j--) {\n                c <<= 1;\n                c |= pwb[n++];\n            }\n            // becomes >= '.'\n            c += '.';\n            if (c > '9') {\n                // not in [./0-9], becomes upper\n                c += 7;\n            }\n            if (c > 'Z') {\n                // not in [A-Z], becomes lower\n                c += 6;\n            }\n            result[m++] = (char) c;\n        }\n        return (new String(result));\n    }\n\n    public static String hashMD5(String baseString) {\n        MessageDigest digest = null;\n        StringBuffer hexString = new StringBuffer();\n        try {\n            digest = java.security.MessageDigest.getInstance(\"MD5\");\n            digest.update(baseString.getBytes());\n            byte[] hash = digest.digest();\n            for (int i = 0; i < hash.length; i++) {\n                if ((0xff & hash[i]) < 0x10) {\n                    hexString.append(\"0\" + Integer.toHexString((0xFF & hash[i])));\n                } else {\n                    hexString.append(Integer.toHexString(0xFF & hash[i]));\n                }\n            }\n        } catch (NoSuchAlgorithmException ex) {\n            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        return hexString.toString();\n    }\n}\n",
    "test_prompt": "// PasswordTest1.java\npackage httpanalyzer;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Password}.\n* It contains ten unit test cases for the {@link Password#hashMD5(String)} method.\n*/\nclass PasswordTest1 {"
}
]